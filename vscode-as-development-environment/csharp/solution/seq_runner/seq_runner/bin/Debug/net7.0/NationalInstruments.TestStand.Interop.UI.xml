<?xml version="1.0"?><doc><members>
    <member name="T:NationalInstruments.TestStand.Interop.UI.Button">
      <summary>Connect a manager control to a Button control to specify that the button performs a common user interface command, such as <c>Open Sequence File</c>. The Button control uses a localized caption and automatically enables or disables depending on the application state.</summary>
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IButton">
      <summary>Connect a manager control to a Button control to specify that the button performs a common user interface command, such as <c>Open Sequence File</c>. The Button control uses a localized caption and automatically enables or disables depending on the application state.</summary>
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ButtonClass">
      <summary>Connect a manager control to a Button control to specify that the button performs a common user interface command, such as <c>Open Sequence File</c>. The Button control uses a localized caption and automatically enables or disables depending on the application state.</summary>
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.Enabled">
      <summary>The control responds to user-generated events only when this property is <c>True</c>.</summary>
      <remarks>When you connect this control to a manager control, the manager control sets this property automatically.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.Enabled">
      <summary>The control responds to user-generated events only when this property is <c>True</c>.</summary>
      <remarks>When you connect this control to a manager control, the manager control sets this property automatically.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the Button.MouseIcon property specifies.</remarks>
      <seealso cref="Button.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the Button.MouseIcon property specifies.</remarks>
      <seealso cref="Button.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.MouseIcon">
      <summary>Specifies the custom mouse icon for the control.</summary>
      <remarks>The control displays the specified picture as the cursor when the value of the Button.MousePointer property is <c>MousePointer_Custom</c>. When you set this property to <c>NULL</c>, the value of the <c>Button.MousePointer</c> property changes to <c>MousePointer_Default</c>. 
<para>Note: This property requires that the picture value is an icon.</para></remarks>
      <seealso cref="Button.MousePointer" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.MouseIcon">
      <summary>Specifies the custom mouse icon for the control.</summary>
      <remarks>The control displays the specified picture as the cursor when the value of the Button.MousePointer property is <c>MousePointer_Custom</c>. When you set this property to <c>NULL</c>, the value of the <c>Button.MousePointer</c> property changes to <c>MousePointer_Default</c>. 
<para>Note: This property requires that the picture value is an icon.</para></remarks>
      <seealso cref="Button.MousePointer" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.Font">
      <summary>Specifies the font for the control when the value of the Button.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="Button.FontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.Font">
      <summary>Specifies the font for the control when the value of the Button.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="Button.FontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.Caption">
      <summary>Specifies the text the control displays.</summary>
      <remarks>In the caption, include an ampersand (<c>&amp;</c>) immediately before the character, if any, you want to designate as an accelerator character. The character displays as underlined. Press &lt;Alt&gt; and the underlined character to move the focus to the control. To include an ampersand character in a caption without creating an accelerator character, include two consecutive ampersands. A single ampersand displays in the caption and no characters display as underlined.
When you connect this control to a manager control, the manager control sets this property automatically.</remarks>
      <seealso cref="Button.UseMnemonic" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.Caption">
      <summary>Specifies the text the control displays.</summary>
      <remarks>In the caption, include an ampersand (<c>&amp;</c>) immediately before the character, if any, you want to designate as an accelerator character. The character displays as underlined. Press &lt;Alt&gt; and the underlined character to move the focus to the control. To include an ampersand character in a caption without creating an accelerator character, include two consecutive ampersands. A single ampersand displays in the caption and no characters display as underlined.
When you connect this control to a manager control, the manager control sets this property automatically.</remarks>
      <seealso cref="Button.UseMnemonic" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.Value">
      <summary>This property is <c>True</c> when the button is pressed and <c>False</c> when the button is not pressed. Use this property when the value of the ButtonActionStyles enumeration is <c>ButtonActionStyle_ToggleButton</c> to set the pressed state of the button.</summary>
      <remarks>Setting this property generates a Button.Click event.
<para>Note: You cannot set this property at design time.</para></remarks>
      <seealso cref="Button.Click" />
      <seealso cref="Button.DoClick" />
      <seealso cref="ButtonActionStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.Value">
      <summary>This property is <c>True</c> when the button is pressed and <c>False</c> when the button is not pressed. Use this property when the value of the ButtonActionStyles enumeration is <c>ButtonActionStyle_ToggleButton</c> to set the pressed state of the button.</summary>
      <remarks>Setting this property generates a Button.Click event.
<para>Note: You cannot set this property at design time.</para></remarks>
      <seealso cref="Button.Click" />
      <seealso cref="Button.DoClick" />
      <seealso cref="ButtonActionStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.AutoSizing">
      <summary>Specifies whether the control automatically resizes when the text of the control changes.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.AutoSizing">
      <summary>Specifies whether the control automatically resizes when the text of the control changes.</summary>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ButtonEvents_Event.Click">
      <summary>Occurs when you press and release the mouse on the control, or when the Button.Value property of the control changes.</summary>
      <seealso cref="Button.DoClick" />
      <seealso cref="Button.MouseDown" />
      <seealso cref="Button.MouseMove" />
      <seealso cref="Button.MouseUp" />
      <seealso cref="Button.Value" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ButtonEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the control has the input focus. This event occurs before the Button.KeyPress event.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="Button.KeyPress" />
      <seealso cref="Button.KeyUp" />
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ButtonEvents_Event.KeyPress">
      <summary>Occurs when the user presses a key while the control has the input focus. This event occurs after the Button.KeyDown event.</summary>
      <param name="keyAscii">Specifies the ASCII value of the pressed key.</param>
      <seealso cref="Button.KeyDown" />
      <seealso cref="Button.KeyUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ButtonEvents_Event.KeyUp">
      <summary>Occurs when the user releases a key while the control has the input focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="Button.KeyDown" />
      <seealso cref="Button.KeyPress" />
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ButtonEvents_Event.MouseDown">
      <summary>Occurs when the user clicks the mouse on the control. This event occurs before the Button.MouseUp event.</summary>
      <param name="btn">Specifies a MouseButtons constant that specifies the mouse button the user pressed to generate this event.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="Button.Click" />
      <seealso cref="Button.MouseMove" />
      <seealso cref="Button.MouseUp" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ButtonEvents_Event.MouseMove">
      <summary>Occurs when the user moves the mouse over the control.</summary>
      <param name="btn">Specifies what mouse buttons are pressed. You can use any combination of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="Button.Click" />
      <seealso cref="Button.MouseDown" />
      <seealso cref="Button.MouseUp" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ButtonEvents_Event.MouseUp">
      <summary>Occurs when the user releases the mouse button on the control. This event occurs before the Button.Click event.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="Button.Click" />
      <seealso cref="Button.MouseDown" />
      <seealso cref="Button.MouseMove" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IButton.Localize(System.String)">
      <summary>Localizes the text caption on the button in this control.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the caption for the control. 
When you call this method, the control replaces the caption with the string from the <c>.ini</c> file. If the caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect this control to a manager control, the manager control automatically sets a localized caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ButtonClass.Localize(System.String)">
      <summary>Localizes the text caption on the button in this control.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the caption for the control. 
When you call this method, the control replaces the caption with the string from the <c>.ini</c> file. If the caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect this control to a manager control, the manager control automatically sets a localized caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IButton.DoClick">
      <summary>Call this method to simulate a button click.</summary>
      <seealso cref="Button.Click" />
      <seealso cref="Button.Value" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ButtonClass.DoClick">
      <summary>Call this method to simulate a button click.</summary>
      <seealso cref="Button.Click" />
      <seealso cref="Button.Value" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the Button.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="Button.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the Button.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="Button.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ButtonEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.Style">
      <summary>Specifies the appearance of the Button control.</summary>
      <seealso cref="Button.ActionStyle" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.Style">
      <summary>Specifies the appearance of the Button control.</summary>
      <seealso cref="Button.ActionStyle" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.Image">
      <summary>Specifies a custom graphic for the Button control.</summary>
      <remarks>Use the Engine.Images property to obtain the TestStand images collection, and use the Images.FindImage method to obtain a particular image reference. Icon files are located in the <c>&lt;TestStand&gt;\Components\Icons</c> and <c>&lt;TestStand&#160;Public&gt;\Components\Icons</c> directories.</remarks>
      <seealso cref="Button.BackColor" />
      <seealso cref="Button.ImageAlignment" />
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.Image">
      <summary>Specifies a custom graphic for the Button control.</summary>
      <remarks>Use the Engine.Images property to obtain the TestStand images collection, and use the Images.FindImage method to obtain a particular image reference. Icon files are located in the <c>&lt;TestStand&gt;\Components\Icons</c> and <c>&lt;TestStand&#160;Public&gt;\Components\Icons</c> directories.</remarks>
      <seealso cref="Button.BackColor" />
      <seealso cref="Button.ImageAlignment" />
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.TextAlignment">
      <summary>Specifies the horizontal and vertical alignment of text on a Button control.</summary>
      <seealso cref="Button.Caption" />
      <seealso cref="Button.ImageAlignment" />
      <seealso cref="Button.ShowText" />
      <seealso cref="Button.TextImageRelation" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.TextAlignment">
      <summary>Specifies the horizontal and vertical alignment of text on a Button control.</summary>
      <seealso cref="Button.Caption" />
      <seealso cref="Button.ImageAlignment" />
      <seealso cref="Button.ShowText" />
      <seealso cref="Button.TextImageRelation" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.ImageAlignment">
      <summary>Specifies the horizontal and vertical alignment of an image on a Button control.</summary>
      <seealso cref="Button.Image" />
      <seealso cref="Button.ShowImage" />
      <seealso cref="Button.TextAlignment" />
      <seealso cref="Button.TextImageRelation" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.ImageAlignment">
      <summary>Specifies the horizontal and vertical alignment of an image on a Button control.</summary>
      <seealso cref="Button.Image" />
      <seealso cref="Button.ShowImage" />
      <seealso cref="Button.TextAlignment" />
      <seealso cref="Button.TextImageRelation" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.TextImageRelation">
      <summary>Specifies how to display the image in relation to the text on the Button control.</summary>
      <remarks>This property has an effect only when the Button.ImageAlignment and Button.TextAlignment properties are set to the same value. When the values are different, TestStand ignores the <c>Button.TextImageRelation</c> property.</remarks>
      <seealso cref="Button.ImageAlignment" />
      <seealso cref="Button.ShowImage" />
      <seealso cref="Button.ShowText" />
      <seealso cref="Button.TextAlignment" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.TextImageRelation">
      <summary>Specifies how to display the image in relation to the text on the Button control.</summary>
      <remarks>This property has an effect only when the Button.ImageAlignment and Button.TextAlignment properties are set to the same value. When the values are different, TestStand ignores the <c>Button.TextImageRelation</c> property.</remarks>
      <seealso cref="Button.ImageAlignment" />
      <seealso cref="Button.ShowImage" />
      <seealso cref="Button.ShowText" />
      <seealso cref="Button.TextAlignment" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.ShowImage">
      <summary>Specifies whether the button displays an image.</summary>
      <seealso cref="Button.Image" />
      <seealso cref="Button.ShowText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.ShowImage">
      <summary>Specifies whether the button displays an image.</summary>
      <seealso cref="Button.Image" />
      <seealso cref="Button.ShowText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.ShowText">
      <summary>Specifies whether the button displays a text label.</summary>
      <seealso cref="Button.Caption" />
      <seealso cref="Button.ShowImage" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.ShowText">
      <summary>Specifies whether the button displays a text label.</summary>
      <seealso cref="Button.Caption" />
      <seealso cref="Button.ShowImage" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.BackColor">
      <summary>Specifies the background color for the Button control. </summary>
      <remarks>When you set the Button.Style property to ButtonStyle_ToolBar, this setting applies to the face and border of the button. When you set the <c>Button.Style</c> property to ButtonStyle_Standard, the button face adheres to the system settings, and this setting affects only the border of the button.</remarks>
      <seealso cref="Button.ForeColor" />
      <seealso cref="Button.Style" />
      <seealso cref="ButtonStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.BackColor">
      <summary>Specifies the background color for the Button control. </summary>
      <remarks>When you set the Button.Style property to ButtonStyle_ToolBar, this setting applies to the face and border of the button. When you set the <c>Button.Style</c> property to ButtonStyle_Standard, the button face adheres to the system settings, and this setting affects only the border of the button.</remarks>
      <seealso cref="Button.ForeColor" />
      <seealso cref="Button.Style" />
      <seealso cref="ButtonStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.ForeColor">
      <summary>Specifies the text color for the Button control.</summary>
      <remarks>Use the Button.BackColor property to change the face and border color of the control.</remarks>
      <seealso cref="Button.BackColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.ForeColor">
      <summary>Specifies the text color for the Button control.</summary>
      <remarks>Use the Button.BackColor property to change the face and border color of the control.</remarks>
      <seealso cref="Button.BackColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.ActionStyle">
      <summary>Specifies how the button behaves when you click it.</summary>
      <seealso cref="Button.Style" />
      <seealso cref="Button.Value" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.ActionStyle">
      <summary>Specifies how the button behaves when you click it.</summary>
      <seealso cref="Button.Style" />
      <seealso cref="Button.Value" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.ToolTipText">
      <summary>Specifies the tooltip for the Button control. When this property is an empty string, the Button control uses the Button.Caption property for the tooltip.</summary>
      <seealso cref="Button.Caption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.ToolTipText">
      <summary>Specifies the tooltip for the Button control. When this property is an empty string, the Button control uses the Button.Caption property for the tooltip.</summary>
      <seealso cref="Button.Caption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.UseMnemonic">
      <summary>The button interprets the character that follows an ampersand (<c>&amp;</c>) character in the Button.Caption property as an accelerator character when this property is <c>True</c>.</summary>
      <seealso cref="Button.Caption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.UseMnemonic">
      <summary>The button interprets the character that follows an ampersand (<c>&amp;</c>) character in the Button.Caption property as an accelerator character when this property is <c>True</c>.</summary>
      <seealso cref="Button.Caption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.UseMaskColor">
      <summary>The control uses the color the Button.MaskColor property specifies as a mask color when this property is <c>True</c>. You can use the mask color to create transparent regions.</summary>
      <remarks>This property is used only when the button displays an image.</remarks>
      <seealso cref="Button.MaskColor" />
      <seealso cref="Button.ShowImage" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.UseMaskColor">
      <summary>The control uses the color the Button.MaskColor property specifies as a mask color when this property is <c>True</c>. You can use the mask color to create transparent regions.</summary>
      <remarks>This property is used only when the button displays an image.</remarks>
      <seealso cref="Button.MaskColor" />
      <seealso cref="Button.ShowImage" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IButton.MaskColor">
      <summary>Specifies a color in the picture of the control to use as a mask color when the Button.UseMaskColor property is <c>True</c>. You can use the mask color to create transparent regions.</summary>
      <remarks>This property is used only when the button displays an image.</remarks>
      <seealso cref="Button.ShowImage" />
      <seealso cref="Button.UseMaskColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ButtonClass.MaskColor">
      <summary>Specifies a color in the picture of the control to use as a mask color when the Button.UseMaskColor property is <c>True</c>. You can use the mask color to create transparent regions.</summary>
      <remarks>This property is used only when the button displays an image.</remarks>
      <seealso cref="Button.ShowImage" />
      <seealso cref="Button.UseMaskColor" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEdit">
      <summary>Use an ExpressionEdit control so users can edit a TestStand expression with syntax coloring, popup help, and statement completion. Although you typically do not need to edit expressions in a user interface application, you can connect a manager control to a read-only ExpressionEdit control to display text information about the application state, such as the pathname of the sequence file selection or the name of the current user.
You can also use ExpressionEdit controls in dialog boxes for step types and in tools in which you prompt users to enter a TestStand expression.</summary>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IExpressionEdit">
      <summary>Use an ExpressionEdit control so users can edit a TestStand expression with syntax coloring, popup help, and statement completion. Although you typically do not need to edit expressions in a user interface application, you can connect a manager control to a read-only ExpressionEdit control to display text information about the application state, such as the pathname of the sequence file selection or the name of the current user.
You can also use ExpressionEdit controls in dialog boxes for step types and in tools in which you prompt users to enter a TestStand expression.</summary>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass">
      <summary>Use an ExpressionEdit control so users can edit a TestStand expression with syntax coloring, popup help, and statement completion. Although you typically do not need to edit expressions in a user interface application, you can connect a manager control to a read-only ExpressionEdit control to display text information about the application state, such as the pathname of the sequence file selection or the name of the current user.
You can also use ExpressionEdit controls in dialog boxes for step types and in tools in which you prompt users to enter a TestStand expression.</summary>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.NumericFormat">
      <summary>Specifies the format string that the ExpressionEdit control uses to calculate the formatted value of the text when the ExpressionEdit.DisplayFormattedValue property is <c>True</c>. Assign any string to this property that you would pass as the formatString parameter in the PropertyObject.GetFormattedValue method.</summary>
      <seealso cref="ExpressionEdit.DisplayFormattedValue" />
      <seealso cref="&quot;PropertyObject.GetFormattedValue&quot;javascript:APILink('/RefTopics/PropertyObject_GetFormattedValue_M.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.NumericFormat">
      <summary>Specifies the format string that the ExpressionEdit control uses to calculate the formatted value of the text when the ExpressionEdit.DisplayFormattedValue property is <c>True</c>. Assign any string to this property that you would pass as the formatString parameter in the PropertyObject.GetFormattedValue method.</summary>
      <seealso cref="ExpressionEdit.DisplayFormattedValue" />
      <seealso cref="&quot;PropertyObject.GetFormattedValue&quot;javascript:APILink('/RefTopics/PropertyObject_GetFormattedValue_M.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.GetAdditionalEvaluationConstants">
      <summary>Returns a copy of the additional constants you passed to the ExpressionEdit.SetAdditionalEvaluationConstants method.</summary>
      <seealso cref="ExpressionEdit.SetAdditionalEvaluationConstants" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.GetAdditionalEvaluationConstants">
      <summary>Returns a copy of the additional constants you passed to the ExpressionEdit.SetAdditionalEvaluationConstants method.</summary>
      <seealso cref="ExpressionEdit.SetAdditionalEvaluationConstants" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.SetAdditionalEvaluationConstants(System.Object[])">
      <summary>Use this method to specify additional constants that the expression can contain that are not part of the Context. The ExpressionEdit control does not consider an identifier that has the same name as one of these constants as an error.</summary>
      <remarks>This method is useful when the expression can contain a constant from an enumeration, such as a parameter value of a module call when the type of that parameter is an enumeration.</remarks>
      <param name="val">Specifies variables that are valid in the expression but are not part of the context. For example, include a numeric or string PropertyObject where the name and value of the object are the name and value of the enumeration or constant. The control ignores subproperties of the object.</param>
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="ExpressionEdit.GetAdditionalEvaluationConstants" />
      <seealso cref="&quot;PropertyObject&quot;javascript:APILink('/RefTopics/PropertyObject.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.SetAdditionalEvaluationConstants(System.Object[])">
      <summary>Use this method to specify additional constants that the expression can contain that are not part of the Context. The ExpressionEdit control does not consider an identifier that has the same name as one of these constants as an error.</summary>
      <remarks>This method is useful when the expression can contain a constant from an enumeration, such as a parameter value of a module call when the type of that parameter is an enumeration.</remarks>
      <param name="val">Specifies variables that are valid in the expression but are not part of the context. For example, include a numeric or string PropertyObject where the name and value of the object are the name and value of the enumeration or constant. The control ignores subproperties of the object.</param>
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="ExpressionEdit.GetAdditionalEvaluationConstants" />
      <seealso cref="&quot;PropertyObject&quot;javascript:APILink('/RefTopics/PropertyObject.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.CreateContextMenu">
      <summary>Occurs just before the ExpressionEdit control displays its context menu. Use this event to add or remove items from the context menu of the ExpressionEdit control.</summary>
      <remarks>The ExpressionEdit control creates a new context menu every time it displays its context menu to the user.</remarks>
      <param name="menuHandle">Specifies the Microsoft Windows menu handle (HMENU) of the context menu. Use menu functions in the Windows Software Development Kit to modify this menu. Use the ExpressionEdit.ContextMenuItemClick event to respond to the user clicking menu items you add.

When the context menu closes, the control disposes of the menu items. Thus, you do not need to dispose of menu items you insert.</param>
      <param name="x">Specifies where the left edge of the context menu is visible, relative to the control.</param>
      <param name="y">Specifies where the top edge of the context menu is visible, relative to the control.</param>
      <seealso cref="ExpressionEdit.ContextMenuItemClick" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.ContextMenuItemClick">
      <summary>Occurs when the user selects a menu item from the ExpressionEdit control context menu.</summary>
      <param name="menuItemId">Specifies the menu item ID of the menu item the user selects.</param>
      <seealso cref="ExpressionEdit.CreateContextMenu" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.ContextChanged">
      <summary>Occurs when the ExpressionEdit.Context property changes.</summary>
      <param name="reason">Specifies how the <c>ExpressionEdit.Context</c> property changed.</param>
      <seealso cref="ExpressionEdit.Context" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.CheckExpression">
      <summary>Occurs when the control checks the expression for errors. </summary>
      <remarks>The initial values of the event parameters indicate whether the control detected an error in the expression. Use the event to evaluate, modify, or ignore the error or to perform and report additional expression checking on the expression.</remarks>
      <param name="errorCode">Specifies the error code for an error that exists in the expression.</param>
      <param name="errorDescription">Specifies the error description for an error that exists in the expression.</param>
      <param name="errorStartPosition">Specifies the starting index of the error when an error exists in the expression.</param>
      <param name="errorEndPosition">Specifies one character past the ending index of the error when an error exists in the expression.</param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Engine">
      <summary>Specifies a reference to the Engine object. The ExpressionEdit control uses the <c>Engine</c> object for the following purposes:<para><para>&#160;&#160;&#160;&#160;* Displaying the Expression Browser dialog box.</para><para>&#160;&#160;&#160;&#160;* Displaying the Expression Editing Options dialog box, which you can access through the Options item in the context menu of the ExpressionEdit control.</para><para>&#160;&#160;&#160;&#160;* Reading options configured in the Expression Editing Options dialog box.</para></para></summary>
      <remarks>You do not need to set this property because the ExpressionEdit control automatically obtains a reference to an <c>Engine</c> object when a reference is needed. However, because the ExpressionEdit control creates an <c>Engine</c> object when it cannot obtain one from the ExpressionEdit.Context property, it is useful to set this property when the <c>ExpressionEdit.Context</c> property has not been set to a PropertyObject that is also a SequenceContext and when an <c>Engine</c> object has already been created in a different process than the ExpressionEdit control. The TestStand Engine is considered needed when the <c>ExpressionEdit.Context</c> property is set or when this property is read, even when the property is read internally to launch an engine dialog box.</remarks>
      <seealso cref="&quot;Engine&quot;javascript:APILink('/RefTopics/Engine.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.Context" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Engine">
      <summary>Specifies a reference to the Engine object. The ExpressionEdit control uses the <c>Engine</c> object for the following purposes:<para><para>&#160;&#160;&#160;&#160;* Displaying the Expression Browser dialog box.</para><para>&#160;&#160;&#160;&#160;* Displaying the Expression Editing Options dialog box, which you can access through the Options item in the context menu of the ExpressionEdit control.</para><para>&#160;&#160;&#160;&#160;* Reading options configured in the Expression Editing Options dialog box.</para></para></summary>
      <remarks>You do not need to set this property because the ExpressionEdit control automatically obtains a reference to an <c>Engine</c> object when a reference is needed. However, because the ExpressionEdit control creates an <c>Engine</c> object when it cannot obtain one from the ExpressionEdit.Context property, it is useful to set this property when the <c>ExpressionEdit.Context</c> property has not been set to a PropertyObject that is also a SequenceContext and when an <c>Engine</c> object has already been created in a different process than the ExpressionEdit control. The TestStand Engine is considered needed when the <c>ExpressionEdit.Context</c> property is set or when this property is read, even when the property is read internally to launch an engine dialog box.</remarks>
      <seealso cref="&quot;Engine&quot;javascript:APILink('/RefTopics/Engine.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.Context" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Context">
      <summary>Specifies the set of available variables and properties for autocompletion, error checking, evaluation, and the Expression Browser dialog box. Set this property to a PropertyObject in which the expression you are editing can be evaluated.</summary>
      <remarks>The ExpressionEdit control might create an Engine object when you set the Context to a PropertyObject that is not a SequenceContext. Refer to the ExpressionEdit.Engine property for more information about creating a reference to an Engine object.</remarks>
      <seealso cref="&quot;Engine&quot;javascript:APILink('/RefTopics/Engine.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.DisplayError" />
      <seealso cref="ExpressionEdit.Engine" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
      <seealso cref="&quot;PropertyObject&quot;javascript:APILink('/RefTopics/PropertyObject.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Context">
      <summary>Specifies the set of available variables and properties for autocompletion, error checking, evaluation, and the Expression Browser dialog box. Set this property to a PropertyObject in which the expression you are editing can be evaluated.</summary>
      <remarks>The ExpressionEdit control might create an Engine object when you set the Context to a PropertyObject that is not a SequenceContext. Refer to the ExpressionEdit.Engine property for more information about creating a reference to an Engine object.</remarks>
      <seealso cref="&quot;Engine&quot;javascript:APILink('/RefTopics/Engine.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.DisplayError" />
      <seealso cref="ExpressionEdit.Engine" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
      <seealso cref="&quot;PropertyObject&quot;javascript:APILink('/RefTopics/PropertyObject.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.BackColor">
      <summary>Specifies the background color of the ExpressionEdit control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.BackColor">
      <summary>Specifies the background color of the ExpressionEdit control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Enabled">
      <summary>The control responds to user input only when this property is <c>True</c>.</summary>
      <seealso cref="ExpressionEdit.ReadOnly" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Enabled">
      <summary>The control responds to user input only when this property is <c>True</c>.</summary>
      <seealso cref="ExpressionEdit.ReadOnly" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.HideSelection">
      <summary>When this property is <c>True</c>, text selection is hidden when the ExpressionEdit control loses focus. When this property is <c>False</c>, text selection is never hidden.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.HideSelection">
      <summary>When this property is <c>True</c>, text selection is hidden when the ExpressionEdit control loses focus. When this property is <c>False</c>, text selection is never hidden.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.hWnd">
      <summary>Returns the Window handle of the ExpressionEdit control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
      <seealso cref="ExpressionEdit.AutoCompletionHwnd" />
      <seealso cref="ExpressionEdit.FunctionTipHwnd" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.hWnd">
      <summary>Returns the Window handle of the ExpressionEdit control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
      <seealso cref="ExpressionEdit.AutoCompletionHwnd" />
      <seealso cref="ExpressionEdit.FunctionTipHwnd" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.MaxLength">
      <summary>Specifies the maximum number of characters the ExpressionEdit control can contain. When the value of this property is <c>0</c>, the maximum number of characters is 64,000. You can specify a number greater than 64,000.</summary>
      <seealso cref="ExpressionEdit.Text" />
      <seealso cref="ExpressionEdit.TextLength" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.MaxLength">
      <summary>Specifies the maximum number of characters the ExpressionEdit control can contain. When the value of this property is <c>0</c>, the maximum number of characters is 64,000. You can specify a number greater than 64,000.</summary>
      <seealso cref="ExpressionEdit.Text" />
      <seealso cref="ExpressionEdit.TextLength" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.MouseIcon">
      <summary>Displays the specified picture as the cursor for the ExpressionEdit control.</summary>
      <remarks>The value of the ExpressionEdit.MousePointer property must be <c>MousePointer_Custom</c> for you to use the <c>ExpressionEdit.MouseIcon</c> property. When you set this property to <c>NULL</c>, the value of the <c>ExpressionEdit.MousePointer</c> property changes to <c>MousePointer_Default</c>.</remarks>
      <seealso cref="ExpressionEdit.MousePointer" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.MouseIcon">
      <summary>Displays the specified picture as the cursor for the ExpressionEdit control.</summary>
      <remarks>The value of the ExpressionEdit.MousePointer property must be <c>MousePointer_Custom</c> for you to use the <c>ExpressionEdit.MouseIcon</c> property. When you set this property to <c>NULL</c>, the value of the <c>ExpressionEdit.MousePointer</c> property changes to <c>MousePointer_Default</c>.</remarks>
      <seealso cref="ExpressionEdit.MousePointer" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the ExpressionEdit.MouseIcon property specifies.</remarks>
      <seealso cref="ExpressionEdit.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the ExpressionEdit.MouseIcon property specifies.</remarks>
      <seealso cref="ExpressionEdit.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Multiline">
      <summary>Specifies whether the ExpressionEdit control is a multi-line or single-line control.</summary>
      <seealso cref="ExpressionEdit.WantReturn" />
      <seealso cref="ExpressionEdit.WordWrap" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Multiline">
      <summary>Specifies whether the ExpressionEdit control is a multi-line or single-line control.</summary>
      <seealso cref="ExpressionEdit.WantReturn" />
      <seealso cref="ExpressionEdit.WordWrap" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.ScrollBars">
      <summary>Specifies which scrollbars are visible in the ExpressionEdit control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.ScrollBars">
      <summary>Specifies which scrollbars are visible in the ExpressionEdit control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.SelLength">
      <summary>Specifies the number of characters in the current selection.</summary>
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.SelText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.SelLength">
      <summary>Specifies the number of characters in the current selection.</summary>
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.SelText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.SelStart">
      <summary>Specifies the zero-based index of the starting character for the current selection.</summary>
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.SelStart">
      <summary>Specifies the zero-based index of the starting character for the current selection.</summary>
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.SelText">
      <summary>Use this property to obtain or replace the currently selected text.</summary>
      <remarks>This property is a portion of the displayed text which is a localized expression.</remarks>
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.SelText">
      <summary>Use this property to obtain or replace the currently selected text.</summary>
      <remarks>This property is a portion of the displayed text which is a localized expression.</remarks>
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Text">
      <summary>Specifies a delocalized expression for the text in the ExpressionEdit control. The value of the ExpressionEdit.DisplayText property updates when you set this property.</summary>
      <remarks>When the ExpressionEdit.TextType property is <c>TextType_PlainText</c>, this property specifies the actual text in the ExpressionEdit control rather than a delocalized version of the text. Refer to the Engine.LocalizeExpression and Engine.DelocalizeExpression methods for more information about localized and delocalized expressions.</remarks>
      <seealso cref="&quot;Engine.DelocalizeExpression&quot;javascript:APILink('/RefTopics/Engine_DelocalizeExpression_M.htm')" />
      <seealso cref="&quot;Engine.LocalizeExpression&quot;javascript:APILink('/RefTopics/Engine_LocalizeExpression_M.htm')" />
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.MaxLength" />
      <seealso cref="ExpressionEdit.SelText" />
      <seealso cref="ExpressionEdit.TextLength" />
      <seealso cref="ExpressionEdit.TextType" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Text">
      <summary>Specifies a delocalized expression for the text in the ExpressionEdit control. The value of the ExpressionEdit.DisplayText property updates when you set this property.</summary>
      <remarks>When the ExpressionEdit.TextType property is <c>TextType_PlainText</c>, this property specifies the actual text in the ExpressionEdit control rather than a delocalized version of the text. Refer to the Engine.LocalizeExpression and Engine.DelocalizeExpression methods for more information about localized and delocalized expressions.</remarks>
      <seealso cref="&quot;Engine.DelocalizeExpression&quot;javascript:APILink('/RefTopics/Engine_DelocalizeExpression_M.htm')" />
      <seealso cref="&quot;Engine.LocalizeExpression&quot;javascript:APILink('/RefTopics/Engine_LocalizeExpression_M.htm')" />
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.MaxLength" />
      <seealso cref="ExpressionEdit.SelText" />
      <seealso cref="ExpressionEdit.TextLength" />
      <seealso cref="ExpressionEdit.TextType" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.TextLength">
      <summary>Returns the number of characters in the ExpressionEdit control text.</summary>
      <seealso cref="ExpressionEdit.MaxLength" />
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.TextLength">
      <summary>Returns the number of characters in the ExpressionEdit control text.</summary>
      <seealso cref="ExpressionEdit.MaxLength" />
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.WantReturn">
      <summary>Specifies whether the ExpressionEdit control processes the &lt;Enter&gt; key. When the ExpressionEdit control is not processing the &lt;Enter&gt; key, the &lt;Enter&gt; key goes to the default button.<para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_False</c>, the &lt;Enter&gt; key goes to the default button.</para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_True</c>, the control applies the &lt;Enter&gt; key to the expression.</para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_UsePreference</c>, the Want Return option in the Expression Editing Options dialog box determines the setting.</para></para></summary>
      <remarks>If the ExpressionEdit.Multiline property is <c>False</c>, this property is ignored and the &lt;Enter&gt; key is never processed.</remarks>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.Multiline" />
      <seealso cref="ExpressionEdit.WordWrap" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.WantReturn">
      <summary>Specifies whether the ExpressionEdit control processes the &lt;Enter&gt; key. When the ExpressionEdit control is not processing the &lt;Enter&gt; key, the &lt;Enter&gt; key goes to the default button.<para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_False</c>, the &lt;Enter&gt; key goes to the default button.</para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_True</c>, the control applies the &lt;Enter&gt; key to the expression.</para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_UsePreference</c>, the Want Return option in the Expression Editing Options dialog box determines the setting.</para></para></summary>
      <remarks>If the ExpressionEdit.Multiline property is <c>False</c>, this property is ignored and the &lt;Enter&gt; key is never processed.</remarks>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.Multiline" />
      <seealso cref="ExpressionEdit.WordWrap" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.WordWrap">
      <summary>Specifies that lines too long to display on one line wrap to the next line.<para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_False</c>, word wrap is off.</para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_True</c>, word wrap is on.</para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_UsePreference</c>, the Word Wrap option in the Expression Editing Options dialog box determines whether word wrap is on.</para></para></summary>
      <remarks>When the ExpressionEdit.Multiline property is <c>False</c>, this property is ignored.</remarks>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.Multiline" />
      <seealso cref="ExpressionEdit.WantReturn" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.WordWrap">
      <summary>Specifies that lines too long to display on one line wrap to the next line.<para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_False</c>, word wrap is off.</para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_True</c>, word wrap is on.</para><para>&#160;&#160;&#160;&#160;* When the value of this property is <c>BooleanOrPreference_UsePreference</c>, the Word Wrap option in the Expression Editing Options dialog box determines whether word wrap is on.</para></para></summary>
      <remarks>When the ExpressionEdit.Multiline property is <c>False</c>, this property is ignored.</remarks>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.Multiline" />
      <seealso cref="ExpressionEdit.WantReturn" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Font">
      <summary>Specifies the current font for the ExpressionEdit control when the value of the ExpressionEdit.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <remarks>Only the font name and size are used. All other properties of this parameter are ignored because those properties are set on a per-text element basis in the Expression Editing Options dialog box, which you can access through the Options item from the context menu of the ExpressionEdit control.</remarks>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.FontSource" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Font">
      <summary>Specifies the current font for the ExpressionEdit control when the value of the ExpressionEdit.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <remarks>Only the font name and size are used. All other properties of this parameter are ignored because those properties are set on a per-text element basis in the Expression Editing Options dialog box, which you can access through the Options item from the context menu of the ExpressionEdit control.</remarks>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.FontSource" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.FunctionTipHwnd">
      <summary>Returns the Window handle of the function tip.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
      <seealso cref="ExpressionEdit.AutoCompletionHwnd" />
      <seealso cref="ExpressionEdit.hWnd" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.FunctionTipHwnd">
      <summary>Returns the Window handle of the function tip.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
      <seealso cref="ExpressionEdit.AutoCompletionHwnd" />
      <seealso cref="ExpressionEdit.hWnd" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.AutoCompletionHwnd">
      <summary>Returns the Window handle of the autocompletion listbox.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
      <seealso cref="ExpressionEdit.FunctionTipHwnd" />
      <seealso cref="ExpressionEdit.hWnd" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.AutoCompletionHwnd">
      <summary>Returns the Window handle of the autocompletion listbox.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
      <seealso cref="ExpressionEdit.FunctionTipHwnd" />
      <seealso cref="ExpressionEdit.hWnd" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.AllowEmpty">
      <summary>TestStand returns an error for an empty expression only when this property is <c>False</c>.</summary>
      <remarks>The ExpressionEdit control displays the text <c>&quot;&lt;The expression cannot be empty&gt;&quot;</c> when this property is <c>False</c>, the control contains an empty expression, the control is not active, and error checking is enabled.</remarks>
      <seealso cref="&quot;EvaluationTypes&quot;javascript:APILink('/RefTopics/EvaluationTypes.htm')" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.AllowEmpty">
      <summary>TestStand returns an error for an empty expression only when this property is <c>False</c>.</summary>
      <remarks>The ExpressionEdit control displays the text <c>&quot;&lt;The expression cannot be empty&gt;&quot;</c> when this property is <c>False</c>, the control contains an empty expression, the control is not active, and error checking is enabled.</remarks>
      <seealso cref="&quot;EvaluationTypes&quot;javascript:APILink('/RefTopics/EvaluationTypes.htm')" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.ErrorCheck">
      <summary>Specifies whether the control performs error checking on the expression. When the value of this property is a value other than <c>ErrorCheck_None</c>, the expression is checked for errors when the ExpressionEdit control loses focus, when you select Check for Errors from the context menu, or when the ExpressionEdit.DisplayError method is called. </summary>
      <remarks>When an error is found, the error is displayed in a different font color or style. The error message is displayed in a tooltip.</remarks>
      <seealso cref="&quot;EvaluationTypes.AllowedArrayRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedArrayRepresentations_P.htm')" />
      <seealso cref="&quot;EvaluationTypes.AllowedRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedRepresentations_P.htm')" />
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.DisplayError" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.ErrorCheck">
      <summary>Specifies whether the control performs error checking on the expression. When the value of this property is a value other than <c>ErrorCheck_None</c>, the expression is checked for errors when the ExpressionEdit control loses focus, when you select Check for Errors from the context menu, or when the ExpressionEdit.DisplayError method is called. </summary>
      <remarks>When an error is found, the error is displayed in a different font color or style. The error message is displayed in a tooltip.</remarks>
      <seealso cref="&quot;EvaluationTypes.AllowedArrayRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedArrayRepresentations_P.htm')" />
      <seealso cref="&quot;EvaluationTypes.AllowedRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedRepresentations_P.htm')" />
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.DisplayError" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.RequiredTypes">
      <summary><para>Note: This property is obsolete. Use the ExpressionEdit.GetValidEvaluationTypes and ExpressionEdit.SetValidEvaluationTypes methods instead.</para></summary>
      <remarks>Specifies any combination of the ValidExpressionTypes constants. Use the bitwise-OR operator to specify more than one valid type.
Specifies the allowed evaluation result types when the value of the ExpressionEdit.ErrorCheck property is <c>ErrorCheck_SyntaxAndEvaluation</c>.
If the value of this property is <c>ValidExpressionType_NamedType</c> or <c>ValidExpressionType_NamedTypeArray</c>, the named types or named type arrays must be specified using the RequiredNamedTypes property and the RequiredNamedTypeArrays property, respectively.</remarks>
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.RequiredNamedTypeArrays" />
      <seealso cref="ExpressionEdit.RequiredNamedTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="ValidExpressionTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.RequiredTypes">
      <summary><para>Note: This property is obsolete. Use the ExpressionEdit.GetValidEvaluationTypes and ExpressionEdit.SetValidEvaluationTypes methods instead.</para></summary>
      <remarks>Specifies any combination of the ValidExpressionTypes constants. Use the bitwise-OR operator to specify more than one valid type.
Specifies the allowed evaluation result types when the value of the ExpressionEdit.ErrorCheck property is <c>ErrorCheck_SyntaxAndEvaluation</c>.
If the value of this property is <c>ValidExpressionType_NamedType</c> or <c>ValidExpressionType_NamedTypeArray</c>, the named types or named type arrays must be specified using the RequiredNamedTypes property and the RequiredNamedTypeArrays property, respectively.</remarks>
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.RequiredNamedTypeArrays" />
      <seealso cref="ExpressionEdit.RequiredNamedTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="ValidExpressionTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.RequiredNamedTypes">
      <summary><para>Note: This property is obsolete. Use the ExpressionEdit.GetValidEvaluationTypes and ExpressionEdit.SetValidEvaluationTypes methods instead.</para></summary>
      <remarks>Returns a collection of strings that specify the named types that are allowed when the value of the ExpressionEdit.RequiredTypes property is <c>ValidExpressionType_NamedType</c>. The ExpressionEdit control highlights the expression as an evaluation error when the expression fails to evaluate to a named type listed in the collection.</remarks>
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.RequiredNamedTypeArrays" />
      <seealso cref="ExpressionEdit.RequiredTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="Strings" />
      <seealso cref="ValidExpressionTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.RequiredNamedTypes">
      <summary><para>Note: This property is obsolete. Use the ExpressionEdit.GetValidEvaluationTypes and ExpressionEdit.SetValidEvaluationTypes methods instead.</para></summary>
      <remarks>Returns a collection of strings that specify the named types that are allowed when the value of the ExpressionEdit.RequiredTypes property is <c>ValidExpressionType_NamedType</c>. The ExpressionEdit control highlights the expression as an evaluation error when the expression fails to evaluate to a named type listed in the collection.</remarks>
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.RequiredNamedTypeArrays" />
      <seealso cref="ExpressionEdit.RequiredTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="Strings" />
      <seealso cref="ValidExpressionTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.RequiredNamedTypeArrays">
      <summary><para>Note: This property is obsolete. Use the ExpressionEdit.GetValidEvaluationTypes and ExpressionEdit.SetValidEvaluationTypes methods instead.</para></summary>
      <remarks>Returns a collection of strings that specify the named type arrays allowed when the value of the ExpressionEdit.RequiredTypes property is <c>ValidExpressionType_NamedTypeArray</c>. The ExpressionEdit control highlights the expression as an evaluation error when the expression fails to evaluate to a named type array listed in the collection.</remarks>
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.RequiredNamedTypes" />
      <seealso cref="ExpressionEdit.RequiredTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="Strings" />
      <seealso cref="ValidExpressionTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.RequiredNamedTypeArrays">
      <summary><para>Note: This property is obsolete. Use the ExpressionEdit.GetValidEvaluationTypes and ExpressionEdit.SetValidEvaluationTypes methods instead.</para></summary>
      <remarks>Returns a collection of strings that specify the named type arrays allowed when the value of the ExpressionEdit.RequiredTypes property is <c>ValidExpressionType_NamedTypeArray</c>. The ExpressionEdit control highlights the expression as an evaluation error when the expression fails to evaluate to a named type array listed in the collection.</remarks>
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.RequiredNamedTypes" />
      <seealso cref="ExpressionEdit.RequiredTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="Strings" />
      <seealso cref="ValidExpressionTypes" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.CheckExpression(System.String@,System.Int32@,System.Int32@)">
      <summary>Returns the result of the error checking the ExpressionEdit.ErrorCheck, ExpressionEdit.SetValidEvaluationTypes, and ExpressionEdit.GetValidEvaluationTypes methods specify.</summary>
      <remarks>When you call this method, the ExpressionEdit control might modify the text to automatically prefix variables that do not have a full path specified.
Calling this method does not display an error.
To display an error, call the ExpressionEdit.DisplayError method.</remarks>
      <returns>An error code.</returns>
      <param name="errorDescription">When an error exists, this parameter returns an error message that describes the error.</param>
      <param name="errorStartPosition">When an error exists, this parameter returns the starting character index of the error in the expression.</param>
      <param name="errorEndPosition">When an error exists, this parameter returns the index of one character past the ending character index of the error in the expression.</param>
      <seealso cref="&quot;EvaluationTypes.AllowedArrayRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedArrayRepresentations_P.htm')" />
      <seealso cref="&quot;EvaluationTypes.AllowedRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedRepresentations_P.htm')" />
      <seealso cref="ExpressionEdit.AllowEmpty" />
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="ExpressionEdit.DisplayError" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.CheckExpression(System.String@,System.Int32@,System.Int32@)">
      <summary>Returns the result of the error checking the ExpressionEdit.ErrorCheck, ExpressionEdit.SetValidEvaluationTypes, and ExpressionEdit.GetValidEvaluationTypes methods specify.</summary>
      <remarks>When you call this method, the ExpressionEdit control might modify the text to automatically prefix variables that do not have a full path specified.
Calling this method does not display an error.
To display an error, call the ExpressionEdit.DisplayError method.</remarks>
      <returns>An error code.</returns>
      <param name="errorDescription">When an error exists, this parameter returns an error message that describes the error.</param>
      <param name="errorStartPosition">When an error exists, this parameter returns the starting character index of the error in the expression.</param>
      <param name="errorEndPosition">When an error exists, this parameter returns the index of one character past the ending character index of the error in the expression.</param>
      <seealso cref="&quot;EvaluationTypes.AllowedArrayRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedArrayRepresentations_P.htm')" />
      <seealso cref="&quot;EvaluationTypes.AllowedRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedRepresentations_P.htm')" />
      <seealso cref="ExpressionEdit.AllowEmpty" />
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="ExpressionEdit.DisplayError" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.DisplayError(System.Int32)">
      <summary>Performs error checking the ExpressionEdit.ErrorCheck and ExpressionEdit.AllowEmpty properties and the  ExpressionEdit.SetValidEvaluationTypes and ExpressionEdit.GetValidEvaluationTypes methods specify. The ExpressionEdit control displays any errors in a different font and displays the error message in a tooltip. </summary>
      <remarks>Use this method to force the ExpressionEdit control to check for errors as it does when you select Check for Errors from the ExpressionEdit control context menu.
When you call this method, the ExpressionEdit control might modify the text to automatically prefix variables that do not have a full path specified.</remarks>
      <param name="options">Specifies a bitwise-OR combination of the DisplayErrorOptions constants.</param>
      <seealso cref="&quot;EvaluationTypes.AllowedArrayRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedArrayRepresentations_P.htm')" />
      <seealso cref="&quot;EvaluationTypes.AllowedRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedRepresentations_P.htm')" />
      <seealso cref="ExpressionEdit.AllowEmpty" />
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="DisplayErrorOptions" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.DisplayError(System.Int32)">
      <summary>Performs error checking the ExpressionEdit.ErrorCheck and ExpressionEdit.AllowEmpty properties and the  ExpressionEdit.SetValidEvaluationTypes and ExpressionEdit.GetValidEvaluationTypes methods specify. The ExpressionEdit control displays any errors in a different font and displays the error message in a tooltip. </summary>
      <remarks>Use this method to force the ExpressionEdit control to check for errors as it does when you select Check for Errors from the ExpressionEdit control context menu.
When you call this method, the ExpressionEdit control might modify the text to automatically prefix variables that do not have a full path specified.</remarks>
      <param name="options">Specifies a bitwise-OR combination of the DisplayErrorOptions constants.</param>
      <seealso cref="&quot;EvaluationTypes.AllowedArrayRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedArrayRepresentations_P.htm')" />
      <seealso cref="&quot;EvaluationTypes.AllowedRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedRepresentations_P.htm')" />
      <seealso cref="ExpressionEdit.AllowEmpty" />
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="ExpressionEdit.ErrorCheck" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="DisplayErrorOptions" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Evaluate(System.Int32)">
      <summary>Evaluates the current expression using the context the ExpressionEdit.Context property specifies.</summary>
      <returns>The result of the evaluation.</returns>
      <param name="evaluationOptions">Pass <c>Eval_NoOptions</c> to specify the default behavior, or pass one or more EvaluationOptions constants. The <c>EvalOption_AllowEmptyExpression</c> constant is ignored. Use the ExpressionEdit.AllowEmpty property to determine whether to treat an empty expression as an error. Use the bitwise-OR operator to specify multiple options.</param>
      <seealso cref="ExpressionEdit.AllowEmpty" />
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="&quot;EvaluationOptions&quot;javascript:APILink('/RefTopics/EvaluationOptions.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Evaluate(System.Int32)">
      <summary>Evaluates the current expression using the context the ExpressionEdit.Context property specifies.</summary>
      <returns>The result of the evaluation.</returns>
      <param name="evaluationOptions">Pass <c>Eval_NoOptions</c> to specify the default behavior, or pass one or more EvaluationOptions constants. The <c>EvalOption_AllowEmptyExpression</c> constant is ignored. Use the ExpressionEdit.AllowEmpty property to determine whether to treat an empty expression as an error. Use the bitwise-OR operator to specify multiple options.</param>
      <seealso cref="ExpressionEdit.AllowEmpty" />
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="&quot;EvaluationOptions&quot;javascript:APILink('/RefTopics/EvaluationOptions.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.SelectAll">
      <summary>Selects all the text in the ExpressionEdit control.</summary>
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.SelText" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.SelectAll">
      <summary>Selects all the text in the ExpressionEdit control.</summary>
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.SelText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.AutoLocalize">
      <summary><para>Note: This property is obsolete. Use ExpressionEdit.DisplayText instead.</para>
</summary>
      <remarks>When this property is <c>True</c>, the ExpressionEdit.Text property is a delocalized expression. When this property is <c>False</c>, the <c>ExpressionEdit.Text</c> property is a localized expression. The default value of the property is <c>True</c>.</remarks>
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.AutoLocalize">
      <summary><para>Note: This property is obsolete. Use ExpressionEdit.DisplayText instead.</para>
</summary>
      <remarks>When this property is <c>True</c>, the ExpressionEdit.Text property is a delocalized expression. When this property is <c>False</c>, the <c>ExpressionEdit.Text</c> property is a localized expression. The default value of the property is <c>True</c>.</remarks>
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.Click">
      <summary>Occurs when you press and release the mouse on the control.</summary>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.DblClick">
      <summary>Occurs when you double-click the control.</summary>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.KeyDown">
      <summary>Occurs when the user presses any key while the control has the input focus. This event occurs before the ExpressionEdit.KeyPress event.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="ExpressionEdit.KeyPress" />
      <seealso cref="ExpressionEdit.KeyUp" />
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.KeyPress">
      <summary>Occurs when the user presses a key while a control is active. This event occurs after the ExpressionEdit.KeyDown event.</summary>
      <param name="keyAscii">Specifies the ASCII value of the pressed key.</param>
      <seealso cref="ExpressionEdit.KeyDown" />
      <seealso cref="ExpressionEdit.KeyUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.KeyUp">
      <summary>Occurs when the user releases any key while the control has the input focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="ExpressionEdit.KeyDown" />
      <seealso cref="ExpressionEdit.KeyPress" />
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.MouseDown">
      <summary>Occurs when the user clicks the mouse on the control. This event occurs before the ExpressionEdit.MouseUp event.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="ExpressionEdit.Click" />
      <seealso cref="ExpressionEdit.MouseMove" />
      <seealso cref="ExpressionEdit.MouseUp" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.MouseMove">
      <summary>Occurs when the user moves the mouse over the control.</summary>
      <param name="btn">Specifies what mouse buttons are pressed. You can use any combination of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="ExpressionEdit.Click" />
      <seealso cref="ExpressionEdit.MouseDown" />
      <seealso cref="ExpressionEdit.MouseUp" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.MouseUp">
      <summary>Occurs when the user releases the mouse on the control. This event occurs before the ExpressionEdit.Click event.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="ExpressionEdit.Click" />
      <seealso cref="ExpressionEdit.MouseDown" />
      <seealso cref="ExpressionEdit.MouseMove" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.Change">
      <summary>Occurs when the text in the control changes.</summary>
      <seealso cref="ExpressionEdit.KeyPress" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.SelChange">
      <summary>Occurs when the current selection changes.</summary>
      <seealso cref="ExpressionEdit.SelLength" />
      <seealso cref="ExpressionEdit.SelStart" />
      <seealso cref="ExpressionEdit.SelText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.SyntaxHighlightingEnabled">
      <summary>Specifies whether the ExpressionEdit control displays different text elements, such as numbers, strings, and comments, in different colors and styles.</summary>
      <remarks>Do not use this property to display text that is not an expression in an ExpressionEdit control. Instead, set the ExpressionEdit.TextType property to <c>TextType_PlainText</c>.</remarks>
      <seealso cref="ExpressionEdit.TextType" />
      <seealso cref="TextTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.SyntaxHighlightingEnabled">
      <summary>Specifies whether the ExpressionEdit control displays different text elements, such as numbers, strings, and comments, in different colors and styles.</summary>
      <remarks>Do not use this property to display text that is not an expression in an ExpressionEdit control. Instead, set the ExpressionEdit.TextType property to <c>TextType_PlainText</c>.</remarks>
      <seealso cref="ExpressionEdit.TextType" />
      <seealso cref="TextTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.BrowseExprDialogTitle">
      <summary>Specifies the title for the Expression Browser dialog box when you call the ExpressionEdit.DisplayBrowseExprDialog method or when you select Browse in the context menu of the ExpressionEdit control. Set this property to an empty string to use the default title for the dialog box.</summary>
      <seealso cref="&quot;BrowseExprDialogOptions&quot;javascript:APILink('/RefTopics/BrowseExprDialogOptions.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.DisplayBrowseExprDialog" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.BrowseExprDialogTitle">
      <summary>Specifies the title for the Expression Browser dialog box when you call the ExpressionEdit.DisplayBrowseExprDialog method or when you select Browse in the context menu of the ExpressionEdit control. Set this property to an empty string to use the default title for the dialog box.</summary>
      <seealso cref="&quot;BrowseExprDialogOptions&quot;javascript:APILink('/RefTopics/BrowseExprDialogOptions.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.DisplayBrowseExprDialog" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.BrowseExprDialogOptions">
      <summary>Specifies the options in the Expression Browser dialog box when you call the ExpressionEdit.DisplayBrowseExprDialog method or when you select Browse from the context menu of the ExpressionEdit control. Use any combination of the BrowseExprDialogOptions constants with this property.</summary>
      <remarks>The constant <c>BrowseExpr_UsesCRLF</c> is ignored.</remarks>
      <seealso cref="&quot;BrowseExprDialogOptions&quot;javascript:APILink('/RefTopics/BrowseExprDialogOptions.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.BrowseExprDialogTitle" />
      <seealso cref="ExpressionEdit.DisplayBrowseExprDialog" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.BrowseExprDialogOptions">
      <summary>Specifies the options in the Expression Browser dialog box when you call the ExpressionEdit.DisplayBrowseExprDialog method or when you select Browse from the context menu of the ExpressionEdit control. Use any combination of the BrowseExprDialogOptions constants with this property.</summary>
      <remarks>The constant <c>BrowseExpr_UsesCRLF</c> is ignored.</remarks>
      <seealso cref="&quot;BrowseExprDialogOptions&quot;javascript:APILink('/RefTopics/BrowseExprDialogOptions.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.BrowseExprDialogTitle" />
      <seealso cref="ExpressionEdit.DisplayBrowseExprDialog" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.DisplayBrowseExprDialog">
      <summary>Launches the Expression Browser dialog box. Use the ExpressionEdit.BrowseExprDialogTitle property to customize the title for the dialog box, and use the BrowseExprDialogOptions constants to specify additional options.</summary>
      <returns>Returns <c>True</c> when you click OK in the Expression Browser dialog box. Returns <c>False</c> when you click Cancel.</returns>
      <seealso cref="&quot;BrowseExprDialogOptions&quot;javascript:APILink('/RefTopics/BrowseExprDialogOptions.htm')" />
      <seealso cref="&quot;Engine.DisplayBrowseExprDialogEx&quot;javascript:APILink('/RefTopics/Engine_DisplayBrowseExprDialogEx_M.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.BrowseExprDialogClosed" />
      <seealso cref="ExpressionEdit.BrowseExprDialogOpened" />
      <seealso cref="ExpressionEdit.BrowseExprDialogTitle" />
      <seealso cref="ExpressionEdit.Context" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.DisplayBrowseExprDialog">
      <summary>Launches the Expression Browser dialog box. Use the ExpressionEdit.BrowseExprDialogTitle property to customize the title for the dialog box, and use the BrowseExprDialogOptions constants to specify additional options.</summary>
      <returns>Returns <c>True</c> when you click OK in the Expression Browser dialog box. Returns <c>False</c> when you click Cancel.</returns>
      <seealso cref="&quot;BrowseExprDialogOptions&quot;javascript:APILink('/RefTopics/BrowseExprDialogOptions.htm')" />
      <seealso cref="&quot;Engine.DisplayBrowseExprDialogEx&quot;javascript:APILink('/RefTopics/Engine_DisplayBrowseExprDialogEx_M.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.BrowseExprDialogClosed" />
      <seealso cref="ExpressionEdit.BrowseExprDialogOpened" />
      <seealso cref="ExpressionEdit.BrowseExprDialogTitle" />
      <seealso cref="ExpressionEdit.Context" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.ReadOnly">
      <summary>Specifies that the control can be edited.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.ReadOnly">
      <summary>Specifies that the control can be edited.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.FontSource">
      <summary>Specifies the current font for the ExpressionEdit control. The default value for this property is <c>FontSource_UseGUIFont</c>. When the value of this property is <c>FontSource_UseFontProperty</c>, the ExpressionEdit.Font property specifies the current font.</summary>
      <remarks>Only the font name and size are used. All other properties of this parameter are ignored because the other properties are set on a per-text element basis in the Expression Editing Options dialog box, which you can access through the Options item from the context menu of the ExpressionEdit control.
When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the <c>ExpressionEdit.Font</c> property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.FontSource">
      <summary>Specifies the current font for the ExpressionEdit control. The default value for this property is <c>FontSource_UseGUIFont</c>. When the value of this property is <c>FontSource_UseFontProperty</c>, the ExpressionEdit.Font property specifies the current font.</summary>
      <remarks>Only the font name and size are used. All other properties of this parameter are ignored because the other properties are set on a per-text element basis in the Expression Editing Options dialog box, which you can access through the Options item from the context menu of the ExpressionEdit control.
When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the <c>ExpressionEdit.Font</c> property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.TextType">
      <summary>Use this property to make an ExpressionEdit control behave like an ordinary edit or text box control. This is useful when you want to use an edit control for editing expressions and plain text.</summary>
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.TextType">
      <summary>Use this property to make an ExpressionEdit control behave like an ordinary edit or text box control. This is useful when you want to use an edit control for editing expressions and plain text.</summary>
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.BrowseExprDialogClosed">
      <summary>Occurs when you close an Expression Browser dialog box displayed using the Browse menu item in the ExpressionEdit control context menu or the ExpressionEdit.DisplayBrowseExprDialog method.</summary>
      <param name="userHitOK">This parameter is <c>True</c> when you click OK in the Expression Browser dialog box and <c>False</c> when you click Cancel.</param>
      <param name="contextModified">This parameter is <c>True</c> when a variable or property in the context is created, deleted, or renamed through the context menu in the Expression Browser dialog box while the Expression Browser dialog box is displayed. This parameter is <c>False</c> when the user modifies only the value of a variable or property.</param>
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit.BrowseExprDialogOpened" />
      <seealso cref="ExpressionEdit.DisplayBrowseExprDialog" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="ExpressionEdit.BorderDragged" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="ExpressionEdit.BorderDragged" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.BorderDragged">
      <summary>Occurs when the user drags a draggable border of a control with the mouse. The event provides the location and size to which you must set the control for the draggable borders to track the mouse cursor. However, you can choose to modify the location or size to which you set the control. For example, you can limit the width of the control so the left edge cannot be dragged off the visible portion of the window.
In addition to changing the size and position of the control, you might also update the sizes and positions of the other controls on the window to account for the change.</summary>
      <remarks>If you are using LabVIEW, you must add the Horizontal and Vertical components of the origin of the LabVIEW front panel to the newX and newY event parameter values before you can use the newX and newY event parameters to set the ActiveX Container (AxCont) Left and Top properties for the control. To obtain the origin of a LabVIEW front panel, place an ActiveX property node on the block diagram of the VI, right-click the node, and select Link to&#0187;Pane from the context menu. Right-click the node again and select Select Property&#0187;Origin.</remarks>
      <param name="bordersChanged">Specifies which borders the user dragged. Refer to the WhichBorders constants for more information about draggable borders.</param>
      <param name="newX">Specifies the new x-coordinate for the control.</param>
      <param name="newY">Specifies the new y-coordinate for the control.</param>
      <param name="newWidth">Specifies the new width for the control.</param>
      <param name="newHeight">Specifies the new height for the control.</param>
      <param name="finalResize">Specifies whether the event is the final event for the drag operation the user performs.</param>
      <seealso cref="Borders" />
      <seealso cref="WhichBorders" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Localize(System.String)">
      <summary>Localizes the ToolTipText and ContextMenuItemCaption properties for each ExpressionEditButton and the DisplayName property of each ExpressionEditComboBoxItem.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the <c>ToolTipText</c> and <c>ContextMenuItemCaption</c> properties of each button and the <c>DisplayName</c> property of each combo box item.
When you call this method, the control replaces the <c>ToolTipText</c> and <c>ContextMenuItemCaption</c> properties of each button and the <c>DisplayName</c> property of each combo box item with the string from the <c>.ini</c> file. If the <c>ToolTipText</c>, <c>ContextMenuItemCaption</c>, or <c>DisplayName</c> property is not a tag in the <c>.ini</c> file, the property does not change. 
<para>Note: This method does not localize the ToolTipText of non-custom buttons. Non-custom buttons localize ToolTipText automatically.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ExpressionEditButton.ContextMenuItemCaption" />
      <seealso cref="ExpressionEditButton.ToolTipText" />
      <seealso cref="ExpressionEditComboBoxItem.DisplayName" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Localize(System.String)">
      <summary>Localizes the ToolTipText and ContextMenuItemCaption properties for each ExpressionEditButton and the DisplayName property of each ExpressionEditComboBoxItem.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the <c>ToolTipText</c> and <c>ContextMenuItemCaption</c> properties of each button and the <c>DisplayName</c> property of each combo box item.
When you call this method, the control replaces the <c>ToolTipText</c> and <c>ContextMenuItemCaption</c> properties of each button and the <c>DisplayName</c> property of each combo box item with the string from the <c>.ini</c> file. If the <c>ToolTipText</c>, <c>ContextMenuItemCaption</c>, or <c>DisplayName</c> property is not a tag in the <c>.ini</c> file, the property does not change. 
<para>Note: This method does not localize the ToolTipText of non-custom buttons. Non-custom buttons localize ToolTipText automatically.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ExpressionEditButton.ContextMenuItemCaption" />
      <seealso cref="ExpressionEditButton.ToolTipText" />
      <seealso cref="ExpressionEditComboBoxItem.DisplayName" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Buttons">
      <summary>Returns a collection of the buttons for the ExpressionEdit control.</summary>
      <seealso cref="ExpressionEditButtons" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Buttons">
      <summary>Returns a collection of the buttons for the ExpressionEdit control.</summary>
      <seealso cref="ExpressionEditButtons" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.Style">
      <summary>Specifies the appearance of the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.Style">
      <summary>Specifies the appearance of the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.ComboBoxItems">
      <summary>Returns a collection of the items in the drop-down list when the ExpressionEdit control is a combo box.</summary>
      <seealso cref="ExpressionEdit.Style" />
      <seealso cref="ExpressionEditComboBoxItems" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.ComboBoxItems">
      <summary>Returns a collection of the items in the drop-down list when the ExpressionEdit control is a combo box.</summary>
      <seealso cref="ExpressionEdit.Style" />
      <seealso cref="ExpressionEditComboBoxItems" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.ShowDisplayNameWhenInactive">
      <summary>When this property is <c>True</c> and the text in the ExpressionEdit control corresponds to the value of an item in the drop-down list and the item has a DisplayName, the ExpressionEdit control shows the DisplayName of the item instead of the text when the ExpressionEdit control is inactive.</summary>
      <remarks>The ExpressionEdit control uses this property only when the style is <c>ExpressionEditStyle_DropDownCombo</c>.</remarks>
      <seealso cref="ExpressionEditComboBoxItem.DisplayName" />
      <seealso cref="ExpressionEditStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.ShowDisplayNameWhenInactive">
      <summary>When this property is <c>True</c> and the text in the ExpressionEdit control corresponds to the value of an item in the drop-down list and the item has a DisplayName, the ExpressionEdit control shows the DisplayName of the item instead of the text when the ExpressionEdit control is inactive.</summary>
      <remarks>The ExpressionEdit control uses this property only when the style is <c>ExpressionEditStyle_DropDownCombo</c>.</remarks>
      <seealso cref="ExpressionEditComboBoxItem.DisplayName" />
      <seealso cref="ExpressionEditStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.DropDownListHwnd">
      <summary>Returns the Window handle of the drop-down list visible when the ExpressionEdit control is a combo box.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
      <seealso cref="ExpressionEdit.Style" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.DropDownListHwnd">
      <summary>Returns the Window handle of the drop-down list visible when the ExpressionEdit control is a combo box.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
      <seealso cref="ExpressionEdit.Style" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.ButtonClick">
      <summary>Responds to clicking on a custom button.</summary>
      <remarks>This event does not occur when you click on a non-custom button.</remarks>
      <param name="btn">Specifies the button the user clicked.</param>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.DropDown">
      <summary>Occurs when the list portion of the control is about to drop down.</summary>
      <remarks>This event is useful if you want to wait until the list is visible to populate the list with items.</remarks>
      <seealso cref="ExpressionEditComboBoxItems" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.InsertComboBoxItem">
      <summary>Occurs when the user selects an item in the drop-down list. This event is useful when you do not want the selected item to replace the existing text.</summary>
      <remarks>You cannot use this event to change what text to insert into the ExpressionEdit control.</remarks>
      <param name="item">Specifies the item to insert into the ExpressionEdit control.</param>
      <param name="insertStart">Specifies the zero-based index of the character where the selected item is inserted. 
This parameter is initialized to zero. You can change the value of this parameter to change where the selected item is inserted.</param>
      <param name="insertEnd">Specifies the zero-based index of the last character the selected item replaces.
This parameter is initialized to the index of the last character in the ExpressionEdit control. You can change the value of this parameter to change what text the selected item replaces.</param>
      <seealso cref="ExpressionEditComboBoxItem" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.DisplayText">
      <summary>Specifies a localized expression for the text in the ExpressionEdit control. The value of the ExpressionEdit.Text property updates when you set this property.</summary>
      <remarks>This property specifies the actual text in the ExpressionEdit control. Use this property when you use the ExpressionEdit control with expression strings that are already localized for display. Refer to the Engine.LocalizeExpression and Engine.DelocalizeExpression methods for more information about localized and delocalized expressions.</remarks>
      <seealso cref="&quot;Engine.DelocalizeExpression&quot;javascript:APILink('/RefTopics/Engine_DelocalizeExpression_M.htm')" />
      <seealso cref="&quot;Engine.LocalizeExpression&quot;javascript:APILink('/RefTopics/Engine_LocalizeExpression_M.htm')" />
      <seealso cref="ExpressionEdit.MaxLength" />
      <seealso cref="ExpressionEdit.SelText" />
      <seealso cref="ExpressionEdit.Text" />
      <seealso cref="ExpressionEdit.TextLength" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.DisplayText">
      <summary>Specifies a localized expression for the text in the ExpressionEdit control. The value of the ExpressionEdit.Text property updates when you set this property.</summary>
      <remarks>This property specifies the actual text in the ExpressionEdit control. Use this property when you use the ExpressionEdit control with expression strings that are already localized for display. Refer to the Engine.LocalizeExpression and Engine.DelocalizeExpression methods for more information about localized and delocalized expressions.</remarks>
      <seealso cref="&quot;Engine.DelocalizeExpression&quot;javascript:APILink('/RefTopics/Engine_DelocalizeExpression_M.htm')" />
      <seealso cref="&quot;Engine.LocalizeExpression&quot;javascript:APILink('/RefTopics/Engine_LocalizeExpression_M.htm')" />
      <seealso cref="ExpressionEdit.MaxLength" />
      <seealso cref="ExpressionEdit.SelText" />
      <seealso cref="ExpressionEdit.Text" />
      <seealso cref="ExpressionEdit.TextLength" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.AutomaticallyPrefixVariables">
      <summary>Specifies whether the ExpressionEdit control automatically replaces variable names the user types with the full pathname of the variable.</summary>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.AutomaticallyPrefixVariables">
      <summary>Specifies whether the ExpressionEdit control automatically replaces variable names the user types with the full pathname of the variable.</summary>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.BrowseExprDialogOpened">
      <summary>Occurs just before the ExpressionEdit control displays the Expression Browser dialog box. Use this event to override the default parameter values the ExpressionEdit control passes to the Expression Browser dialog box or to cancel displaying the Expression Browser dialog box to the user.</summary>
      <param name="dlgTitle">Specifies the title of the Expression Browser dialog box. Assign a value to this parameter to override the default title.</param>
      <param name="dlgOptions">Specifies the BrowseExprDialogOptions the ExpressionEdit control passes to the Expression Browser dialog box. Assign a value to this parameter to override the default options.</param>
      <param name="selectionStart">Specifies the zero-based character index where selection begins. Assign a value to this parameter to override the default start of selection.</param>
      <param name="selectionEnd">Specifies the zero-based character index where selection ends. Assign a value to this parameter to override the default end of selection.</param>
      <param name="initialVariableName">Specifies the name of the initial variable or property to show as selected in the tree view portion of the Expression Browser dialog box. Assign a value to this parameter to override the default initially selected variable. Assign an empty string to this parameter to select the first item.</param>
      <param name="cancel">Assign <c>True</c> to this parameter to prevent the ExpressionEdit control from displaying the Expression Browser dialog box to the user.</param>
      <seealso cref="&quot;BrowseExprDialogOptions&quot;javascript:APILink('/RefTopics/BrowseExprDialogOptions.htm')" />
      <seealso cref="&quot;Engine.DisplayBrowseExprDialogEx&quot;javascript:APILink('/RefTopics/Engine_DisplayBrowseExprDialogEx_M.htm')" />
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEditButton" />
      <seealso cref="ExpressionEdit.BrowseExprDialogClosed" />
      <seealso cref="ExpressionEdit.DisplayBrowseExprDialog" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExpressionEditEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.DisplayFormattedValue">
      <summary>When this property is <c>True</c>, the ExpressionEdit control displays the formatted value of a numeric constant you type in a tooltip and replaces the text you type with the formatted value when the ExpressionEdit control loses focus.</summary>
      <seealso cref="ExpressionEdit.NumericFormat" />
      <seealso cref="&quot;PropertyObject.GetFormattedValue&quot;javascript:APILink('/RefTopics/PropertyObject_GetFormattedValue_M.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.DisplayFormattedValue">
      <summary>When this property is <c>True</c>, the ExpressionEdit control displays the formatted value of a numeric constant you type in a tooltip and replaces the text you type with the formatted value when the ExpressionEdit control loses focus.</summary>
      <seealso cref="ExpressionEdit.NumericFormat" />
      <seealso cref="&quot;PropertyObject.GetFormattedValue&quot;javascript:APILink('/RefTopics/PropertyObject_GetFormattedValue_M.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.SetValidEvaluationTypes(NationalInstruments.TestStand.Interop.API.EvaluationTypes)">
      <summary>Sets the valid evaluation types.</summary>
      <param name="val">Specifies the expected types for evaluating an expression.</param>
      <seealso cref="&quot;EvaluationTypes&quot;javascript:APILink('/RefTopics/EvaluationTypes.htm')" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.SetValidEvaluationTypes(NationalInstruments.TestStand.Interop.API.EvaluationTypes)">
      <summary>Sets the valid evaluation types.</summary>
      <param name="val">Specifies the expected types for evaluating an expression.</param>
      <seealso cref="&quot;EvaluationTypes&quot;javascript:APILink('/RefTopics/EvaluationTypes.htm')" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.GetValidEvaluationTypes">
      <summary>Obtains the valid evaluation types.</summary>
      <seealso cref="&quot;EvaluationTypes&quot;javascript:APILink('/RefTopics/EvaluationTypes.htm')" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.GetValidEvaluationTypes">
      <summary>Obtains the valid evaluation types.</summary>
      <seealso cref="&quot;EvaluationTypes&quot;javascript:APILink('/RefTopics/EvaluationTypes.htm')" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExpressionEdit.ApplyDefaultStyle">
      <summary>Specifies whether the control uses the default style for the ExpressionEdit buttons, and sets the <c>ExpressionEdit.FontSource</c> property to <c>FontSource_UseUIStyleFont</c>.</summary>
      <remarks>TestStand 2020 introduced new default icons for the ExpressionEdit buttons.</remarks>
      <seealso cref="ExpressionEdit.FontSource" />
      <seealso cref="&quot;FontSources&quot;FontSources.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditClass.ApplyDefaultStyle">
      <summary>Specifies whether the control uses the default style for the ExpressionEdit buttons, and sets the <c>ExpressionEdit.FontSource</c> property to <c>FontSource_UseUIStyleFont</c>.</summary>
      <remarks>TestStand 2020 introduced new default icons for the ExpressionEdit buttons.</remarks>
      <seealso cref="ExpressionEdit.FontSource" />
      <seealso cref="&quot;FontSources&quot;FontSources.htm" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBarPage">
      <summary>Connect a SequenceFileView Manager or ExecutionView Manager control to a ListBarPage object so users can iterate through the items in the page and set the cursor, caption, and name of the page.
Use the ListBarPages.Insert method to create a new ListBarPage object. Use the ListBarPage.Cursor property to determine the selected item in the page.
Use the ListBarPage control to connect to and display the ExecutionViewMgrConnections.ExecutionList, ExecutionViewMgrConnections.CallStack, and ExecutionViewMgrConnections.ThreadList properties in the ExecutionView Manager control and the SequenceFileViewMgrConnections.SequenceList, SequenceFileViewMgrConnections.SequenceFileList, and SequenceFileViewMgrConnections.StepGroupList properties in the SequenceFileView Manager control.</summary>
      <seealso cref="ExecutionViewMgr.ConnectCallStack" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionList" />
      <seealso cref="ExecutionViewMgr.ConnectThreadList" />
      <seealso cref="ListBar.CurrentPage" />
      <seealso cref="ListBarPage.Cursor" />
      <seealso cref="ListBarPages.Insert" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.ConnectStepGroupList" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPage.Items">
      <summary>Returns a collection of items on the page.</summary>
      <remarks>Use this property to obtain a ListBarPageItems collection, which you can use to iterate through all the items on the page.</remarks>
      <seealso cref="ListBarPage.Cursor" />
      <seealso cref="ListBarPageItems" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPage.Cursor">
      <summary>Specifies the zero-based index of the item the cursor selects.</summary>
      <remarks>Use this property to obtain the position of the cursor or move the cursor on the page.</remarks>
      <seealso cref="ListBar.CurrentPage" />
      <seealso cref="ListBar.CursorMoved" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPage.Name">
      <summary>Specifies the name of the ListBarPage.</summary>
      <remarks>Every ListBarPage must have a unique name, which can be used to identify the ListBarPage within the ListBarPages collection. ListBarPage names are not case-sensitive.</remarks>
      <seealso cref="ListBarPage.Caption" />
      <seealso cref="ListBarPages" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPage.Index">
      <summary>Returns the numeric zero-based index of the page within the ListBarPages collection.</summary>
      <seealso cref="ListBar.CurrentPage" />
      <seealso cref="ListBar.Pages" />
      <seealso cref="ListBarPages" />
      <seealso cref="ListBarPages.Item" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPage.Caption">
      <summary>Specifies the caption text of the page.</summary>
      <seealso cref="ListBarPage.Name" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPage.Enabled">
      <summary>Specifies to enable or disable the ListBarPage.</summary>
      <remarks>Users cannot move the cursor when the page is disabled.</remarks>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBarPages">
      <summary>A collection of ListBarPage objects.
Use the ListBar.Pages property to retrieve the ListBarPages object for a ListBar. Use the ListBar.CurrentPage property as an index to this collection to access the currently selected page.</summary>
      <seealso cref="ListBar.CurrentPage" />
      <seealso cref="ListBar.Pages" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBarPage.Cursor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPages.Item(System.Object)">
      <summary>Returns a reference to an item with the specified name or at the specified index in the collection.</summary>
      <param name="itemIdx">You can pass a number to obtain a page by its zero-based index. You can also pass a string to obtain the ListBarPage using its name.</param>
      <seealso cref="ListBarPage" />
      <seealso cref="ListBarPages.Insert" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPages.Count">
      <summary>Returns the number of items in the collection.</summary>
      <seealso cref="ListBarPage" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBarPages.Insert(System.String,System.Int32)">
      <summary>Adds a new item to the collection and returns a reference to the new ListBarPage.</summary>
      <param name="pageName">Specifies the name for the new ListBarPage. ListBarPage names must be unique. ListBarPage names are not case-sensitive.</param>
      <param name="insertBefore">Specifies the index of the existing ListBarPage before which the new ListBarPage is inserted. To insert the new ListBarPage at the end, pass <c>-1</c> to this parameter.</param>
      <seealso cref="ListBarPage" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBarPages.Remove(System.Int32)">
      <summary>Removes the specified item from this collection, if it exists.</summary>
      <param name="itemIdx">Pass the zero-based index for the page to remove.</param>
      <seealso cref="ListBarPages.Clear" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBarPages.Clear">
      <summary>Removes all items from the collection.</summary>
      <seealso cref="ListBarPages.Remove" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBar">
      <summary>Use a ListBar control to display multiple pages, where each page contains a list of items users can view or select. Connect a SequenceFileView Manager or ExecutionView Manager control to a ListBar page so users can view and select from a list, such as the active sequence file or execution. Connect an Application Manager control to a ListBar page so users can view or select the default adapter of the TestStand Engine.
You can view the contents of a page by clicking on the page node, and you can also select a single item with the current page. Use the <c>ListBar.CurrentPage</c> property to determine the selected page, and use <c>Pages.Item(CurrentPage).Cursor</c> to determine the selected item on the current page.
</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IListBar">
      <summary>Use a ListBar control to display multiple pages, where each page contains a list of items users can view or select. Connect a SequenceFileView Manager or ExecutionView Manager control to a ListBar page so users can view and select from a list, such as the active sequence file or execution. Connect an Application Manager control to a ListBar page so users can view or select the default adapter of the TestStand Engine.
You can view the contents of a page by clicking on the page node, and you can also select a single item with the current page. Use the <c>ListBar.CurrentPage</c> property to determine the selected page, and use <c>Pages.Item(CurrentPage).Cursor</c> to determine the selected item on the current page.
</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBarClass">
      <summary>Use a ListBar control to display multiple pages, where each page contains a list of items users can view or select. Connect a SequenceFileView Manager or ExecutionView Manager control to a ListBar page so users can view and select from a list, such as the active sequence file or execution. Connect an Application Manager control to a ListBar page so users can view or select the default adapter of the TestStand Engine.
You can view the contents of a page by clicking on the page node, and you can also select a single item with the current page. Use the <c>ListBar.CurrentPage</c> property to determine the selected page, and use <c>Pages.Item(CurrentPage).Cursor</c> to determine the selected item on the current page.
</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.hWnd">
      <summary>Returns a Window handle for the ListBar control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.hWnd">
      <summary>Returns a Window handle for the ListBar control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.ButtonStyle">
      <summary>Specifies the style of buttons on the ListBar control.</summary>
      <seealso cref="ListBar.PageStyle" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.ButtonStyle">
      <summary>Specifies the style of buttons on the ListBar control.</summary>
      <seealso cref="ListBar.PageStyle" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.ButtonFont">
      <summary>Specifies the font of the button text on ListBar buttons.</summary>
      <seealso cref="FontSources" />
      <seealso cref="ListBar.ButtonFontSource" />
      <seealso cref="ListBar.PageFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.ButtonFont">
      <summary>Specifies the font of the button text on ListBar buttons.</summary>
      <seealso cref="FontSources" />
      <seealso cref="ListBar.ButtonFontSource" />
      <seealso cref="ListBar.PageFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.PageStyle">
      <summary>Specifies the style of the pages in the ListBar control. This property can be any combination of the ListBarPageStyles constants.</summary>
      <seealso cref="ListBar.ButtonStyle" />
      <seealso cref="ListBarPageStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.PageStyle">
      <summary>Specifies the style of the pages in the ListBar control. This property can be any combination of the ListBarPageStyles constants.</summary>
      <seealso cref="ListBar.ButtonStyle" />
      <seealso cref="ListBarPageStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.PageFont">
      <summary>Specifies the font for items on a ListBar page.</summary>
      <seealso cref="ListBar.ButtonFont" />
      <seealso cref="ListBar.PageFontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.PageFont">
      <summary>Specifies the font for items on a ListBar page.</summary>
      <seealso cref="ListBar.ButtonFont" />
      <seealso cref="ListBar.PageFontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.Pages">
      <summary>Returns a collection of the ListBar pages.</summary>
      <remarks>Refer to the ListBarPages object for information about adding, removing, and accessing pages.</remarks>
      <seealso cref="ListBarPages" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.Pages">
      <summary>Returns a collection of the ListBar pages.</summary>
      <remarks>Refer to the ListBarPages object for information about adding, removing, and accessing pages.</remarks>
      <seealso cref="ListBarPages" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.CurrentPage">
      <summary>Specifies the zero-based index of the current page in the ListBar control.</summary>
      <remarks>The current page is the page in the ListBar control that displays the items of the page. Only one page is current in the ListBar control at a time.
Use the ListBarPages collection to access a ListBarPage using the page index of the ListBarPage.</remarks>
      <seealso cref="ListBarPage.Caption" />
      <seealso cref="ListBarPage.Cursor" />
      <seealso cref="ListBarPage.Name" />
      <seealso cref="ListBarPages" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.CurrentPage">
      <summary>Specifies the zero-based index of the current page in the ListBar control.</summary>
      <remarks>The current page is the page in the ListBar control that displays the items of the page. Only one page is current in the ListBar control at a time.
Use the ListBarPages collection to access a ListBarPage using the page index of the ListBarPage.</remarks>
      <seealso cref="ListBarPage.Caption" />
      <seealso cref="ListBarPage.Cursor" />
      <seealso cref="ListBarPage.Name" />
      <seealso cref="ListBarPages" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IListBar.HitTest(System.Int32,System.Int32)">
      <summary>Returns which item, if any, is at the specified location.</summary>
      <remarks>Use this method to determine which item the given coordinates belong to. For example, when a user clicks a control, you might want to determine which item on the current page the user clicked.</remarks>
      <returns>Returns the index of an item on the current page. When no item exists at the specified location, this method returns <c>-1</c>.</returns>
      <param name="x">Specifies the x-coordinate of the location to test, in pixels, relative to the control. </param>
      <param name="y">Specifies the y-coordinate of the location to test, in pixels, relative to the control. </param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBarClass.HitTest(System.Int32,System.Int32)">
      <summary>Returns which item, if any, is at the specified location.</summary>
      <remarks>Use this method to determine which item the given coordinates belong to. For example, when a user clicks a control, you might want to determine which item on the current page the user clicked.</remarks>
      <returns>Returns the index of an item on the current page. When no item exists at the specified location, this method returns <c>-1</c>.</returns>
      <param name="x">Specifies the x-coordinate of the location to test, in pixels, relative to the control. </param>
      <param name="y">Specifies the y-coordinate of the location to test, in pixels, relative to the control. </param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.ButtonTextColor">
      <summary>Specifies the color for the page captions displayed on the buttons in the ListBar control.</summary>
      <seealso cref="ListBar.BackColor" />
      <seealso cref="ListBar.PageTextColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.ButtonTextColor">
      <summary>Specifies the color for the page captions displayed on the buttons in the ListBar control.</summary>
      <seealso cref="ListBar.BackColor" />
      <seealso cref="ListBar.PageTextColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.PageTextColor">
      <summary>Specifies the text color for page items.</summary>
      <seealso cref="ListBar.BackColor" />
      <seealso cref="ListBar.ButtonTextColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.PageTextColor">
      <summary>Specifies the text color for page items.</summary>
      <seealso cref="ListBar.BackColor" />
      <seealso cref="ListBar.ButtonTextColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.BackColor">
      <summary>Specifies the background color of the ListBar control.</summary>
      <seealso cref="ListBar.ButtonTextColor" />
      <seealso cref="ListBar.PageTextColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.BackColor">
      <summary>Specifies the background color of the ListBar control.</summary>
      <seealso cref="ListBar.ButtonTextColor" />
      <seealso cref="ListBar.PageTextColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.ShowItemTipStrips">
      <summary>Specifies whether to enable item tooltips. When you set this property to <c>True</c>, tooltips are visible.</summary>
      <remarks>Item tooltips are the text you see when you hover over a partially visible item with the mouse. Tooltips allow you to see the full caption of a partially visible item.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.ShowItemTipStrips">
      <summary>Specifies whether to enable item tooltips. When you set this property to <c>True</c>, tooltips are visible.</summary>
      <remarks>Item tooltips are the text you see when you hover over a partially visible item with the mouse. Tooltips allow you to see the full caption of a partially visible item.</remarks>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.CursorMoved">
      <summary>Occurs when the user selects a new item in the current page.</summary>
      <param name="itemIdx">Specifies the index of the element that became the cursor.</param>
      <seealso cref="ListBar.CurrentPage" />
      <seealso cref="ListBarPage.Cursor" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.CurPageChanged">
      <summary>Occurs when you select a new current page.</summary>
      <param name="currentPage">Specifies the index of the selected page in ListBarPages.</param>
      <seealso cref="ListBarPages" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the ListBar control has focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.MouseMove">
      <summary>Occurs when the user moves the mouse over the control.</summary>
      <param name="btn">Specifies what mouse buttons are pressed. You can use any combination of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="ListBar.MouseDown" />
      <seealso cref="ListBar.MouseUp" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.MouseDown">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="ListBar.MouseMove" />
      <seealso cref="ListBar.MouseUp" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.MouseUp">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="ListBar.MouseDown" />
      <seealso cref="ListBar.MouseMove" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.ShowItemCount">
      <summary>When this property is <c>True</c>, the ListBar buttons display the number of items in each page, in addition to the page captions.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.ShowItemCount">
      <summary>When this property is <c>True</c>, the ListBar buttons display the number of items in each page, in addition to the page captions.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IListBar.Localize(System.String)">
      <summary>Localizes the captions of all pages.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the caption for the control. 
When you call this method, the control replaces the caption with the string from the <c>.ini</c> file. If the caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect a page to a manager control, the manager control automatically sets a localized page caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBarClass.Localize(System.String)">
      <summary>Localizes the captions of all pages.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the caption for the control. 
When you call this method, the control replaces the caption with the string from the <c>.ini</c> file. If the caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect a page to a manager control, the manager control automatically sets a localized page caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.IconSize">
      <summary>Specifies the size of icons in the ListBar control.</summary>
      <remarks>Icons are always square. For example, when you specify an icon size of 32, the dimensions of the icon are 32 &#215; 32 pixels.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.IconSize">
      <summary>Specifies the size of icons in the ListBar control.</summary>
      <remarks>Icons are always square. For example, when you specify an icon size of 32, the dimensions of the icon are 32 &#215; 32 pixels.</remarks>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.DblClick">
      <summary>Occurs when the user double-clicks the left mouse button.</summary>
      <seealso cref="ListBar.CurPageChanged" />
      <seealso cref="ListBar.CursorMoved" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.ShowScrollBar">
      <summary>Specifies whether to display a vertical scrollbar on the ListBarPage portion of the ListBar control when not enough room exists vertically to display all items in a ListBarPage.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.ShowScrollBar">
      <summary>Specifies whether to display a vertical scrollbar on the ListBarPage portion of the ListBar control when not enough room exists vertically to display all items in a ListBarPage.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.ButtonFontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the ListBar.ButtonFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="ListBar.ButtonFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.ButtonFontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the ListBar.ButtonFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="ListBar.ButtonFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.PageFontSource">
      <summary>Specifies the font the ListBar control uses to display text on the page. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the ListBar.PageFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="ListBar.PageFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.PageFontSource">
      <summary>Specifies the font the ListBar control uses to display text on the page. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the ListBar.PageFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="ListBar.PageFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.CreateContextMenu">
      <summary>Occurs when the user right-clicks the control so the application can build a context menu from which the user can select commands. Although you can implement context menus in most environments without using this event, some environments do not provide any other way to create a context menu. Also, creating a context menu using this event can be simpler in most environments, especially when the context menu contains only TestStand commands.</summary>
      <param name="menuHandle">Specifies the Microsoft Windows menu handle (HMENU). When you add menu items to the menu handle, the control displays them in a context menu. Use the Commands.InsertIntoWin32Menu method to insert TestStand commands to the menu. 
You can also use the menu functions in the Windows Software Development Kit (SDK) to add other menu items. Menu items you add this way do not have an associated TestStand command. When the user selects an item that does not have a TestStand command, the control creates and executes a Command object of kind <c>CommandKind_Custom</c>. The control stores the menu item identifier (resource ID/command ID) as a long in the Command.UserData property and as a decimal string in the command display name. You can handle either the ApplicationMgr.PreCommandExecute or ApplicationMgr.PostCommandExecute event to receive a notification when the user selects a menu item you insert with the Windows SDK. 
When the context menu closes, the control disposes of the menu items. Thus, you do not need to dispose of menu items you insert.</param>
      <param name="x">Specifies the horizontal position of the right-mouse click, relative to the control.</param>
      <param name="y">Specifies the vertical position of the right-mouse click, relative to the control.</param>
      <seealso cref="ApplicationMgr.PostCommandExecute" />
      <seealso cref="ApplicationMgr.PreCommandExecute" />
      <seealso cref="Command.UserData" />
      <seealso cref="Commands.InsertIntoWin32Menu" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBar.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="ListBar.BorderDragged" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarClass.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="ListBar.BorderDragged" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.BorderDragged">
      <summary>Occurs when the user drags a draggable border of a control with the mouse. The event provides the location and size to which you must set the control for the draggable borders to track the mouse cursor. However, you can choose to modify the location or size to which you set the control. For example, you can limit the width of the control so the left edge cannot be dragged off of the visible portion of the window.
In addition to changing the size and position of the control, you might also update the sizes and positions of the other controls on the window to account for the change.</summary>
      <remarks>If you are using LabVIEW, you must add the Horizontal and Vertical components of the origin of the LabVIEW front panel to the newX and newY event parameter values before you can use the newX and newY event parameters to set the ActiveX Container (AxCont) Left and Top properties for the control. To obtain the origin of a LabVIEW front panel, place an ActiveX property node on the block diagram of the VI, right-click the node, and select Link to&#0187;Pane from the context menu. Right-click the node again and select Select Property&#0187;Origin.</remarks>
      <param name="bordersChanged">Specifies which borders the user dragged. Refer to the WhichBorders constants for more information about draggable borders.</param>
      <param name="newX">Specifies the new x-coordinate for the control.</param>
      <param name="newY">Specifies the new y-coordinate for the control.</param>
      <param name="newWidth">Specifies the new width for the control.</param>
      <param name="newHeight">Specifies the new height for the control.</param>
      <param name="finalResize">Specifies whether the event is the final event for the drag operation the user performs.</param>
      <seealso cref="Borders" />
      <seealso cref="WhichBorders" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBarEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
      <param name="pageIndex">Specifies the index of the ListBarPage to which the connection made a change.</param>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.StatusBarPane">
      <summary>Represents a status bar pane.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.Width">
      <summary>Specifies the width for the pane in pixels.</summary>
      <remarks>When you set the StatusBarPane.UseAvailableSpace property to <c>True</c>, the specified width of the pane is ignored when the StatusBar pane is the leftmost visible StatusBar pane with a <c>True</c> value for the <c>StatusBarPane.UseAvailableSpace</c> property.</remarks>
      <seealso cref="StatusBarPane.UseAvailableSpace" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.ToolTipText">
      <summary>Specifies the tooltip for a status bar pane. When this property is an empty string, the pane uses the StatusBarPane.Caption property for the tooltip.</summary>
      <seealso cref="StatusBarPane.Caption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.Name">
      <summary>Specifies the name for the pane.</summary>
      <remarks>Every pane must have a unique name, which can be used to identify the pane within the StatusBarPanes collection. Pane names are not case-sensitive.</remarks>
      <seealso cref="StatusBarPane.Caption" />
      <seealso cref="StatusBarPane.Index" />
      <seealso cref="StatusBarPanes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.Style">
      <summary>Specifies the appearance of the pane.</summary>
      <remarks>A StatusBar pane can have only one style.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.ProcessPercent">
      <summary>Specifies a number between 0 and 100 to determine the progress for the StatusBar pane. The StatusBar pane uses this number to draw a progress bar.</summary>
      <remarks>You can combine a caption, image, and progress bar on the same StatusBar pane. Set ProcessPercent to <c>0</c> when you do not want the StatusBar pane to contain a progress bar.
<para>Note: When a StatusBar pane is connected to a numeric source of a manager control, you cannot change the process percent.</para></remarks>
      <seealso cref="StatusBarPane.Caption" />
      <seealso cref="StatusBarPane.IconName" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.Caption">
      <summary>Specifies the caption for the StatusBar pane.</summary>
      <remarks>You can display a caption and progress bar on the same StatusBar pane.
<para>Note: When you connect a StatusBar pane to the caption source of a manager control, you cannot change the caption. When you connect a StatusBar pane to the image source of a manager control, the caption does not display when you display an image. Additionally, the caption does not display when you use the StatusBarPane.IconName property to specify a valid icon.</para></remarks>
      <seealso cref="StatusBarPane.IconName" />
      <seealso cref="StatusBarPane.Name" />
      <seealso cref="StatusBarPane.ProcessPercent" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.Index">
      <summary>Returns the zero-based index of the pane in the StatusBarPanes collection.</summary>
      <seealso cref="StatusBarPanes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.TextAlignment">
      <summary>Specifies the alignment of the caption text.</summary>
      <remarks>This method also applies to images when the StatusBar control is used to display images.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.Visible">
      <summary>Specifies whether the StatusBar pane is visible.</summary>
      <seealso cref="StatusBar.ShowPanes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.IconName">
      <summary>Specifies an icon for the StatusBar pane.</summary>
      <remarks>TestStand User Interface Controls use icons from the <c>&lt;TestStand&gt;\Components\Icons</c> and <c>&lt;TestStand&#160;Public&gt;\Components\Icons</c> directories. To specify an icon for a StatusBar pane, pass the name of the <c>.ico</c> file to this property.
<para>Note: When a StatusBar pane is connected to an image source of a manager control, you cannot change the icon.</para></remarks>
      <seealso cref="StatusBarPane.Caption" />
      <seealso cref="StatusBarPane.ProcessPercent" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPane.UseAvailableSpace">
      <summary>Set this property to <c>True</c> when you want a StatusBar pane to occupy all available space in the status bar not used by other panes. This property enables a pane to adjust to make full use of the available space when the status bar changes size.</summary>
      <remarks>Although you can have more than one StatusBar pane with a value of <c>True</c> for this property, only the leftmost visible StatusBar pane honors this setting.</remarks>
      <seealso cref="StatusBarPane.Width" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.StatusBarPanes">
      <summary>A collection of StatusBarPane objects.</summary>
      <seealso cref="StatusBarPane" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPanes.Item(System.Object)">
      <summary>Returns a reference to an item with the specified name or at the specified index in the collection.</summary>
      <param name="paneIndex">Specifies a number to obtain a StatusBar pane by the zero-based index. Pass a string to obtain the StatusBar pane using the name.</param>
      <seealso cref="StatusBarPane" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarPanes.Count">
      <summary>Returns the number of items in the collection.</summary>
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.StatusBarPanes.Insert(NationalInstruments.TestStand.Interop.UI.StatusBarPane,System.Int32)">
      <summary>Adds a new item to the collection and returns the new StatusBarPane object.</summary>
      <returns>Specifies the new StatusBar pane.</returns>
      <param name="">Specifies the name of the new StatusBar pane. This name must be unique and is not case-sensitive.</param>
      <param name="insertBefore">Specifies the index of the existing StatusBar pane before which the new StatusBar pane is inserted. To insert at the end, pass <c>-1</c> to this parameter.</param>
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.StatusBarPanes.Clear">
      <summary>Removes all items from the collection.</summary>
      <seealso cref="StatusBarPanes.Remove" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.StatusBarPanes.Remove(System.Object)">
      <summary>Removes the specified item from this collection, if it exists.</summary>
      <param name="paneIndex">Specifies a number to remove a StatusBar pane by the zero-based index. Pass a string to remove a StatusBar pane using the name.</param>
      <seealso cref="StatusBarPanes.Clear" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.StatusBar">
      <summary>Connect a manager control to panes of a StatusBar control to display text, image, or progress information about the application state. You can programmatically control individual <c>StatusBar</c> panes to display custom information.
You can connect the panes to CaptionSources, NumericSources, and ImageSources on the Application Manager, ExecutionView Manager, and SequenceFileView Manager controls.</summary>
      <seealso cref="ApplicationMgr" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ImageSources" />
      <seealso cref="NumericSources" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IStatusBar">
      <summary>Connect a manager control to panes of a StatusBar control to display text, image, or progress information about the application state. You can programmatically control individual <c>StatusBar</c> panes to display custom information.
You can connect the panes to CaptionSources, NumericSources, and ImageSources on the Application Manager, ExecutionView Manager, and SequenceFileView Manager controls.</summary>
      <seealso cref="ApplicationMgr" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ImageSources" />
      <seealso cref="NumericSources" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.StatusBarClass">
      <summary>Connect a manager control to panes of a StatusBar control to display text, image, or progress information about the application state. You can programmatically control individual <c>StatusBar</c> panes to display custom information.
You can connect the panes to CaptionSources, NumericSources, and ImageSources on the Application Manager, ExecutionView Manager, and SequenceFileView Manager controls.</summary>
      <seealso cref="ApplicationMgr" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ImageSources" />
      <seealso cref="NumericSources" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._StatusBarEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.Panes">
      <summary>Returns the StatusBarPanes collection.</summary>
      <seealso cref="StatusBarPanes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.Panes">
      <summary>Returns the StatusBarPanes collection.</summary>
      <seealso cref="StatusBarPanes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.Font">
      <summary>Specifies the font for the control when the value of the StatusBar.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="StatusBar.FontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.Font">
      <summary>Specifies the font for the control when the value of the StatusBar.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="StatusBar.FontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.AutoSize">
      <summary>Specifies whether the control places the status bar on the bottom of the parent window, auto-sizes the height of the status bar, and adjusts to match the width of the parent window at run time.</summary>
      <remarks><para>Note: This property has no effect when you edit a form at design time in any development environment.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.AutoSize">
      <summary>Specifies whether the control places the status bar on the bottom of the parent window, auto-sizes the height of the status bar, and adjusts to match the width of the parent window at run time.</summary>
      <remarks><para>Note: This property has no effect when you edit a form at design time in any development environment.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.ShowTopDivider">
      <summary>Specifies whether the StatusBar control displays a horizontal line as the top border.</summary>
      <remarks>When the application supports themes using Microsoft Windows XP, this property has no visual effect.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.ShowTopDivider">
      <summary>Specifies whether the StatusBar control displays a horizontal line as the top border.</summary>
      <remarks>When the application supports themes using Microsoft Windows XP, this property has no visual effect.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.hWnd">
      <summary>Returns the Window handle of the StatusBar control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.hWnd">
      <summary>Returns the Window handle of the StatusBar control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IStatusBar.Localize(System.String)">
      <summary>Localizes all the text captions in the StatusBar control.</summary>
      <remarks>First, update a <c>.ini</c> file located in the <c>&lt;TestStand Public&gt;\Components\Language</c> directory with the required strings. Second, use the string tags in the <c>.ini</c> file as the pane captions for the control. 
When you call this method, the control replaces the pane captions with the strings from the <c>.ini</c> file. If a caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect a pane to a manager control, the manager control automatically sets a localized caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.StatusBarClass.Localize(System.String)">
      <summary>Localizes all the text captions in the StatusBar control.</summary>
      <remarks>First, update a <c>.ini</c> file located in the <c>&lt;TestStand Public&gt;\Components\Language</c> directory with the required strings. Second, use the string tags in the <c>.ini</c> file as the pane captions for the control. 
When you call this method, the control replaces the pane captions with the strings from the <c>.ini</c> file. If a caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect a pane to a manager control, the manager control automatically sets a localized caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IStatusBar.HitTest(System.Int32,System.Int32)">
      <summary>Returns the index of the pane at the given coordinates.</summary>
      <remarks>Use this method to determine the item to which the given coordinates belong. For example, when a user clicks on the control, you might want to determine the item the user clicked.</remarks>
      <returns>Returns a zero-based item index. You can use this value to retrieve a StatusBarPane object from the StatusBarPanes collection. This method returns <c>-1</c> when the location is not on a pane.</returns>
      <param name="x">Specifies the x-coordinate of the location to test, in pixels, relative to the control. </param>
      <param name="y">Specifies the y-coordinate of the location to test, in pixels, relative to the control. </param>
      <seealso cref="StatusBar.Panes" />
      <seealso cref="StatusBarPane" />
      <seealso cref="StatusBarPanes" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.StatusBarClass.HitTest(System.Int32,System.Int32)">
      <summary>Returns the index of the pane at the given coordinates.</summary>
      <remarks>Use this method to determine the item to which the given coordinates belong. For example, when a user clicks on the control, you might want to determine the item the user clicked.</remarks>
      <returns>Returns a zero-based item index. You can use this value to retrieve a StatusBarPane object from the StatusBarPanes collection. This method returns <c>-1</c> when the location is not on a pane.</returns>
      <param name="x">Specifies the x-coordinate of the location to test, in pixels, relative to the control. </param>
      <param name="y">Specifies the y-coordinate of the location to test, in pixels, relative to the control. </param>
      <seealso cref="StatusBar.Panes" />
      <seealso cref="StatusBarPane" />
      <seealso cref="StatusBarPanes" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._StatusBarEvents_Event.MouseDown">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs..</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
      <seealso cref="StatusBar.MouseMove" />
      <seealso cref="StatusBar.MouseUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._StatusBarEvents_Event.MouseMove">
      <summary>Occurs when the user moves the mouse over the control.</summary>
      <param name="btn">Specifies what mouse buttons are pressed. You can use any combination of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
      <seealso cref="StatusBar.MouseDown" />
      <seealso cref="StatusBar.MouseUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._StatusBarEvents_Event.MouseUp">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
      <seealso cref="StatusBar.MouseDown" />
      <seealso cref="StatusBar.MouseMove" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._StatusBarEvents_Event.DblClick">
      <summary>Occurs when the user double-clicks the mouse over the control.</summary>
      <remarks>Use the StatusBar.HitTest event to determine whether the user double-clicked the mouse on a pane.</remarks>
      <seealso cref="StatusBar.HitTest" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IStatusBar.ShowPanes(System.String)">
      <summary>Shows the list of panes and hides any panes not in the list.</summary>
      <remarks>Use this method to switch between sets of visible panes. </remarks>
      <param name="panesList">Specifies a comma-separated list of pane names. For example, &quot;<c>pane1, pane2, pane3</c>&quot;.</param>
      <seealso cref="StatusBarPane.Visible" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.StatusBarClass.ShowPanes(System.String)">
      <summary>Shows the list of panes and hides any panes not in the list.</summary>
      <remarks>Use this method to switch between sets of visible panes. </remarks>
      <param name="panesList">Specifies a comma-separated list of pane names. For example, &quot;<c>pane1, pane2, pane3</c>&quot;.</param>
      <seealso cref="StatusBarPane.Visible" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.ShowResizingGrip">
      <summary>Specifies to enable the resizing grip on the bottom right corner of the control.</summary>
      <remarks><para>Note: Enable this property only when the window on which you place the StatusBar control is resizable and when the StatusBar.AutoSize property is <c>True</c>.</para></remarks>
      <seealso cref="StatusBar.AutoSize" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.ShowResizingGrip">
      <summary>Specifies to enable the resizing grip on the bottom right corner of the control.</summary>
      <remarks><para>Note: Enable this property only when the window on which you place the StatusBar control is resizable and when the StatusBar.AutoSize property is <c>True</c>.</para></remarks>
      <seealso cref="StatusBar.AutoSize" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.IconSize">
      <summary>Specifies the size of the icons in the control.</summary>
      <remarks>Icons are always square. For example, when you specify an icon size of 32, the dimensions of the icons in the status bar are 32 &#215; 32 pixels.</remarks>
      <seealso cref="StatusBarPane.IconName" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.IconSize">
      <summary>Specifies the size of the icons in the control.</summary>
      <remarks>Icons are always square. For example, when you specify an icon size of 32, the dimensions of the icons in the status bar are 32 &#215; 32 pixels.</remarks>
      <seealso cref="StatusBarPane.IconName" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies.
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the StatusBar.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="StatusBar.Font" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies.
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the StatusBar.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="StatusBar.Font" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._StatusBarEvents_Event.Resized">
      <summary>Occurs when a status bar is resized. This occurs only when you set the StatusBar.AutoSize property to <c>True</c> and resize the parent window.</summary>
      <param name="newWidth">Specifies the new width of the status bar, in pixels.</param>
      <param name="newHeight">Specifies the new height of the status bar, in pixels.</param>
      <seealso cref="StatusBar.AutoSize" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IStatusBar.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.StatusBarClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ComboBox">
      <summary>Connect a SequenceFileView Manager or ExecutionView Manager control to a ComboBox control so users can view or select from a list of sequence files, sequences, step groups, steps, executions, threads, or stack frames. Connect an Application Manager control to a ComboBox control so users can view or select the default adapter of the TestStand Engine.
Use the ComboBox control to connect to and display the ExecutionViewMgrConnections.ExecutionList, ExecutionViewMgrConnections.CallStack, and ExecutionViewMgrConnections.ThreadList properties in the ExecutionView Manager control and the SequenceFileViewMgrConnections.SequenceList, SequenceFileViewMgrConnections.SequenceFileList, and SequenceFileViewMgrConnections.StepGroupList properties in the SequenceFileView Manager control.
Selecting an item in the ComboBox control updates the application based on the type of data the connection specifies.
<para>Note: The ComboBox control does not allow you to populate the items in the drop-down list without connecting to a list connection. The items in the drop-down list are obtained from the connection to a manager control.</para></summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectCallStack" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionList" />
      <seealso cref="ExecutionViewMgr.ConnectThreadList" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.ConnectStepGroupList" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IComboBox">
      <summary>Connect a SequenceFileView Manager or ExecutionView Manager control to a ComboBox control so users can view or select from a list of sequence files, sequences, step groups, steps, executions, threads, or stack frames. Connect an Application Manager control to a ComboBox control so users can view or select the default adapter of the TestStand Engine.
Use the ComboBox control to connect to and display the ExecutionViewMgrConnections.ExecutionList, ExecutionViewMgrConnections.CallStack, and ExecutionViewMgrConnections.ThreadList properties in the ExecutionView Manager control and the SequenceFileViewMgrConnections.SequenceList, SequenceFileViewMgrConnections.SequenceFileList, and SequenceFileViewMgrConnections.StepGroupList properties in the SequenceFileView Manager control.
Selecting an item in the ComboBox control updates the application based on the type of data the connection specifies.
<para>Note: The ComboBox control does not allow you to populate the items in the drop-down list without connecting to a list connection. The items in the drop-down list are obtained from the connection to a manager control.</para></summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectCallStack" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionList" />
      <seealso cref="ExecutionViewMgr.ConnectThreadList" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.ConnectStepGroupList" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ComboBoxClass">
      <summary>Connect a SequenceFileView Manager or ExecutionView Manager control to a ComboBox control so users can view or select from a list of sequence files, sequences, step groups, steps, executions, threads, or stack frames. Connect an Application Manager control to a ComboBox control so users can view or select the default adapter of the TestStand Engine.
Use the ComboBox control to connect to and display the ExecutionViewMgrConnections.ExecutionList, ExecutionViewMgrConnections.CallStack, and ExecutionViewMgrConnections.ThreadList properties in the ExecutionView Manager control and the SequenceFileViewMgrConnections.SequenceList, SequenceFileViewMgrConnections.SequenceFileList, and SequenceFileViewMgrConnections.StepGroupList properties in the SequenceFileView Manager control.
Selecting an item in the ComboBox control updates the application based on the type of data the connection specifies.
<para>Note: The ComboBox control does not allow you to populate the items in the drop-down list without connecting to a list connection. The items in the drop-down list are obtained from the connection to a manager control.</para></summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectCallStack" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionList" />
      <seealso cref="ExecutionViewMgr.ConnectThreadList" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.ConnectStepGroupList" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.IconSize">
      <summary>Specifies the size, in pixels, of the icon displayed in the control.</summary>
      <remarks>The value of this property cannot be less than 1 or greater than 96.
Icons are always square. For example, when you specify an icon size of 32, the dimensions of the icon are 32 &#215; 32 pixels.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.IconSize">
      <summary>Specifies the size, in pixels, of the icon displayed in the control.</summary>
      <remarks>The value of this property cannot be less than 1 or greater than 96.
Icons are always square. For example, when you specify an icon size of 32, the dimensions of the icon are 32 &#215; 32 pixels.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.Enabled">
      <summary>The control responds to user input only when this property is <c>True</c>.</summary>
      <seealso cref="ComboBox.ReadOnly" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.Enabled">
      <summary>The control responds to user input only when this property is <c>True</c>.</summary>
      <seealso cref="ComboBox.ReadOnly" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the ComboBox.MouseIcon property specifies.</remarks>
      <seealso cref="ComboBox.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the ComboBox.MouseIcon property specifies.</remarks>
      <seealso cref="ComboBox.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.MouseIcon">
      <summary>Specifies a custom mouse icon for the control.</summary>
      <remarks>The control displays the specified picture as the cursor when the value of the ComboBox.MousePointer property is <c>MousePointer_Custom</c>. When you set this property to <c>NULL</c>, the value of the <c>ComboBox.MousePointer</c> property changes to <c>MousePointer_Default</c>. 
<para>Note: This property requires that the picture value is an icon.</para></remarks>
      <seealso cref="ComboBox.MousePointer" />
      <seealso cref="MousePointerStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.MouseIcon">
      <summary>Specifies a custom mouse icon for the control.</summary>
      <remarks>The control displays the specified picture as the cursor when the value of the ComboBox.MousePointer property is <c>MousePointer_Custom</c>. When you set this property to <c>NULL</c>, the value of the <c>ComboBox.MousePointer</c> property changes to <c>MousePointer_Default</c>. 
<para>Note: This property requires that the picture value is an icon.</para></remarks>
      <seealso cref="ComboBox.MousePointer" />
      <seealso cref="MousePointerStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.Font">
      <summary>Specifies the font for the control when the value of the ComboBox.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="ComboBox.FontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.Font">
      <summary>Specifies the font for the control when the value of the ComboBox.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="ComboBox.FontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.ItemIndex">
      <summary>Specifies the zero-based index of the currently selected item in the control.</summary>
      <remarks>A value of <c>-1</c> indicates no item is currently selected, or the user entered a new value not in the list.</remarks>
      <seealso cref="ComboBox.Count" />
      <seealso cref="ComboBox.GetItemText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.ItemIndex">
      <summary>Specifies the zero-based index of the currently selected item in the control.</summary>
      <remarks>A value of <c>-1</c> indicates no item is currently selected, or the user entered a new value not in the list.</remarks>
      <seealso cref="ComboBox.Count" />
      <seealso cref="ComboBox.GetItemText" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.HeightWithDropDown">
      <summary>Specifies the maximum height of the edit box and drop-down list.</summary>
      <remarks>When the total height of all the items in the drop-down list exceeds the value of this property, the drop-down list uses a vertical scrollbar. This value cannot be less than 100 pixels.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.HeightWithDropDown">
      <summary>Specifies the maximum height of the edit box and drop-down list.</summary>
      <remarks>When the total height of all the items in the drop-down list exceeds the value of this property, the drop-down list uses a vertical scrollbar. This value cannot be less than 100 pixels.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.Style">
      <summary>Specifies the appearance of the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.Style">
      <summary>Specifies the appearance of the control.</summary>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ComboBoxEvents_Event.Click">
      <summary>Occurs when you press and release the mouse on the control.</summary>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ComboBoxEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the control has input focus. This event occurs before the ComboBox.KeyPress event.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="ComboBox.KeyPress" />
      <seealso cref="ComboBox.KeyUp" />
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ComboBoxEvents_Event.KeyPress">
      <summary>Occurs when the user presses a key while a control is active. This event occurs after the ComboBox.KeyDown event.</summary>
      <param name="keyAscii">Specifies the ASCII value of the pressed key.</param>
      <seealso cref="ComboBox.KeyDown" />
      <seealso cref="ComboBox.KeyUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ComboBoxEvents_Event.KeyUp">
      <summary>Occurs when the user releases a key while the control has input focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="ComboBox.KeyDown" />
      <seealso cref="ComboBox.KeyPress" />
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ComboBoxEvents_Event.Change">
      <summary>Occurs when the contents of a control change.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.ReadOnly">
      <summary>Specifies whether the control can be edited.</summary>
      <seealso cref="ComboBox.Enabled" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.ReadOnly">
      <summary>Specifies whether the control can be edited.</summary>
      <seealso cref="ComboBox.Enabled" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ComboBoxEvents_Event.DropDown">
      <summary>Occurs when the list portion of the control is about to drop down.
<para>Note: The ComboBox control does not allow you to populate the items in the drop-down list.</para></summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the ComboBox.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="ComboBox.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the ComboBox.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="ComboBox.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.Count">
      <summary>Returns the number of items in the ComboBox.</summary>
      <seealso cref="ComboBox.GetItemText" />
      <seealso cref="ComboBox.ItemIndex" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.Count">
      <summary>Returns the number of items in the ComboBox.</summary>
      <seealso cref="ComboBox.GetItemText" />
      <seealso cref="ComboBox.ItemIndex" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IComboBox.GetItemText(System.Int32)">
      <summary>Returns the text of the item at a specified index.</summary>
      <param name="itemIdx">Specifies the zero-based index of the item to retrieve. Pass <c>-1</c> to obtain the text of the currently selected item.</param>
      <seealso cref="ComboBox.Count" />
      <seealso cref="ComboBox.ItemIndex" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.GetItemText(System.Int32)">
      <summary>Returns the text of the item at a specified index.</summary>
      <param name="itemIdx">Specifies the zero-based index of the item to retrieve. Pass <c>-1</c> to obtain the text of the currently selected item.</param>
      <seealso cref="ComboBox.Count" />
      <seealso cref="ComboBox.ItemIndex" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.ShowImages">
      <summary>Specifies whether the control shows images.</summary>
      <remarks>The edit box does not show images when the style is <c>ComboBoxStyle_DropDownCombo</c>.</remarks>
      <seealso cref="ComboBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.ShowImages">
      <summary>Specifies whether the control shows images.</summary>
      <remarks>The edit box does not show images when the style is <c>ComboBoxStyle_DropDownCombo</c>.</remarks>
      <seealso cref="ComboBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IComboBox.ToolTipVisible">
      <summary>Specifies whether the control shows tooltips.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ComboBoxClass.ToolTipVisible">
      <summary>Specifies whether the control shows tooltips.</summary>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ComboBoxEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ErrorCheck">
      <summary>Use these constants with the ExpressionEdit.ErrorCheck property.</summary>
      <seealso cref="ExpressionEdit.ErrorCheck" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ErrorCheck.ErrorCheck_None">
      <summary>(Value: 0) No error checking.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ErrorCheck.ErrorCheck_Syntax">
      <summary>(Value: 1) Checks only for syntax errors.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ErrorCheck.ErrorCheck_SyntaxAndEvaluation">
      <summary>(Value: 2) Checks for syntax and evaluation errors.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes">
      <summary>Use these constants with the ExpressionEdit.GetValidEvaluationTypes, and ExpressionEdit.SetValidEvaluationTypes methods. Use the bitwise-OR operator to specify more than one option.</summary>
      <seealso cref="&quot;EvaluationTypes.AllowedArrayRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedArrayRepresentations_P.htm')" />
      <seealso cref="&quot;EvaluationTypes.AllowedRepresentations&quot;javascript:APILink('/RefTopics/EvaluationTypes_AllowedRepresentations_P.htm')" />
      <seealso cref="ExpressionEdit.GetValidEvaluationTypes" />
      <seealso cref="ExpressionEdit.SetValidEvaluationTypes" />
      <seealso cref="&quot;PropertyValueTypeFlags&quot;javascript:APILink('/RefTopics/PropertyValueTypeFlags.htm')" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_Any">
      <summary>(Value: -1) All expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_Boolean">
      <summary>(Value: 0x1) Only Boolean expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_Number">
      <summary>(Value: 0x2) Only number expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_String">
      <summary>(Value: 0x4) Only string expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_Reference">
      <summary>(Value: 0x8) Only reference expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_Container">
      <summary>(Value: 0x10) Only container expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_NamedType">
      <summary>(Value: 0x20) Only named type expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_BooleanArray">
      <summary>(Value: 0x40) Only Boolean array expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_NumberArray">
      <summary>(Value: 0x80) Only number array expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_StringArray">
      <summary>(Value: 0x100) Only string array expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_ReferenceArray">
      <summary>(Value: 0x200) Only reference array expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_ContainerArray">
      <summary>(Value: 0x400) Only container array expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_NamedTypeArray">
      <summary>(Value: 0x800) Only named type array expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_Enum">
      <summary>(0x20000) Only enum expression types are valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_Object">
      <summary>(Value: 0x4000) Any expression type that is not an element of an array of a basic type is valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_PlainReference">
      <summary>(Value: 0x8000) Only the reference expression type when it is not a named type is valid.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ValidExpressionTypes.ValidExpressionType_PlainContainer">
      <summary>(Value: 0x10000) Only the container expression type when it is not a named type is valid.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ScrollBars">
      <summary>Use these constants with the ExpressionEdit.ScrollBars property.</summary>
      <seealso cref="ExpressionEdit.ScrollBars" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ScrollBars.ScrollBar_None">
      <summary>(Value: 0) Does not show the horizontal or vertical scrollbars.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ScrollBars.ScrollBar_Both">
      <summary>(Value: 1) Shows the horizontal and vertical scrollbars.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ScrollBars.ScrollBar_Horizontal">
      <summary>(Value: 2) Shows only the horizontal scrollbar.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ScrollBars.ScrollBar_Vertical">
      <summary>(Value: 3) Shows only the vertical scrollbar.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBarButtonStyles">
      <summary>Use these constants with the ListBar.ButtonStyle property to specify the style of the button.</summary>
      <seealso cref="ListBar.ButtonStyle" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ListBarButtonStyles.ListBarButtonStyle_3D">
      <summary>(Value: 1) The button style is three-dimensional.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ListBarButtonStyles.ListBarButtonStyle_Flat">
      <summary>(Value: 2) The button style is flat.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBarPageStyles">
      <summary>Use these constants with the ListBar.PageStyle property. Use the bitwise-OR operator to specify more than one option.</summary>
      <seealso cref="ListBar.PageStyle" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ListBarPageStyles.ListBarPageStyle_Tracking">
      <summary>(Value: 0x2) Items on the ListBar page that the mouse hovers over are highlighted.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ListBarPageStyles.ListBarPageStyle_IconsOnTop">
      <summary>(Value: 0x4) Items on the ListBar page draw icons above the text.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ListBarPageStyles.ListBarPageStyle_FrameSelectedItem">
      <summary>(Value: 0x1) When set, a frame surrounds the selected item. When not set, the control highlights the text of the selected item.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes">
      <summary>Use these constants with the SeqViewColumn.Type property to define what type of information is displayed for each step in the column.</summary>
      <seealso cref="SeqViewColumn.Expression" />
      <seealso cref="SeqViewColumn.Type" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_Name">
      <summary>(Value: 1) Name of the step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_StepIndex">
      <summary>(Value: 2) Index of the step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_Description">
      <summary>(Value: 3) Description of the step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_ExecutionFlow">
      <summary>(Value: 4) Execution flow of the step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_Status">
      <summary>(Value: 5) Status of the step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_Expression">
      <summary>(Value: 6) Custom Expression. Use the SeqViewColumn.Expression property to specify an expression for the column.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_Comment ">
      <summary>(Value: 7) Comment for the step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_Requirements">
      <summary>(Value: 8) Requirements of the step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes.SeqViewColumnType_StepSettings">
      <summary>(Value: 4) A summary of the settings for the step.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ToolBarTextStyles">
      <summary>Use these constants with the ReportView.ToolBarTextStyle property.</summary>
      <seealso cref="ReportView.ToolbarTextStyle" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ToolBarTextStyles.ToolBarTextStyle_TextBelow">
      <summary>(Value: 0) Text for toolbar buttons displays below button icons.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ToolBarTextStyles.ToolBarTextStyle_TextRight">
      <summary>(Value: 1) Text for the toolbar buttons displays to the right of button icons.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ToolBarTextStyles.ToolBarTextStyle_TextInvisible">
      <summary>(Value: 2) Toolbar buttons do not have text.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ReportViewButtons">
      <summary>Use these constants with the ReportView.ButtonsVisible property.</summary>
      <seealso cref="&quot;General property page&quot;javascript:UILink('/InfoTopics/RepView_PropPage_General.htm')" />
      <seealso cref="ReportView" />
      <seealso cref="ReportView.ButtonsVisible" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_Back">
      <summary>(Value: 0x1) Use this button to navigate to previously viewed reports.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_Forward">
      <summary>(Value: 0x2) Use this button to navigate to previously viewed reports.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_Stop">
      <summary>(Value: 0x4) Use this button to stop the ReportView control from displaying the current report.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_Refresh">
      <summary>(Value: 0x8) Use this button to refresh the currently displayed report.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_Home">
      <summary>(Value: 0x10) Use this button to navigate to the first report opened in the ReportView control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_ExternalViewer">
      <summary>(Value: 0x20) Use this button to open an external viewer for this kind of report.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_Print">
      <summary>(Value: 0x40) Use this button to print the currently displayed report. You can configure the Print button to launch the Print dialog box before printing on the General property page of the ReportView control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_FontSize">
      <summary>(Value: 0x80) This constant is obsolete. Use this button to change the size of the HTML text displayed.
<para>Note: This size is a global setting for the computer and affects the size of text in the web browser when you are using Microsoft Internet Explorer.</para></summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_OpenReportLocation">
      <summary>(Value: 0x200) Use this button to open File Explorer in the location where the currently displayed report is saved.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReportViewButtons.ReportViewButton_SelectActiveReport">
      <summary>(Value: 256) Use this button to change the active report in the Reports collection of an execution. The ReportView control displays the current active report. This button is disabled if the <c>Reports</c> collection is empty. </summary>
      <seealso cref="&quot;Reports&quot;javascript:APILink('/RefTopics/Reports.htm')" />
      <seealso cref="ReportView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.StatusBarPaneStyles">
      <summary>Use these constants with the StatusBarPane.Style property.</summary>
      <seealso cref="StatusBarPane.Style" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.StatusBarPaneStyles.StatusBarPaneStyle_Etched">
      <summary>(Value: 1) The pane has an etched border, with a sunken outer edge and a raised inner edge.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.StatusBarPaneStyles.StatusBarPaneStyle_Flat">
      <summary>(Value: 2) The pane is flat and has no border.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.StatusBarPaneStyles.StatusBarPaneStyle_Raised">
      <summary>(Value: 3) The pane has a raised border.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ComboBoxStyles">
      <summary>Use these constants with the ComboBox.Style property.</summary>
      <seealso cref="ComboBox.HeightWithDropDown" />
      <seealso cref="ComboBox.Style" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ComboBoxStyles.ComboBoxStyle_DropDownCombo">
      <summary>(Value: 0) Includes a drop-down list and an edit box. You can select from the list or type in the edit box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ComboBoxStyles.ComboBoxStyle_DropDownList">
      <summary>(Value: 2) Allows selection only from the drop-down list.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.AlignmentStyles">
      <summary>Use these constants to specify the text alignment of the Label and StatusBarPane controls.</summary>
      <seealso cref="Label" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.AlignmentStyles.AlignmentStyle_LeftJustify">
      <summary>(Value: 0) Text is left-aligned.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.AlignmentStyles.AlignmentStyle_RightJustify">
      <summary>(Value: 1) Text is right-aligned.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.AlignmentStyles.AlignmentStyle_Center">
      <summary>(Value: 2) Text is centered.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.BorderStyles">
      <summary>Use these constants with Label.BorderStyle to specify the border style of the control.</summary>
      <seealso cref="Label.BorderStyle" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BorderStyles.BorderStyle_Fixed3D">
      <summary>(Value: 1) Specifies that the control draws a three-dimensional border.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BorderStyles.BorderStyle_NoBorder">
      <summary>(Value: 0) Specifies that the control does not draw a border.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BorderStyles.BorderStyle_FixedSingle">
      <summary>(Value: 2) Specifies that the control draws a single-line border.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.MousePointerStyles">
      <summary>Use these constants with the Button.MousePointer, ComboBox.MousePointer, ExpressionEdit.MousePointer, Label.MousePointer, and ListBox.MousePointer properties.</summary>
      <seealso cref="Button.MousePointer" />
      <seealso cref="ComboBox.MousePointer" />
      <seealso cref="ExpressionEdit.MousePointer" />
      <seealso cref="Label.MousePointer" />
      <seealso cref="ListBox.MousePointer" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_Default">
      <summary>(Value: 0)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_Arrow">
      <summary>(Value: 1)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_Crosshair">
      <summary>(Value: 2)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_Ibeam">
      <summary>(Value: 3)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_SizeNESW">
      <summary>(Value: 4)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_SizeNS">
      <summary>(Value: 5)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_SizeNWSE">
      <summary>(Value: 6)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_SizeWE">
      <summary>(Value: 7)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_UpArrow">
      <summary>(Value: 8)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_HourGlass">
      <summary>(Value: 9)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_NoDrop">
      <summary>(Value: 10)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_ArrowHourGlass">
      <summary>(Value: 11)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_ArrowQuestion">
      <summary>(Value: 12)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_SizeAll">
      <summary>(Value: 13)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MousePointerStyles.MousePointer_Custom">
      <summary>(Value: 99)</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ShortcutModifiers">
      <summary>Use these constants with the Command.ShortcutModifier, ExpressionEditButton.ShortcutModifier, and ApplicationMgr.EditModeShortcutModifier properties.</summary>
      <seealso cref="ApplicationMgr.EditModeShortcutModifier" />
      <seealso cref="Command.ShortcutModifier" />
      <seealso cref="ExpressionEditButton.ShortcutModifier" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutModifiers.ShortcutModifier_NotAModifier">
      <summary>(Value: 0x0) No modifier keys are available.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutModifiers.ShortcutModifier_Control">
      <summary>(Value: 0x2) The &lt;Ctrl&gt; key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutModifiers.ShortcutModifier_Shift">
      <summary>(Value: 0x1) The &lt;Shift&gt; key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutModifiers.ShortcutModifier_Alt">
      <summary>(Value: 0x4) The &lt;Alt&gt; key.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ShortcutKeys">
      <summary>Use these constants with the Command.ShortcutKey, ExpressionEditButton.ShortcutKey, and ApplicationMgr.EditModeShortcutKey properties.</summary>
      <seealso cref="ApplicationMgr.EditModeShortcutKey" />
      <seealso cref="Command.ShortcutKey" />
      <seealso cref="ExpressionEditButton.ShortcutKey" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_R">
      <summary>(Value: 0x52) The R key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_S">
      <summary>(Value: 0x53) The S key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_T">
      <summary>(Value: 0x54) The T key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_U">
      <summary>(Value: 0x55) The U key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_V">
      <summary>(Value: 0x56) The V key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_W">
      <summary>(Value: 0x57) The W key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_X">
      <summary>(Value: 0x58) The X key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_Y">
      <summary>(Value: 0x59) The Y key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_Z">
      <summary>(Value: 0x5A) The Z key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD0">
      <summary>(Value: 0x60) The numeric keypad 0 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD1">
      <summary>(Value: 0x61) The numeric keypad 1 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD2">
      <summary>(Value: 0x62) The numeric keypad 2 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD3">
      <summary>(Value: 0x63) The numeric keypad 3 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD4">
      <summary>(Value: 0x64) The numeric keypad 4 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD5">
      <summary>(Value: 0x65) The numeric keypad 5 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD6">
      <summary>(Value: 0x66) The numeric keypad 6 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD7">
      <summary>(Value: 0x67) The numeric keypad 7 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD8">
      <summary>(Value: 0x68) The numeric keypad 8 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NUMPAD9">
      <summary>(Value: 0x69) The numeric keypad 9 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_MULTIPLY">
      <summary>(Value: 0x6A) The Multiply key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_ADD">
      <summary>(Value: 0x6B) The Add key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_SEPARATOR">
      <summary>(Value: 0x6C) The Separator key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_SUBTRACT">
      <summary>(Value: 0x6D) The Subtract key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_DECIMAL">
      <summary>(Value: 0x6E) The Decimal key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_DIVIDE">
      <summary>(Value: 0x6F) The Divide key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F1">
      <summary>(Value: 0x70) The F1 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F2">
      <summary>(Value: 0x71) The F2 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F3">
      <summary>(Value: 0x72) The F3 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F4">
      <summary>(Value: 0x73) The F4 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F5">
      <summary>(Value: 0x74) The F5 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F6">
      <summary>(Value: 10x75) The F6 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F7">
      <summary>(Value: 0x76)The F7 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F8">
      <summary>(Value: 0x77) The F8 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F9">
      <summary>(Value: 0x78) The F9 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F10">
      <summary>(Value: 0x79) The F10 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F11">
      <summary>(Value: 0x7A) The F11 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F12">
      <summary>(Value: 0x7B) The F12 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F13">
      <summary>(Value: 0x7C) The F13 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F14">
      <summary>(Value: 0x7D) The F14 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F15">
      <summary>(Value: 0x7E) The F15 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F16">
      <summary>(Value: 0x7F) The F16 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F17">
      <summary>(Value: 0x80) The F17 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F18">
      <summary>(Value: 0x81) The F18 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F19">
      <summary>(Value: 0x82) The F19 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F20">
      <summary>(Value: 0x83) The F20 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F21">
      <summary>(Value: 0x84) The F21 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F22">
      <summary>(Value: 0x85) The F22 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F23">
      <summary>(Value: 0x86) The F23 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F24">
      <summary>(Value: 0x87) The F24 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_NOT_A_KEY">
      <summary>(Value: 0x00)</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_BACK">
      <summary>(Value: 0x08) The Backspace key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_TAB">
      <summary>(Value: 0x09) The &lt;Tab&gt; key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_RETURN">
      <summary>(Value: 0x0D) The Enter key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_ESCAPE">
      <summary>(Value: 0x1B) The Escape key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_SPACE">
      <summary>(Value: 0x20) The Space key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_END">
      <summary>(Value: 0x23) The End key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_HOME">
      <summary>(Value: 0x24) The Home key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_LEFT">
      <summary>(Value: 0x25) The Left Arrow key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_UP">
      <summary>(Value: 0x26) The Up Arrow key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_RIGHT">
      <summary>(Value: 0x27) The Right Arrow key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_DOWN">
      <summary>(Value: 0x28) The Down Arrow key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_INSERT">
      <summary>(Value: 0x2D) The Insert key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_DELETE">
      <summary>(Value: 0x2E) The Delete key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_0">
      <summary>(Value: 0x30) The 0 key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_1">
      <summary>(Value: 0x31) The 1 key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_2">
      <summary>(Value: 0x32) The 2 key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_3">
      <summary>(Value: 0x33) The 3 key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_4">
      <summary>(Value: 0x34) The 4 key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_5">
      <summary>(Value: 0x35) The 5 key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_6">
      <summary>(Value: 0x36) The 6 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_7">
      <summary>(Value: 0x37) The 7 key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_8">
      <summary>(Value: 0x38) The 8 key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_9">
      <summary>(Value: 0x39) The 9 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_A">
      <summary>(Value: 0x41) The A key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_B">
      <summary>(Value: 0x42) The B key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_C">
      <summary>(Value: 0x43) The C key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_D">
      <summary>(Value: 0x44) The D key. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_E">
      <summary>(Value: 0x45) The E key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_F">
      <summary>(Value: 0x46) The F key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_G">
      <summary>(Value: 0x47) The G key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_H">
      <summary>(Value: 0x48) The H key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_I">
      <summary>(Value: 0x49) The I key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_J">
      <summary>(Value: 0x4A) The J key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_K">
      <summary>(Value: 0x4B) The K key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_L">
      <summary>(Value: 0x4C) The L key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_M">
      <summary>(Value: 0x4D) The M key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_N">
      <summary>(Value: 0x4E) The N key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_O">
      <summary>(Value: 0x4F) The O key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_P">
      <summary>(Value: 0x50) The P key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ShortcutKeys.ShortcutKey_VK_Q">
      <summary>(Value: 0x51) The Q key.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ButtonSizing">
      <summary>Use these constants with the Button.AutoSizing property.</summary>
      <seealso cref="Button.AutoSizing" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ButtonSizing.ButtonSizing_AlwaysAutoSize">
      <summary>(Value: 0) Always resize the Button control to fit the text.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ButtonSizing.ButtonSizing_GrowOnly">
      <summary>(Value: 1) Resize the Button control only when the text does not fit in the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ButtonSizing.ButtonSizing_ShrinkOnly">
      <summary>(Value: 2) Resize the Button control only when the text is smaller than the button.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ButtonSizing.ButtonSizing_NeverAutoSize">
      <summary>(Value: 3) Never resize the Button control.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ReloadFiles">
      <summary>Use these constants with the ApplicationMgr.ReloadSequenceFilesOnStart property.</summary>
      <seealso cref="ApplicationMgr.ReloadSequenceFilesOnStart" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReloadFiles.ReloadFile_None">
      <summary>(Value: 0) Does not reload any files.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReloadFiles.ReloadFile_Selected">
      <summary>(Value: 1) Reloads any file selected in a SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReloadFiles.ReloadFile_All">
      <summary>(Value: 2) Reloads all files.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBox">
      <summary>Connect a SequenceFileView Manager or ExecutionView Manager control to a ListBox control so users can view or select from a list of sequence files, sequences, step groups, steps, executions, threads, or stack frames. Connect an Application Manager control to a ListBox control so users can view or select the default adapter of the TestStand Engine. Use a ListBox control to display multiple pages, where each page contains a list of items that users can view or select.
Use the ListBox control to connect to and display the ExecutionViewMgrConnections.ExecutionList, ExecutionViewMgrConnections.CallStack, and ExecutionViewMgrConnections.ThreadList properties in the ExecutionView Manager control and the SequenceFileViewMgrConnections.SequenceList, SequenceFileViewMgrConnections.SequenceFileList, and SequenceFileViewMgrConnections.StepGroupList properties in the SequenceFileView Manager control.
Selecting an item in the ListBox control updates the application according to the type of connection.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectCallStack" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionList" />
      <seealso cref="ExecutionViewMgr.ConnectThreadList" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.CallStack&quot;ExecutionViewMgrConnections_CallStack_P.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ThreadList&quot;ExecutionViewMgrConnections_ThreadList_P.htm" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.ConnectStepGroupList" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceList&quot;SequenceFileViewMgrConnections_SequenceList_P.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceFileList&quot;SequenceFileViewMgrConnections_SequenceFileList_P.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.StepGroupList&quot;SequenceFileViewMgrConnections_StepGroupList_P.htm" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IListBox">
      <summary>Connect a SequenceFileView Manager or ExecutionView Manager control to a ListBox control so users can view or select from a list of sequence files, sequences, step groups, steps, executions, threads, or stack frames. Connect an Application Manager control to a ListBox control so users can view or select the default adapter of the TestStand Engine. Use a ListBox control to display multiple pages, where each page contains a list of items that users can view or select.
Use the ListBox control to connect to and display the ExecutionViewMgrConnections.ExecutionList, ExecutionViewMgrConnections.CallStack, and ExecutionViewMgrConnections.ThreadList properties in the ExecutionView Manager control and the SequenceFileViewMgrConnections.SequenceList, SequenceFileViewMgrConnections.SequenceFileList, and SequenceFileViewMgrConnections.StepGroupList properties in the SequenceFileView Manager control.
Selecting an item in the ListBox control updates the application according to the type of connection.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectCallStack" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionList" />
      <seealso cref="ExecutionViewMgr.ConnectThreadList" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.CallStack&quot;ExecutionViewMgrConnections_CallStack_P.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ThreadList&quot;ExecutionViewMgrConnections_ThreadList_P.htm" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.ConnectStepGroupList" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceList&quot;SequenceFileViewMgrConnections_SequenceList_P.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceFileList&quot;SequenceFileViewMgrConnections_SequenceFileList_P.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.StepGroupList&quot;SequenceFileViewMgrConnections_StepGroupList_P.htm" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBoxClass">
      <summary>Connect a SequenceFileView Manager or ExecutionView Manager control to a ListBox control so users can view or select from a list of sequence files, sequences, step groups, steps, executions, threads, or stack frames. Connect an Application Manager control to a ListBox control so users can view or select the default adapter of the TestStand Engine. Use a ListBox control to display multiple pages, where each page contains a list of items that users can view or select.
Use the ListBox control to connect to and display the ExecutionViewMgrConnections.ExecutionList, ExecutionViewMgrConnections.CallStack, and ExecutionViewMgrConnections.ThreadList properties in the ExecutionView Manager control and the SequenceFileViewMgrConnections.SequenceList, SequenceFileViewMgrConnections.SequenceFileList, and SequenceFileViewMgrConnections.StepGroupList properties in the SequenceFileView Manager control.
Selecting an item in the ListBox control updates the application according to the type of connection.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectCallStack" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionList" />
      <seealso cref="ExecutionViewMgr.ConnectThreadList" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.CallStack&quot;ExecutionViewMgrConnections_CallStack_P.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ThreadList&quot;ExecutionViewMgrConnections_ThreadList_P.htm" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.ConnectStepGroupList" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceList&quot;SequenceFileViewMgrConnections_SequenceList_P.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceFileList&quot;SequenceFileViewMgrConnections_SequenceFileList_P.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.StepGroupList&quot;SequenceFileViewMgrConnections_StepGroupList_P.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.Count">
      <summary>Returns the number of items in the listbox.</summary>
      <seealso cref="ListBox.ItemIndex" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.Count">
      <summary>Returns the number of items in the listbox.</summary>
      <seealso cref="ListBox.ItemIndex" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IListBox.HitTest(System.Int32,System.Int32)">
      <summary>Returns the index of the item at the given coordinates. Returns <c>-1</c> when no item exists at the specified coordinates.</summary>
      <remarks>Use this method to determine the item at the given coordinates. For example, when a user clicks on the control, you can determine the item the user clicked.</remarks>
      <returns>Returns a numeric item index.</returns>
      <param name="x">Specifies the x-coordinate of the location to test, in pixels, relative to the control.</param>
      <param name="y">Specifies the y-coordinate of the location to test, in pixels, relative to the control.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBoxClass.HitTest(System.Int32,System.Int32)">
      <summary>Returns the index of the item at the given coordinates. Returns <c>-1</c> when no item exists at the specified coordinates.</summary>
      <remarks>Use this method to determine the item at the given coordinates. For example, when a user clicks on the control, you can determine the item the user clicked.</remarks>
      <returns>Returns a numeric item index.</returns>
      <param name="x">Specifies the x-coordinate of the location to test, in pixels, relative to the control.</param>
      <param name="y">Specifies the y-coordinate of the location to test, in pixels, relative to the control.</param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.EditingFlags">
      <summary>Specifies the types of editing the listbox allows. Use any combination of the EditingFlags constants with this property.</summary>
      <remarks>By default, TestStand allows all editing types. These flags have no effect if the listbox is not connected to display editable items. </remarks>
      <seealso cref="EditingFlags" />
      <seealso cref="ListBox.CanEditLabel" />
      <seealso cref="ListBox.EditLabel" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.EditingFlags">
      <summary>Specifies the types of editing the listbox allows. Use any combination of the EditingFlags constants with this property.</summary>
      <remarks>By default, TestStand allows all editing types. These flags have no effect if the listbox is not connected to display editable items. </remarks>
      <seealso cref="EditingFlags" />
      <seealso cref="ListBox.CanEditLabel" />
      <seealso cref="ListBox.EditLabel" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.Enabled">
      <summary>The control responds to user input only when this property is <c>True</c>.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.Enabled">
      <summary>The control responds to user input only when this property is <c>True</c>.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the ListBox.MouseIcon property specifies.</remarks>
      <seealso cref="ListBox.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the ListBox.MouseIcon property specifies.</remarks>
      <seealso cref="ListBox.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.MouseIcon">
      <summary>Specifies a custom mouse pointer icon for the control.</summary>
      <remarks>The control displays the specified picture as the cursor when the value of the ListBox.MousePointer property is <c>MousePointer_Custom</c>. When you set this property to <c>NULL</c>, the value of the <c>ListBox.MousePointer</c> property changes to <c>MousePointer_Default</c>.
<para>Note: This property requires that the picture value is an icon.</para></remarks>
      <seealso cref="ListBox.MousePointer" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.MouseIcon">
      <summary>Specifies a custom mouse pointer icon for the control.</summary>
      <remarks>The control displays the specified picture as the cursor when the value of the ListBox.MousePointer property is <c>MousePointer_Custom</c>. When you set this property to <c>NULL</c>, the value of the <c>ListBox.MousePointer</c> property changes to <c>MousePointer_Default</c>.
<para>Note: This property requires that the picture value is an icon.</para></remarks>
      <seealso cref="ListBox.MousePointer" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.Font">
      <summary>Specifies the font for the control when the value of the ListBox.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="ListBox.FontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.Font">
      <summary>Specifies the font for the control when the value of the ListBox.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="ListBox.FontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.BackColor">
      <summary>Specifies the background color for the control.</summary>
      <seealso cref="ListBox.ForeColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.BackColor">
      <summary>Specifies the background color for the control.</summary>
      <seealso cref="ListBox.ForeColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.ItemIndex">
      <summary>Specifies the index of the currently selected item in the control.
<para>Note: You cannot change this property at design time.</para></summary>
      <remarks>When no item is selected, the value of this property is <c>-1</c>.</remarks>
      <seealso cref="ListBox.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.ItemIndex">
      <summary>Specifies the index of the currently selected item in the control.
<para>Note: You cannot change this property at design time.</para></summary>
      <remarks>When no item is selected, the value of this property is <c>-1</c>.</remarks>
      <seealso cref="ListBox.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.Columns">
      <summary>TestStand 4.0 or later does not support setting this property to create multiple columns. Setting this property has no effect.</summary>
      <remarks>Use the ListBox.ColumnSet property to access information about list box columns.</remarks>
      <seealso cref="ListBox.ColumnSet" />
      <seealso cref="ListBox.ShowHeaders" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.Columns">
      <summary>TestStand 4.0 or later does not support setting this property to create multiple columns. Setting this property has no effect.</summary>
      <remarks>Use the ListBox.ColumnSet property to access information about list box columns.</remarks>
      <seealso cref="ListBox.ColumnSet" />
      <seealso cref="ListBox.ShowHeaders" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.ForeColor">
      <summary>Specifies the foreground color for the ListBox control.</summary>
      <seealso cref="ListBox.BackColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.ForeColor">
      <summary>Specifies the foreground color for the ListBox control.</summary>
      <seealso cref="ListBox.BackColor" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.Click">
      <summary>Occurs when you press and release the mouse on the control or when the selected item of the control changes.</summary>
      <seealso cref="ListBox.MouseDown" />
      <seealso cref="ListBox.MouseMove" />
      <seealso cref="ListBox.MouseUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the control has the input focus. This event occurs before the ListBox.KeyPress event.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
      <seealso cref="ListBox.KeyPress" />
      <seealso cref="ListBox.KeyUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.KeyPress">
      <summary>Occurs when the user presses a key while a control is active. This event occurs after the ListBox.KeyDown event.</summary>
      <param name="keyAscii">Specifies the ASCII value of the pressed key.</param>
      <seealso cref="ListBox.KeyDown" />
      <seealso cref="ListBox.KeyUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.KeyUp">
      <summary>Occurs when the user releases a key while the control has the input focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
      <seealso cref="ListBox.KeyDown" />
      <seealso cref="ListBox.KeyPress" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.MouseDown">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="ListBox.Click" />
      <seealso cref="ListBox.MouseMove" />
      <seealso cref="ListBox.MouseUp" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.MouseMove">
      <summary>Occurs when the user moves the mouse over the control.</summary>
      <param name="btn">Specifies what mouse buttons are pressed. You can use any combination of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="ListBox.Click" />
      <seealso cref="ListBox.MouseDown" />
      <seealso cref="ListBox.MouseUp" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.MouseUp">
      <summary>Occurs when the user releases the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="ListBox.Click" />
      <seealso cref="ListBox.MouseDown" />
      <seealso cref="ListBox.MouseMove" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.hWnd">
      <summary>Returns a Window handle for the ListBox control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.hWnd">
      <summary>Returns a Window handle for the ListBox control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the ListBox.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="ListBox.Font" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the ListBox.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="ListBox.Font" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IListBox.GetItemText(System.Int32)">
      <summary>Returns the text of the item at a specified index.</summary>
      <param name="itemIdx">Specifies the zero-based index of the item to return. Pass the ListBox.ItemIndex property or pass <c>-1</c> to obtain the text of the currently selected item.</param>
      <seealso cref="ListBox.Count" />
      <seealso cref="ListBox.ItemIndex" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBoxClass.GetItemText(System.Int32)">
      <summary>Returns the text of the item at a specified index.</summary>
      <param name="itemIdx">Specifies the zero-based index of the item to return. Pass the ListBox.ItemIndex property or pass <c>-1</c> to obtain the text of the currently selected item.</param>
      <seealso cref="ListBox.Count" />
      <seealso cref="ListBox.ItemIndex" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.ToolTipVisible">
      <summary>Specifies whether the control shows tooltips.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.ToolTipVisible">
      <summary>Specifies whether the control shows tooltips.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="ListBox.BorderDragged" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="ListBox.BorderDragged" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.BorderDragged">
      <summary>Occurs when the user drags a draggable border of a control with the mouse. The event provides the location and size to which you must set the control for the draggable borders to track the mouse cursor. However, you can choose to modify the location or size to which you set the control. For example, you can limit the width of the control so the left edge cannot be dragged off of the visible portion of the window.
In addition to changing the size and position of the control, you might also update the sizes and positions of the other controls on the window to account for the change.</summary>
      <remarks>If you are using LabVIEW, you must add the Horizontal and Vertical components of the origin of the LabVIEW front panel to the newX and newY event parameter values before you can use the newX and newY event parameters to set the ActiveX Container (AxCont) Left and Top properties for the control. To obtain the origin of a LabVIEW front panel, place an ActiveX property node on the block diagram of the VI, right-click the node, and select Link to&#0187;Pane from the context menu. Right-click the node again and select Select Property&#0187;Origin.</remarks>
      <param name="bordersChanged">Specifies which borders the user dragged. Refer to the WhichBorders constants for more information about draggable borders.</param>
      <param name="newX">Specifies the new x-coordinate for the control.</param>
      <param name="newY">Specifies the new y-coordinate for the control.</param>
      <param name="newWidth">Specifies the new width for the control.</param>
      <param name="newHeight">Specifies the new height for the control.</param>
      <param name="finalResize">Specifies whether the event is the final event for the drag operation the user performs.</param>
      <seealso cref="Borders" />
      <seealso cref="WhichBorders" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.CanEditLabel">
      <summary>Returns a value that indicates whether the listbox can enter label-editing mode, in which you can edit the item text in the first column of the listbox.</summary>
      <seealso cref="ListBox.EditingFlags" />
      <seealso cref="ListBox.EditLabel" />
      <seealso cref="&#xD;&#xA;&#xD;&#xA;" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.CanEditLabel">
      <summary>Returns a value that indicates whether the listbox can enter label-editing mode, in which you can edit the item text in the first column of the listbox.</summary>
      <seealso cref="ListBox.EditingFlags" />
      <seealso cref="ListBox.EditLabel" />
      <seealso cref="&#xD;&#xA;&#xD;&#xA;" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IListBox.EditLabel">
      <summary>Enters label-editing mode for the active item in the list. In label-editing mode, you can edit the item text in the first column of the listbox.</summary>
      <remarks>The listbox automatically attempts to enter label-edit mode when you click the active item in the first column or when you press &lt;F2&gt; when the listbox has the keyboard focus.</remarks>
      <seealso cref="ListBox.CanEditLabel" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBoxClass.EditLabel">
      <summary>Enters label-editing mode for the active item in the list. In label-editing mode, you can edit the item text in the first column of the listbox.</summary>
      <remarks>The listbox automatically attempts to enter label-edit mode when you click the active item in the first column or when you press &lt;F2&gt; when the listbox has the keyboard focus.</remarks>
      <seealso cref="ListBox.CanEditLabel" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.ShowHeaders">
      <summary>Specifies whether the control displays headers for the visible columns.</summary>
      <seealso cref="ListBox.Columns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.ShowHeaders">
      <summary>Specifies whether the control displays headers for the visible columns.</summary>
      <seealso cref="ListBox.Columns" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.CreateContextMenu">
      <summary>Occurs when you right-click the control so the application can build a context menu from which you can select commands. Even though you can implement context menus in most environments without using this event, some environments do not provide any other way to create a context menu. Also, creating a context menu using this event is less complicated in most environments, especially when the context menu contains only TestStand commands.</summary>
      <param name="menuHandle">Specifies the Microsoft Windows menu handle (HMENU). When you add menu items to the menu handle, the control displays them in a context menu. Use the Commands.InsertIntoWin32Menu method to insert TestStand commands into the menu. 

You can also use the menu functions in the Windows Software Development Kit (SDK) to add other menu items; however, these menu items do not have an associated TestStand command. When you select an item without a TestStand command, the control creates and executes a Command object of kind <c>CommandKind_Custom</c>. The control stores the menu item identifier, such as resource ID or command ID, as a long in the Command.UserData property, and as a decimal string in the command display name. You can handle either the ApplicationMgr.PreCommandExecute or ApplicationMgr.PostCommandExecute event to receive a notification when the user selects a menu item you insert with the Windows SDK. 

When you close the context menu, the control disposes of the menu items. You do not need to dispose of the menu items you insert.</param>
      <param name="x">Specifies the horizontal position of right-clicking, relative to the control.</param>
      <param name="y">Specifies the vertical position of right-clicking, relative to the control.</param>
      <seealso cref="ApplicationMgr.PostCommandExecute" />
      <seealso cref="ApplicationMgr.PreCommandExecute" />
      <seealso cref="Command.UserData" />
      <seealso cref="Commands.InsertIntoWin32Menu" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.DblClick">
      <summary>Occurs when you double-click using the left mouse button.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.ColumnSet">
      <summary>Returns the list of columns for the control.</summary>
      <seealso cref="ListBoxColumns" />
      <seealso cref="ListBox.Columns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.ColumnSet">
      <summary>Returns the list of columns for the control.</summary>
      <seealso cref="ListBoxColumns" />
      <seealso cref="ListBox.Columns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IListBox.AutoSizeColumns">
      <summary>Specifies whether to make all columns fit within the width of the control. When the control resizes, the width of each column for which the ListBoxColumn.Autosizing property is a value other than <c>AutoSizingOption_None</c> adjusts so the columns fit the new size of the control. You must ensure that at least one column enables autosizing when you set this property to <c>True</c>.</summary>
      <remarks>When this property is <c>True</c>, the sum of all column widths always equals the width of the control, and the horizontal scrollbar is not visible. When this property is <c>False</c>, you can resize the columns to any width, and the horizontal scrollbar appears as needed. When the value of the autosize property for each column is <c>AutoSizingOption_None</c>, the last column is autosized to fit the width of the control.</remarks>
      <seealso cref="ListBox.ColumnSet" />
      <seealso cref="ListBoxColumn.Autosizing" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxClass.AutoSizeColumns">
      <summary>Specifies whether to make all columns fit within the width of the control. When the control resizes, the width of each column for which the ListBoxColumn.Autosizing property is a value other than <c>AutoSizingOption_None</c> adjusts so the columns fit the new size of the control. You must ensure that at least one column enables autosizing when you set this property to <c>True</c>.</summary>
      <remarks>When this property is <c>True</c>, the sum of all column widths always equals the width of the control, and the horizontal scrollbar is not visible. When this property is <c>False</c>, you can resize the columns to any width, and the horizontal scrollbar appears as needed. When the value of the autosize property for each column is <c>AutoSizingOption_None</c>, the last column is autosized to fit the width of the control.</remarks>
      <seealso cref="ListBox.ColumnSet" />
      <seealso cref="ListBoxColumn.Autosizing" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ListBoxEvents_Event.ColumnsResized">
      <summary>Occurs when one or more columns resize in the control.</summary>
      <seealso cref="ListBoxColumn.Width" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.Label">
      <summary>Connect a manager control to a Label control to display text information about the application state in the label, such as the name of the current user or the status of the current unit under test.</summary>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ILabel">
      <summary>Connect a manager control to a Label control to display text information about the application state in the label, such as the name of the current user or the status of the current unit under test.</summary>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.LabelClass">
      <summary>Connect a manager control to a Label control to display text information about the application state in the label, such as the name of the current user or the status of the current unit under test.</summary>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.Enabled">
      <summary>When this property is <c>False</c>, the caption text dims.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.Enabled">
      <summary>When this property is <c>False</c>, the caption text dims.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the Label.MouseIcon property specifies.</remarks>
      <seealso cref="Label.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.MousePointer">
      <summary>Specifies the appearance of the mouse cursor when the cursor is over the control.</summary>
      <remarks>When the parameter is <c>MousePointer_Custom</c>, the mouse cursor is the picture the Label.MouseIcon property specifies.</remarks>
      <seealso cref="Label.MouseIcon" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.MouseIcon">
      <summary>Specifies a custom mouse icon for the control.</summary>
      <remarks>The control displays the specified picture as the cursor when the value of the Label.MousePointer property is <c>MousePointer_Custom</c>. When you set this property to <c>NULL</c>, the value of the <c>Label.MousePointer</c> property changes to <c>MousePointer_Default</c>.
<para>Note: Icons are the only types of pictures supported.</para></remarks>
      <seealso cref="Label.MousePointer" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.MouseIcon">
      <summary>Specifies a custom mouse icon for the control.</summary>
      <remarks>The control displays the specified picture as the cursor when the value of the Label.MousePointer property is <c>MousePointer_Custom</c>. When you set this property to <c>NULL</c>, the value of the <c>Label.MousePointer</c> property changes to <c>MousePointer_Default</c>.
<para>Note: Icons are the only types of pictures supported.</para></remarks>
      <seealso cref="Label.MousePointer" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.Font">
      <summary>Specifies the font for the control when the value of the Label.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="Label.BackColor" />
      <seealso cref="Label.FontSource" />
      <seealso cref="Label.ForeColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.Font">
      <summary>Specifies the font for the control when the value of the Label.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="Label.BackColor" />
      <seealso cref="Label.FontSource" />
      <seealso cref="Label.ForeColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.BackColor">
      <summary>Specifies the background color for the control.</summary>
      <seealso cref="Label.ForeColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.BackColor">
      <summary>Specifies the background color for the control.</summary>
      <seealso cref="Label.ForeColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.ForeColor">
      <summary>Specifies the foreground color for the control.</summary>
      <seealso cref="Label.BackColor" />
      <seealso cref="Label.Font" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.ForeColor">
      <summary>Specifies the foreground color for the control.</summary>
      <seealso cref="Label.BackColor" />
      <seealso cref="Label.Font" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.AutoSize">
      <summary>The control automatically resizes to display all the content when this property is <c>True</c>. The direction in which the control resizes varies depending on the alignment of the text and the value of the Label.WordWrap property.</summary>
      <seealso cref="Label.Alignment" />
      <seealso cref="Label.Caption" />
      <seealso cref="Label.WordWrap" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.AutoSize">
      <summary>The control automatically resizes to display all the content when this property is <c>True</c>. The direction in which the control resizes varies depending on the alignment of the text and the value of the Label.WordWrap property.</summary>
      <seealso cref="Label.Alignment" />
      <seealso cref="Label.Caption" />
      <seealso cref="Label.WordWrap" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.WordWrap">
      <summary>When this property is <c>True</c>, the Label can display multiple lines of text, and the Label breaks lines before a word that would extend past the right edge of the control. When this property is <c>False</c>, the Label always displays one line of text.</summary>
      <remarks>When this property is <c>True</c>, the Label.AutoSize property causes the Label to expand vertically. When this property is <c>False</c>, the <c>Label.AutoSize</c> property causes the Label to expand horizontally.</remarks>
      <seealso cref="Label.AutoSize" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.WordWrap">
      <summary>When this property is <c>True</c>, the Label can display multiple lines of text, and the Label breaks lines before a word that would extend past the right edge of the control. When this property is <c>False</c>, the Label always displays one line of text.</summary>
      <remarks>When this property is <c>True</c>, the Label.AutoSize property causes the Label to expand vertically. When this property is <c>False</c>, the <c>Label.AutoSize</c> property causes the Label to expand horizontally.</remarks>
      <seealso cref="Label.AutoSize" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.UseMnemonic">
      <summary>The label interprets the character that follows an ampersand (<c>&amp;</c>) character in the Label.Caption property as an accelerator character when this property is <c>True</c>.</summary>
      <seealso cref="Label.Caption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.UseMnemonic">
      <summary>The label interprets the character that follows an ampersand (<c>&amp;</c>) character in the Label.Caption property as an accelerator character when this property is <c>True</c>.</summary>
      <seealso cref="Label.Caption" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.Caption">
      <summary>Specifies the text the control displays.</summary>
      <remarks>Use this property to assign an accelerator character to a control when the Label.UseMnemonic property is <c>True</c>. In the caption, include an ampersand (<c>&amp;</c>) immediately before the character you want to designate as the accelerator character. The character is now underlined. Press &lt;Alt&gt; plus the underlined character to move the focus to the control. 
To include an ampersand in a caption without creating an accelerator character, include two ampersands (<c>&amp;&amp;</c>). A single ampersand is visible in the caption and no characters are underlined.</remarks>
      <seealso cref="Label.UseMnemonic" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.Caption">
      <summary>Specifies the text the control displays.</summary>
      <remarks>Use this property to assign an accelerator character to a control when the Label.UseMnemonic property is <c>True</c>. In the caption, include an ampersand (<c>&amp;</c>) immediately before the character you want to designate as the accelerator character. The character is now underlined. Press &lt;Alt&gt; plus the underlined character to move the focus to the control. 
To include an ampersand in a caption without creating an accelerator character, include two ampersands (<c>&amp;&amp;</c>). A single ampersand is visible in the caption and no characters are underlined.</remarks>
      <seealso cref="Label.UseMnemonic" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.BorderStyle">
      <summary>Specifies the border style for the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.BorderStyle">
      <summary>Specifies the border style for the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.Alignment">
      <summary>Specifies the alignment of the text in the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.Alignment">
      <summary>Specifies the alignment of the text in the control.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ILabel.Localize(System.String)">
      <summary>Localizes the text caption.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the caption for the control. 
When you call this method, the control replaces the caption with the string from the <c>.ini</c> file. If the caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect this control to a manager control, the manager control automatically sets a localized caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.LabelClass.Localize(System.String)">
      <summary>Localizes the text caption.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the caption for the control. 
When you call this method, the control replaces the caption with the string from the <c>.ini</c> file. If the caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect this control to a manager control, the manager control automatically sets a localized caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._LabelEvents_Event.Click">
      <summary>Occurs when you press and release the mouse on the control.</summary>
      <seealso cref="Label.MouseDown" />
      <seealso cref="Label.MouseMove" />
      <seealso cref="Label.MouseUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._LabelEvents_Event.MouseDown">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="Label.Click" />
      <seealso cref="Label.MouseMove" />
      <seealso cref="Label.MouseUp" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._LabelEvents_Event.MouseMove">
      <summary>Occurs when the user moves the mouse over the control.</summary>
      <param name="btn">Specifies what mouse buttons are pressed. You can use any combination of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="Label.Click" />
      <seealso cref="Label.MouseDown" />
      <seealso cref="Label.MouseUp" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._LabelEvents_Event.MouseUp">
      <summary>Occurs when the user releases the mouse on the control. This event occurs before the Label.Click event.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="Label.Click" />
      <seealso cref="Label.MouseDown" />
      <seealso cref="Label.MouseMove" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._LabelEvents_Event.Change">
      <summary>Occurs when you change the contents of the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the Label.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="Label.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the Label.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="Label.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ILabel.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.LabelClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._LabelEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ReportView">
      <summary>Connect an ExecutionView Manager control to a ReportView control to display the report for the selected execution.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectReportView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IReportView">
      <summary>Connect an ExecutionView Manager control to a ReportView control to display the report for the selected execution.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectReportView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ReportViewClass">
      <summary>Connect an ExecutionView Manager control to a ReportView control to display the report for the selected execution.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectReportView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IReportView.GetRichEditCtrl">
      <summary>Returns the Window handle to the RichText control this control uses to display text reports.</summary>
      <remarks>You can use a returned Window handle with the Microsoft Windows API functions.</remarks>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ReportViewClass.GetRichEditCtrl">
      <summary>Returns the Window handle to the RichText control this control uses to display text reports.</summary>
      <remarks>You can use a returned Window handle with the Microsoft Windows API functions.</remarks>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ReportViewEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IReportView.PrintReport(System.Boolean)">
      <summary>Prints the current report.</summary>
      <param name="showPrintDialog">Pass <c>True</c> to launch the Print dialog box, in which you can select a printer for printing the report.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ReportViewClass.PrintReport(System.Boolean)">
      <summary>Prints the current report.</summary>
      <param name="showPrintDialog">Pass <c>True</c> to launch the Print dialog box, in which you can select a printer for printing the report.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IReportView.UpdateFromExecution(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Updates the content of the control from an Execution object.</summary>
      <remarks>This method changes the report style of the control to the style the report uses. When you connect this control to an ExecutionView Manager control, you do not need to call this method because the connection updates this control when the report for the selected execution changes.</remarks>
      <param name="exec">Specifies the execution from which the ReportView control obtains the report.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ReportViewClass.UpdateFromExecution(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Updates the content of the control from an Execution object.</summary>
      <remarks>This method changes the report style of the control to the style the report uses. When you connect this control to an ExecutionView Manager control, you do not need to call this method because the connection updates this control when the report for the selected execution changes.</remarks>
      <param name="exec">Specifies the execution from which the ReportView control obtains the report.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IReportView.GetHTMLCtrl">
      <summary><para>Note: This method is obsolete.</para></summary>
      <remarks>Returns the handle to the WebBrowser control this control uses to display HTML and XML reports.
Use this handle to access methods and properties of the WebBrowser control. Refer to Microsoft MSDN documentation for more information about WebBrowser control methods and properties.</remarks>
      <seealso cref="ReportView.GetRichEditCtrl" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ReportViewClass.GetHTMLCtrl">
      <summary><para>Note: This method is obsolete.</para></summary>
      <remarks>Returns the handle to the WebBrowser control this control uses to display HTML and XML reports.
Use this handle to access methods and properties of the WebBrowser control. Refer to Microsoft MSDN documentation for more information about WebBrowser control methods and properties.</remarks>
      <seealso cref="ReportView.GetRichEditCtrl" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.ToolBarVisible">
      <summary>Specifies whether the control displays a toolbar.</summary>
      <seealso cref="ReportView.LargeIcons" />
      <seealso cref="ToolBarTextStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.ToolBarVisible">
      <summary>Specifies whether the control displays a toolbar.</summary>
      <seealso cref="ReportView.LargeIcons" />
      <seealso cref="ToolBarTextStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.LargeIcons">
      <summary>When this property is <c>True</c>, the control displays large icons in the toolbar. When this property is <c>False</c>, the control displays small icons in the toolbar.</summary>
      <seealso cref="ReportView.ToolBarVisible" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.LargeIcons">
      <summary>When this property is <c>True</c>, the control displays large icons in the toolbar. When this property is <c>False</c>, the control displays small icons in the toolbar.</summary>
      <seealso cref="ReportView.ToolBarVisible" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.ToolBarTextStyle">
      <summary>Specifies how the control displays the text for the toolbar buttons.</summary>
      <seealso cref="ReportView.ToolBarVisible" />
      <seealso cref="ToolBarTextStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.ToolBarTextStyle">
      <summary>Specifies how the control displays the text for the toolbar buttons.</summary>
      <seealso cref="ReportView.ToolBarVisible" />
      <seealso cref="ToolBarTextStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.ButtonsVisible">
      <summary>Specifies which buttons are visible in the toolbar of the control. Use any combination of the ReportViewButtons constants. Use the bitwise-OR operator to specify more than one value.</summary>
      <returns>Specifies which toolbar buttons are visible.</returns>
      <seealso cref="ReportViewButtons" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.ButtonsVisible">
      <summary>Specifies which buttons are visible in the toolbar of the control. Use any combination of the ReportViewButtons constants. Use the bitwise-OR operator to specify more than one value.</summary>
      <returns>Specifies which toolbar buttons are visible.</returns>
      <seealso cref="ReportViewButtons" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.TextReportFont">
      <summary>Specifies the current font of the text used when displaying text reports. This font is used when the value of the ReportView.TextReportFontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="ReportView.TextReportColor" />
      <seealso cref="ReportView.TextReportBackColor" />
      <seealso cref="ReportView.TextReportFontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.TextReportFont">
      <summary>Specifies the current font of the text used when displaying text reports. This font is used when the value of the ReportView.TextReportFontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="ReportView.TextReportColor" />
      <seealso cref="ReportView.TextReportBackColor" />
      <seealso cref="ReportView.TextReportFontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.TextReportFontSource">
      <summary>Specifies the font the control uses to display text reports.
<para>Note: This property does not apply to HTML and XML reports.</para> The default value for this property is <c>FontSource_UseSystemFixedWidthFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the ReportView.TextReportFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="ReportView.TextReportFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.TextReportFontSource">
      <summary>Specifies the font the control uses to display text reports.
<para>Note: This property does not apply to HTML and XML reports.</para> The default value for this property is <c>FontSource_UseSystemFixedWidthFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the ReportView.TextReportFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="ReportView.TextReportFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.TextReportColor">
      <summary>Specifies the color of the text used when displaying reports.</summary>
      <seealso cref="ReportView.TextReportBackColor" />
      <seealso cref="ReportView.TextReportFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.TextReportColor">
      <summary>Specifies the color of the text used when displaying reports.</summary>
      <seealso cref="ReportView.TextReportBackColor" />
      <seealso cref="ReportView.TextReportFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.TextReportBackColor">
      <summary>Specifies the background color of the report when displaying text reports.</summary>
      <seealso cref="ReportView.TextReportColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.TextReportBackColor">
      <summary>Specifies the background color of the report when displaying text reports.</summary>
      <seealso cref="ReportView.TextReportColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IReportView.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="ReportView.BorderDragged" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ReportViewClass.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="ReportView.BorderDragged" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ReportViewEvents_Event.BorderDragged">
      <summary>Occurs when the user drags a draggable border of a control with the mouse. The event provides the location and size to which you must set the control for the draggable borders to track the mouse cursor. However, you can choose to modify the location or size to which you set the control. For example, you can limit the width of the control so the left edge cannot be dragged off of the visible portion of the window.
In addition to changing the size and position of the control, you might also update the sizes and positions of the other controls on the window to account for the change.</summary>
      <remarks>If you are using LabVIEW, you must add the Horizontal and Vertical components of the origin of the LabVIEW front panel to the newX and newY event parameter values before you can use the newX and newY event parameters to set the ActiveX Container (AxCont) Left and Top properties for the control. To obtain the origin of a LabVIEW front panel, place an ActiveX property node on the block diagram of the VI, right-click the node, and select Link to&#0187;Pane from the context menu. Right-click the node again and select Select Property&#0187;Origin.</remarks>
      <param name="bordersChanged">Specifies which borders the user dragged. Refer to the WhichBorders constants for more information about draggable borders.</param>
      <param name="newX">Specifies the new x-coordinate for the control.</param>
      <param name="newY">Specifies the new y-coordinate for the control.</param>
      <param name="newWidth">Specifies the new width for the control.</param>
      <param name="newHeight">Specifies the new height for the control.</param>
      <param name="finalResize">Specifies whether the event is the final event for the drag operation the user performs.</param>
      <seealso cref="Borders" />
      <seealso cref="WhichBorders" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IReportView.UpdateFromFile(System.String)">
      <summary>Updates the content of the control from a file.</summary>
      <remarks>The extension of the fileName parameter determines the report style of the control. For example, if fileName is <c>C:\Reports\MyReport.html</c>, the style is HTML.
<para>Note: This method returns an error if the ReportView control is currently attached to an execution.</para></remarks>
      <param name="fileName">Specifies the full path of the report file.</param>
      <seealso cref="&quot;Report.Format&quot;javascript:APILink('/RefTopics/Report_Format_P.htm')" />
      <seealso cref="&quot;ReportView General property page&quot;javascript:UILink('/InfoTopics/RepView_PropPage_General.htm')" />
      <seealso cref="ReportView.UpdateFromExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ReportViewClass.UpdateFromFile(System.String)">
      <summary>Updates the content of the control from a file.</summary>
      <remarks>The extension of the fileName parameter determines the report style of the control. For example, if fileName is <c>C:\Reports\MyReport.html</c>, the style is HTML.
<para>Note: This method returns an error if the ReportView control is currently attached to an execution.</para></remarks>
      <param name="fileName">Specifies the full path of the report file.</param>
      <seealso cref="&quot;Report.Format&quot;javascript:APILink('/RefTopics/Report_Format_P.htm')" />
      <seealso cref="&quot;ReportView General property page&quot;javascript:UILink('/InfoTopics/RepView_PropPage_General.htm')" />
      <seealso cref="ReportView.UpdateFromExecution" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SeqViewColumn">
      <summary>The SeqViewColumn object represents a column in the SequenceView control. Use the  SequenceView.Columns property to obtain a list of columns for the control.</summary>
      <seealso cref="SequenceView" />
      <seealso cref="SequenceView.Columns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.Name">
      <summary>Specifies the name for the column.</summary>
      <remarks>Every column must have a unique name, which can be used to identify the column within the SeqViewColumns collection. Column names are not case-sensitive.</remarks>
      <seealso cref="SeqViewColumn.Index" />
      <seealso cref="SeqViewColumns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.Expression">
      <summary>Specifies the expression for the column.</summary>
      <remarks>The column evaluates the expression and displays the evaluation result for each step.
The Expression property is one of two ways you can define what a column displays. You can also use the SeqViewColumn.Type property to define standard columns, such as step index or step description.
<para>Note: This property is active only when the column type is <c>SeqViewColumnType_Expression</c>. The expression must return a string.</para></remarks>
      <seealso cref="SeqViewColumn.Caption" />
      <seealso cref="SeqViewColumn.Type" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.Visible">
      <summary>Specifies whether the column is visible.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.Type">
      <summary>Specifies the type of the column.</summary>
      <remarks>You can use this property to define what kind of information displays for each step in the column. When the type of column you need is not defined in SeqViewColumnTypes, you can set the type to <c>SeqViewColumnType_Expression</c> and create your own type using the SeqViewColumn.Expression property. The result of the expression you specify displays for each step.</remarks>
      <seealso cref="SeqViewColumn.Expression" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.TextColorExpression">
      <summary>Specifies an expression that determines the text color for individual cells in the column at run time.</summary>
      <remarks>This expression overrides the item color the SequenceView.TextColor and SequenceView.ItemTextColorExpression properties define.
The expression must return a numeric color value. When you do not want to change the text color, return <c>-1</c>, as the following example shows:
<c>Step.Result.Status == &quot;Failed&quot; ? tsRed: -1</c>
When you assign this expression string to the <c>TextColorExpression</c> property of a column and run the application, the control colors the column text red for steps that fail.
When empty, the control ignores this property.</remarks>
      <seealso cref="SequenceView.ItemTextColorExpression" />
      <seealso cref="SequenceView.TextColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.BackColorExpression">
      <summary>Specifies an expression used to determine the background color for individual cells in the selected column at run time.</summary>
      <remarks>This expression overrides the item color the SequenceView.BackColor and SequenceView.ItemBackColorExpression properties define.
Specify an expression that returns a numeric color value. When you do not want to change the text color, return <c>-1</c>, as the following example shows:
<c>Step.Result.Status == &quot;Failed&quot; ? tsRed: -1</c>
When you assign this expression string to the <c>BackColorExpression</c> property of a column and run the application, the control colors the column background red for steps that fail.
When empty, the control ignores this property.</remarks>
      <seealso cref="SequenceView.BackColor" />
      <seealso cref="SequenceView.ItemBackColorExpression" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.Index">
      <summary>Returns the zero-based numeric index of the column within the SeqViewColumns collection.</summary>
      <seealso cref="SeqViewColumn.Name" />
      <seealso cref="SeqViewColumns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.Caption">
      <summary>Specifies the caption in the header for the column.</summary>
      <seealso cref="SeqViewColumn.Expression" />
      <seealso cref="SeqViewColumn.Type" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.Width">
      <summary>Specifies the width of the column in pixels. When you set the width, the control generates the SequenceView.ColumnResized event.</summary>
      <seealso cref="SequenceView.ColumnResized" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumn.AutoSizing">
      <summary>Specifies whether the column automatically grows or shrinks to adjust to changes in the size of the control. This property does not take effect unless the SequenceView.AutoSizeColumns property is <c>True</c>.</summary>
      <seealso cref="SequenceView.AutoSizeColumns" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SeqViewColumns">
      <summary>A collection of SeqViewColumn objects.</summary>
      <seealso cref="SeqViewColumn" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumns.Item(System.Object)">
      <summary>Returns a reference to an item with the specified name or at the specified index in the collection.</summary>
      <param name="itemIdx">You can pass a number to obtain a column by its index value. You can also pass a string to obtain the column using its name.</param>
      <seealso cref="SeqViewColumn" />
      <seealso cref="SeqViewColumns.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SeqViewColumns.Count">
      <summary>Returns the number of items in the collection.</summary>
      <seealso cref="SeqViewColumn" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SeqViewColumns.Insert(System.String,NationalInstruments.TestStand.Interop.UI.SeqViewColumnTypes,System.Int32,System.Int32)">
      <summary>Adds a new item to the collection and returns the new SeqViewColumn object.</summary>
      <param name="itemName">Specifies the name of the new column. The name must be unique but is not case-sensitive.</param>
      <param name="columnType">Specifies the type of column. Refer to the SeqViewColumn.Type property for more information about column types.</param>
      <param name="columnWidth">Specifies the width of the new column, in pixels.</param>
      <param name="insertBefore">Specifies the index of the existing page before which to insert the new page. When you want the new page to be last, pass <c>-1</c> to this parameter.</param>
      <seealso cref="SeqViewColumn" />
      <seealso cref="SeqViewColumn.Type" />
      <seealso cref="SeqViewColumns.Clear" />
      <seealso cref="SeqViewColumnTypes" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SeqViewColumns.Remove(System.Int32)">
      <summary>Removes the specified item from this collection, if it exists.</summary>
      <param name="itemIdx">Specifies the zero-based index of the column to remove from the collection.</param>
      <seealso cref="SeqViewColumns.Clear" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SeqViewColumns.MoveLeft(System.Int32)">
      <summary>Moves a specific column one position to the left towards the beginning of the collection. For example, call <c>Control.Columns.MoveLeft(1)</c> to switch the first and second columns.</summary>
      <param name="itemIdx">Specifies the zero-based index of the column to move in the collection.</param>
      <seealso cref="SeqViewColumns.MoveRight" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SeqViewColumns.MoveRight(System.Int32)">
      <summary>Moves a specific column one position to the right towards the end of the collection. For example, call <c>Control.Columns.MoveRight(0)</c> to switch the first and second columns.</summary>
      <param name="itemIdx">Specifies the zero-based index of the column to move in the collection.</param>
      <seealso cref="SeqViewColumns.MoveLeft" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SeqViewColumns.Clear">
      <summary>Removes all items from the collection.</summary>
      <seealso cref="SeqViewColumns.Insert" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SequenceView">
      <summary>Connect a SequenceFileView Manager control or an ExecutionView Manager control to a SequenceView control to display the steps of a sequence from a selected file or execution. The SequenceView control displays the steps in a list with columns you specify when you configure the control.
The SequenceView control maintains a cursor that indicates the last active item you clicked using the mouse or highlighted using the arrow keys. The control denotes the cursor using a dotted box that outlines the step. Use the SequenceView control to select one or more steps at a time.
Use the SequenceFileView Manager control connected to the SequenceView control to control which sequence, step groups, and steps are selected in the file and to track the expansion of the step groups.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionView" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ISequenceView">
      <summary>Connect a SequenceFileView Manager control or an ExecutionView Manager control to a SequenceView control to display the steps of a sequence from a selected file or execution. The SequenceView control displays the steps in a list with columns you specify when you configure the control.
The SequenceView control maintains a cursor that indicates the last active item you clicked using the mouse or highlighted using the arrow keys. The control denotes the cursor using a dotted box that outlines the step. Use the SequenceView control to select one or more steps at a time.
Use the SequenceFileView Manager control connected to the SequenceView control to control which sequence, step groups, and steps are selected in the file and to track the expansion of the step groups.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionView" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SequenceViewClass">
      <summary>Connect a SequenceFileView Manager control or an ExecutionView Manager control to a SequenceView control to display the steps of a sequence from a selected file or execution. The SequenceView control displays the steps in a list with columns you specify when you configure the control.
The SequenceView control maintains a cursor that indicates the last active item you clicked using the mouse or highlighted using the arrow keys. The control denotes the cursor using a dotted box that outlines the step. Use the SequenceView control to select one or more steps at a time.
Use the SequenceFileView Manager control connected to the SequenceView control to control which sequence, step groups, and steps are selected in the file and to track the expansion of the step groups.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectExecutionView" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.AutoSizeColumns">
      <summary>Specifies to make all columns fit within the width of the control. When the control resizes, the width of each column for which the SeqViewColumn.Autosizing property is a value other than <c>AutoSizingOption_None</c> adjusts so the columns fit the new size of the control. You must ensure that at least one column enables autosizing when you set this property to <c>True</c>.</summary>
      <remarks>When this property is <c>True</c>, the sum of all column widths always equals the width of the control and the horizontal scrollbar is not visible.
When this property is <c>False</c>, you can resize the columns to any width and the horizontal scrollbar appears as needed.</remarks>
      <seealso cref="SequenceView.Columns" />
      <seealso cref="SeqViewColumn.Autosizing" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.AutoSizeColumns">
      <summary>Specifies to make all columns fit within the width of the control. When the control resizes, the width of each column for which the SeqViewColumn.Autosizing property is a value other than <c>AutoSizingOption_None</c> adjusts so the columns fit the new size of the control. You must ensure that at least one column enables autosizing when you set this property to <c>True</c>.</summary>
      <remarks>When this property is <c>True</c>, the sum of all column widths always equals the width of the control and the horizontal scrollbar is not visible.
When this property is <c>False</c>, you can resize the columns to any width and the horizontal scrollbar appears as needed.</remarks>
      <seealso cref="SequenceView.Columns" />
      <seealso cref="SeqViewColumn.Autosizing" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceView.ItemIndexToStep(System.Int32,NationalInstruments.TestStand.Interop.API.StepGroups@,System.Int32@)">
      <summary>Converts from an item index to a step group and step index.</summary>
      <returns>Returns <c>True</c> when the item at itemIndex is a step. Returns <c>False</c> when the item is a step group start or end marker.</returns>
      <param name="itemIndex">Specifies a zero-based index that specifies an item in the control. Item indexes increase from top to bottom.</param>
      <param name="group">Returns the step group of the specified step.</param>
      <param name="stepIndex">Returns the index within the step group for the specified step. Returns <c>-1</c> when the item is a start marker. Returns the number of steps in the step group when the item is an end marker.</param>
      <seealso cref="SequenceView.StepToItemIndex" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.ItemIndexToStep(System.Int32,NationalInstruments.TestStand.Interop.API.StepGroups@,System.Int32@)">
      <summary>Converts from an item index to a step group and step index.</summary>
      <returns>Returns <c>True</c> when the item at itemIndex is a step. Returns <c>False</c> when the item is a step group start or end marker.</returns>
      <param name="itemIndex">Specifies a zero-based index that specifies an item in the control. Item indexes increase from top to bottom.</param>
      <param name="group">Returns the step group of the specified step.</param>
      <param name="stepIndex">Returns the index within the step group for the specified step. Returns <c>-1</c> when the item is a start marker. Returns the number of steps in the step group when the item is an end marker.</param>
      <seealso cref="SequenceView.StepToItemIndex" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.TextColor">
      <summary>Specifies the default text color for the item text.</summary>
      <remarks><para>Note: You can override this default color on a per-row, per-column basis using the SequenceView.ItemTextColorExpression and SeqViewColumn.TextColorExpression properties.</para></remarks>
      <seealso cref="&quot;Color&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref="SequenceView.BackColor" />
      <seealso cref="SequenceView.ItemTextColorExpression" />
      <seealso cref="SeqViewColumn.TextColorExpression" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.TextColor">
      <summary>Specifies the default text color for the item text.</summary>
      <remarks><para>Note: You can override this default color on a per-row, per-column basis using the SequenceView.ItemTextColorExpression and SeqViewColumn.TextColorExpression properties.</para></remarks>
      <seealso cref="&quot;Color&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref="SequenceView.BackColor" />
      <seealso cref="SequenceView.ItemTextColorExpression" />
      <seealso cref="SeqViewColumn.TextColorExpression" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.ShowComments">
      <summary>Specifies whether the control displays step comments.</summary>
      <remarks>The control displays step comments above the step. Although step comments can be of any length, you can use the SequenceView.MaxCommentsHeight property to limit the number of comment lines that display for each step.</remarks>
      <seealso cref="SequenceView.CommentsOffset" />
      <seealso cref="SequenceView.MaxCommentsHeight" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.ShowComments">
      <summary>Specifies whether the control displays step comments.</summary>
      <remarks>The control displays step comments above the step. Although step comments can be of any length, you can use the SequenceView.MaxCommentsHeight property to limit the number of comment lines that display for each step.</remarks>
      <seealso cref="SequenceView.CommentsOffset" />
      <seealso cref="SequenceView.MaxCommentsHeight" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.CommentsColor">
      <summary>Specifies the color of the comments for step items.</summary>
      <seealso cref="&quot;Color&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref="SequenceView.CommentsFont" />
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.CommentsColor">
      <summary>Specifies the color of the comments for step items.</summary>
      <seealso cref="&quot;Color&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref="SequenceView.CommentsFont" />
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.LinesColor">
      <summary>Specifies the color of gridlines.</summary>
      <seealso cref="SequenceView.HorizLines" />
      <seealso cref="SequenceView.VertLines" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.LinesColor">
      <summary>Specifies the color of gridlines.</summary>
      <seealso cref="SequenceView.HorizLines" />
      <seealso cref="SequenceView.VertLines" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.ShowCommentsBars">
      <summary>When this property is <c>True</c> and the SequenceView.ShowComments property is <c>True</c>, vertical lines display to the left of the step comments.</summary>
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.ShowCommentsBars">
      <summary>When this property is <c>True</c> and the SequenceView.ShowComments property is <c>True</c>, vertical lines display to the left of the step comments.</summary>
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.BackColor">
      <summary>Specifies the default background color.</summary>
      <remarks><para>Note: You can override this default color on a per-row, per-column basis using the SequenceView.ItemBackColorExpression and SeqViewColumn.BackColorExpression properties.</para>
<para>Note: When using the SequenceView control as an ExecutionViewConnection, use the <c>SequenceView.BackColor</c> property only when the value of the ExecutionViewConnection.Options property is <c>ExecutionViewConnection_IgnoreColors</c>.</para></remarks>
      <seealso cref="&quot;Color Object&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref=" ExecutionViewConnection" />
      <seealso cref="&quot;ExecutionViewConnection.Options&quot;ExecutionViewConnection_Options_P.htm" />
      <seealso cref="SequenceView.CommentsColor" />
      <seealso cref="SequenceView.ItemBackColorExpression" />
      <seealso cref="SequenceView.TextColor" />
      <seealso cref="SeqViewColumn.BackColorExpression" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.BackColor">
      <summary>Specifies the default background color.</summary>
      <remarks><para>Note: You can override this default color on a per-row, per-column basis using the SequenceView.ItemBackColorExpression and SeqViewColumn.BackColorExpression properties.</para>
<para>Note: When using the SequenceView control as an ExecutionViewConnection, use the <c>SequenceView.BackColor</c> property only when the value of the ExecutionViewConnection.Options property is <c>ExecutionViewConnection_IgnoreColors</c>.</para></remarks>
      <seealso cref="&quot;Color Object&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref=" ExecutionViewConnection" />
      <seealso cref="&quot;ExecutionViewConnection.Options&quot;ExecutionViewConnection_Options_P.htm" />
      <seealso cref="SequenceView.CommentsColor" />
      <seealso cref="SequenceView.ItemBackColorExpression" />
      <seealso cref="SequenceView.TextColor" />
      <seealso cref="SeqViewColumn.BackColorExpression" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.TextFont">
      <summary>Specifies the font for the item text when the value of the SequenceView.TextFontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.TextColor" />
      <seealso cref="SequenceView.TextFontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.TextFont">
      <summary>Specifies the font for the item text when the value of the SequenceView.TextFontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.TextColor" />
      <seealso cref="SequenceView.TextFontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.CommentsFont">
      <summary>Specifies the font for comments when the value of the SequenceView.CommentsFontSource property is <c>FontSource_UseFontProperty</c>.
</summary>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.CommentsColor" />
      <seealso cref="SequenceView.CommentsFontSource" />
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.CommentsFont">
      <summary>Specifies the font for comments when the value of the SequenceView.CommentsFontSource property is <c>FontSource_UseFontProperty</c>.
</summary>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.CommentsColor" />
      <seealso cref="SequenceView.CommentsFontSource" />
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.HeaderFont">
      <summary>Specifies the font for the header, which labels each column when the value of the SequenceView.HeaderFontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.Columns" />
      <seealso cref="SequenceView.HeaderFontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.HeaderFont">
      <summary>Specifies the font for the header, which labels each column when the value of the SequenceView.HeaderFontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.Columns" />
      <seealso cref="SequenceView.HeaderFontSource" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.ShowItemTipStrips">
      <summary>Specifies whether the control displays tooltips.</summary>
      <remarks>Item tooltips are the tooltips that appear when you hover over a partially visible item with the mouse. Tooltips allow you to see the full caption of a partially visible item.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.ShowItemTipStrips">
      <summary>Specifies whether the control displays tooltips.</summary>
      <remarks>Item tooltips are the tooltips that appear when you hover over a partially visible item with the mouse. Tooltips allow you to see the full caption of a partially visible item.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.Columns">
      <summary>Returns the collection of columns.</summary>
      <seealso cref="SequenceView.AutoSizeColumns" />
      <seealso cref="SeqViewColumns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.Columns">
      <summary>Returns the collection of columns.</summary>
      <seealso cref="SequenceView.AutoSizeColumns" />
      <seealso cref="SeqViewColumns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.MaxCommentsHeight">
      <summary>Specifies the maximum number of comment lines visible per step.</summary>
      <remarks>Use this property to specify the maximum number of comment lines a step can display. By default, the value of this property is <c>3</c>.</remarks>
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.MaxCommentsHeight">
      <summary>Specifies the maximum number of comment lines visible per step.</summary>
      <remarks>Use this property to specify the maximum number of comment lines a step can display. By default, the value of this property is <c>3</c>.</remarks>
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.Cursor">
      <summary>Specifies the cursor index. The cursor indicates the active item in the view using a dotted box that outlines the item. Setting this property clears the current selection and selects the specified item.</summary>
      <seealso cref="SequenceView.FocusIndex" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.Cursor">
      <summary>Specifies the cursor index. The cursor indicates the active item in the view using a dotted box that outlines the item. Setting this property clears the current selection and selects the specified item.</summary>
      <seealso cref="SequenceView.FocusIndex" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.HorizLines">
      <summary>Specifies whether the horizontal grid lines are visible.</summary>
      <seealso cref="SequenceView.LinesColor" />
      <seealso cref="SequenceView.VertLines" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.HorizLines">
      <summary>Specifies whether the horizontal grid lines are visible.</summary>
      <seealso cref="SequenceView.LinesColor" />
      <seealso cref="SequenceView.VertLines" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.VertLines">
      <summary>Specifies whether the vertical grid lines are visible.</summary>
      <seealso cref="SequenceView.HorizLines" />
      <seealso cref="SequenceView.LinesColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.VertLines">
      <summary>Specifies whether the vertical grid lines are visible.</summary>
      <seealso cref="SequenceView.HorizLines" />
      <seealso cref="SequenceView.LinesColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.CommentsOffset">
      <summary>Specifies the number of pixels to indent the comment text and comment bar to the right.</summary>
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.CommentsOffset">
      <summary>Specifies the number of pixels to indent the comment text and comment bar to the right.</summary>
      <seealso cref="SequenceView.ShowComments" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceView.HitTest(System.Int32,System.Int32)">
      <summary>Returns the zero-based index of the step at the location you specify. When the location is on the End step, the index is equal to the number of steps in the step group the control displays. A value of <c>-1</c> indicates the location is not on a step.</summary>
      <remarks>Use this method to determine the item to which the given coordinates belong. For example, when a user clicks on the control, you might want to determine the item the user clicked.</remarks>
      <returns>Returns a numeric item index.</returns>
      <param name="x">Specifies the x-coordinate of the location to test, in pixels, relative to the control. </param>
      <param name="y">Specifies the y-coordinate of the location to test, in pixels, relative to the control. </param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.HitTest(System.Int32,System.Int32)">
      <summary>Returns the zero-based index of the step at the location you specify. When the location is on the End step, the index is equal to the number of steps in the step group the control displays. A value of <c>-1</c> indicates the location is not on a step.</summary>
      <remarks>Use this method to determine the item to which the given coordinates belong. For example, when a user clicks on the control, you might want to determine the item the user clicked.</remarks>
      <returns>Returns a numeric item index.</returns>
      <param name="x">Specifies the x-coordinate of the location to test, in pixels, relative to the control. </param>
      <param name="y">Specifies the y-coordinate of the location to test, in pixels, relative to the control. </param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.ItemBackColorExpression">
      <summary>Specifies an expression which the SequenceView control uses at run time to determine the background color for individual items. This expression overrides the item color the SequenceView.BackColor property defines.</summary>
      <remarks>The expression you specify must return a numeric color value. When you do not want to change the background color, return <c>-1</c>, as the following example shows:
<c>Step.Result.Status == &quot;Failed&quot; ? tsRed : -1</c>
When you use this expression string, the SequenceView control makes the background for all failed steps red.
If empty, the control ignores this property.</remarks>
      <seealso cref="&quot;Color&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref="SequenceView.BackColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.ItemBackColorExpression">
      <summary>Specifies an expression which the SequenceView control uses at run time to determine the background color for individual items. This expression overrides the item color the SequenceView.BackColor property defines.</summary>
      <remarks>The expression you specify must return a numeric color value. When you do not want to change the background color, return <c>-1</c>, as the following example shows:
<c>Step.Result.Status == &quot;Failed&quot; ? tsRed : -1</c>
When you use this expression string, the SequenceView control makes the background for all failed steps red.
If empty, the control ignores this property.</remarks>
      <seealso cref="&quot;Color&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref="SequenceView.BackColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.ItemTextColorExpression">
      <summary>Specifies an expression which the SequenceView control uses at run time to determine the text color for individual items. This expression overrides the text color the SequenceView.TextColor property defines.</summary>
      <remarks>The expression you specify must return a numeric color value. When you do not want to change the background color, return <c>-1</c>, as the following example shows:
<c>Step.Result.Status == &quot;Failed&quot; ? tsRed : -1</c>
When you use this expression string, the SequenceView control makes the text color of all failed steps red.
If empty, the control ignores this property.</remarks>
      <seealso cref="&quot;Color&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref="SequenceView.TextColor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.ItemTextColorExpression">
      <summary>Specifies an expression which the SequenceView control uses at run time to determine the text color for individual items. This expression overrides the text color the SequenceView.TextColor property defines.</summary>
      <remarks>The expression you specify must return a numeric color value. When you do not want to change the background color, return <c>-1</c>, as the following example shows:
<c>Step.Result.Status == &quot;Failed&quot; ? tsRed : -1</c>
When you use this expression string, the SequenceView control makes the text color of all failed steps red.
If empty, the control ignores this property.</remarks>
      <seealso cref="&quot;Color&quot;javascript:APILink('/InfoTopics/Color_Object.htm')" />
      <seealso cref="SequenceView.TextColor" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceView.Localize(System.String)">
      <summary>Localizes the captions of the columns in the SequenceView control.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required strings. Second, use the string tags in the <c>.ini</c> file as the column captions for the control. 
When you call this method, the control replaces the column captions with the strings from the <c>.ini</c> file. If a caption is not a tag in the <c>.ini</c> file, the caption does not change.</remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.Localize(System.String)">
      <summary>Localizes the captions of the columns in the SequenceView control.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required strings. Second, use the string tags in the <c>.ini</c> file as the column captions for the control. 
When you call this method, the control replaces the column captions with the strings from the <c>.ini</c> file. If a caption is not a tag in the <c>.ini</c> file, the caption does not change.</remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.IconSize">
      <summary>Specifies the size of icons in the SequenceView control.</summary>
      <remarks>Icons are always square. For example, when you specify an icon size of 32, the dimensions of the icons are 32 &#215; 32 pixels.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.IconSize">
      <summary>Specifies the size of icons in the SequenceView control.</summary>
      <remarks>Icons are always square. For example, when you specify an icon size of 32, the dimensions of the icons are 32 &#215; 32 pixels.</remarks>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.CursorMoved">
      <summary>Occurs when the user moves the item cursor.</summary>
      <param name="itemIdx">Specifies the index of the element that became the cursor.</param>
      <seealso cref="SequenceView.Cursor" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.ColumnResized">
      <summary>Occurs when the user resizes a column in the SequenceView control.</summary>
      <param name="columnIndex">Specifies the index of the resized column.</param>
      <param name="newSize">Specifies the new size of the column.</param>
      <seealso cref="SeqViewColumn.Width" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the SequenceView control has input focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.MouseMove">
      <summary>Occurs when the user moves the mouse over the control.</summary>
      <param name="btn">Specifies what mouse buttons are pressed. You can use any combination of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
      <seealso cref="SequenceView.MouseDown" />
      <seealso cref="SequenceView.MouseUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.MouseDown">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
      <seealso cref="SequenceView.MouseMove" />
      <seealso cref="SequenceView.MouseUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.MouseUp">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
      <seealso cref="SequenceView.MouseDown" />
      <seealso cref="SequenceView.MouseMove" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.DblClick">
      <summary>Occurs when the user double-clicks the mouse.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.HeaderFontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. 
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the SequenceView.HeaderFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.HeaderFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.HeaderFontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. 
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the SequenceView.HeaderFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.HeaderFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.CommentsFontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the SequenceView.CommentsFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.CommentsFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.CommentsFontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources.
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the SequenceView.CommentsFont property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.CommentsFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.TextFontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies.
Set the FontSource property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the <c>Font</c> property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.TextFont" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.TextFontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies.
Set the FontSource property to a value other than <c>FontSource_UseFontProperty</c> when you expect the font the <c>Font</c> property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="FontSources" />
      <seealso cref="SequenceView.TextFont" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.CreateContextMenu">
      <summary>Occurs when the user right-clicks on the control so the application can build a context menu from which the user can select commands. Although you can implement context menus in most environments without using this event, some environments do not provide any other way to create a context menu. Also, creating a context menu using this event requires less code in most environments, especially when the context menu contains only TestStand commands.</summary>
      <param name="menuHandle">Specifies the Microsoft Windows menu handle (HMENU). When you add menu items to the menu handle, the control displays them in a context menu. Use the Commands.InsertIntoWin32Menu method to insert TestStand commands to the menu. 
You can also use the menu functions in the Windows Software Development Kit (SDK) to add other menu items. Menu items you add this way do not have an associated TestStand command. When the user selects an item that does not have a TestStand command, the control creates and executes a Command object of kind <c>CommandKind_Custom</c>. The control stores the menu item identifier (resource ID/command ID) as a long in the Command.UserData property and as a decimal string in the command display name. You can handle either the ApplicationMgr.PreCommandExecute or ApplicationMgr.PostCommandExecute event to receive a notification when the user selects a menu item you insert with the Windows SDK. 
When the context menu closes, the control disposes of the menu items. Thus, you do not need to dispose of menu items you insert.</param>
      <param name="x">Specifies the horizontal position of the right-mouse click, relative to the control.</param>
      <param name="y">Specifies the vertical position of the right-mouse click, relative to the control.</param>
      <seealso cref="ApplicationMgr.PostCommandExecute" />
      <seealso cref="ApplicationMgr.PreCommandExecute" />
      <seealso cref="Command.UserData" />
      <seealso cref="Commands.InsertIntoWin32Menu" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.ShadeAlternateColumns">
      <summary>Specifies whether this control uses a darker color for the background of every other column.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.ShadeAlternateColumns">
      <summary>Specifies whether this control uses a darker color for the background of every other column.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.RoundItemRects">
      <summary>Specifies whether this control uses rounded corners to draw the background for the individual cells. </summary>
      <remarks>By default, all cells have the same background color as the control, which prevents this property from having any discernable effect. However, you can alter the background color of an individual cell using the SeqViewColumn.BackColorExpression property.</remarks>
      <seealso cref="SeqViewColumn.BackColorExpression" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.RoundItemRects">
      <summary>Specifies whether this control uses rounded corners to draw the background for the individual cells. </summary>
      <remarks>By default, all cells have the same background color as the control, which prevents this property from having any discernable effect. However, you can alter the background color of an individual cell using the SeqViewColumn.BackColorExpression property.</remarks>
      <seealso cref="SeqViewColumn.BackColorExpression" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="SequenceView.BorderDragged" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="SequenceView.BorderDragged" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.StepIconsEnabled">
      <summary>Specifies whether the SequenceView control displays the step icons.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.StepIconsEnabled">
      <summary>Specifies whether the SequenceView control displays the step icons.</summary>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceViewEvents_Event.BorderDragged">
      <summary>Occurs when the user drags a draggable border of a control with the mouse. The event provides the location and size to which you must set the control for the draggable borders to track the mouse cursor. However, you can choose to modify the location or size to which you set the control. For example, you can limit the width of the control so the left edge cannot be dragged off of the visible portion of the window.
In addition to changing the size and position of the control, you might also update the sizes and positions of the other controls on the window to account for the change.</summary>
      <remarks>If you are using LabVIEW, you must add the Horizontal and Vertical components of the origin of the LabVIEW front panel to the newX and newY event parameter values before you can use the newX and newY event parameters to set the ActiveX Container (AxCont) Left and Top properties for the control. To obtain the origin of a LabVIEW front panel, place an ActiveX property node on the block diagram of the VI, right-click the node, and select Link to&#0187;Pane from the context menu. Right-click the node again and select Select Property&#0187;Origin.</remarks>
      <param name="bordersChanged">Specifies which borders the user dragged. Refer to the WhichBorders constants for more information about draggable borders.</param>
      <param name="newX">Specifies the new x-coordinate for the control.</param>
      <param name="newY">Specifies the new y-coordinate for the control.</param>
      <param name="newWidth">Specifies the new width for the control.</param>
      <param name="newHeight">Specifies the new height for the control.</param>
      <param name="finalResize">Specifies whether the event is the final event for the drag operation the user performs.</param>
      <seealso cref="Borders" />
      <seealso cref="WhichBorders" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.BlockDisplayOptions">
      <summary>Specifies how the SequenceView control displays the block structure of a sequence.</summary>
      <seealso cref="BlockDisplayOptions" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.BlockDisplayOptions">
      <summary>Specifies how the SequenceView control displays the block structure of a sequence.</summary>
      <seealso cref="BlockDisplayOptions" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceView.EndUpdate">
      <summary>Allows the SequenceView control to resume updating, following a call to BeginUpdate. </summary>
      <remarks>After making edits to the sequence, call this method to allow the display to update.</remarks>
      <seealso cref="SequenceView.BeginUpdate" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.EndUpdate">
      <summary>Allows the SequenceView control to resume updating, following a call to BeginUpdate. </summary>
      <remarks>After making edits to the sequence, call this method to allow the display to update.</remarks>
      <seealso cref="SequenceView.BeginUpdate" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.EditingFlags">
      <summary>Specifies the types of editing the SequenceView control allows. Use any combination of the EditingFlags constants with this property.</summary>
      <remarks>All editing types are allowed by default. These flags have no effect if the SequenceView control is not connected to display editable steps. </remarks>
      <seealso cref="EditingFlags" />
      <seealso cref="SequenceView.CanEditLabel" />
      <seealso cref="SequenceView.EditLabel" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.EditingFlags">
      <summary>Specifies the types of editing the SequenceView control allows. Use any combination of the EditingFlags constants with this property.</summary>
      <remarks>All editing types are allowed by default. These flags have no effect if the SequenceView control is not connected to display editable steps. </remarks>
      <seealso cref="EditingFlags" />
      <seealso cref="SequenceView.CanEditLabel" />
      <seealso cref="SequenceView.EditLabel" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceView.StepToItemIndex(NationalInstruments.TestStand.Interop.API.StepGroups,System.Int32)">
      <summary>Converts from a step group and step index to an index into the list of items the control displays.</summary>
      <returns>Returns a zero-based index. The index identifies the item that displays the specified step. When the step is within a collapsed group, the index identifies the step group start marker.</returns>
      <param name="group">Specifies a step group.</param>
      <param name="stepIndex">Specifies an index into the specified step group.</param>
      <seealso cref="SequenceView.ItemIndexToStep" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.StepToItemIndex(NationalInstruments.TestStand.Interop.API.StepGroups,System.Int32)">
      <summary>Converts from a step group and step index to an index into the list of items the control displays.</summary>
      <returns>Returns a zero-based index. The index identifies the item that displays the specified step. When the step is within a collapsed group, the index identifies the step group start marker.</returns>
      <param name="group">Specifies a step group.</param>
      <param name="stepIndex">Specifies an index into the specified step group.</param>
      <seealso cref="SequenceView.ItemIndexToStep" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.CanEditLabel">
      <summary>Returns a value that indicates whether the SequenceView control can enter label-editing mode.</summary>
      <seealso cref="SequenceView.EditLabel" />
      <seealso cref="SequenceView.EditingFlags" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.CanEditLabel">
      <summary>Returns a value that indicates whether the SequenceView control can enter label-editing mode.</summary>
      <seealso cref="SequenceView.EditLabel" />
      <seealso cref="SequenceView.EditingFlags" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceView.EditLabel">
      <summary>Enters label-editing mode for the active item in the step list. Label-editing mode enables you to edit the item text in the first column of the SequenceView listbox control.</summary>
      <remarks>The SequenceView control automatically attempts to enter label-editing mode when you click the active item in the first column or when you press &lt;F2&gt; when the SequenceView control has the keyboard focus.</remarks>
      <seealso cref="SequenceView.CanEditLabel" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.EditLabel">
      <summary>Enters label-editing mode for the active item in the step list. Label-editing mode enables you to edit the item text in the first column of the SequenceView listbox control.</summary>
      <remarks>The SequenceView control automatically attempts to enter label-editing mode when you click the active item in the first column or when you press &lt;F2&gt; when the SequenceView control has the keyboard focus.</remarks>
      <seealso cref="SequenceView.CanEditLabel" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceView.BeginUpdate">
      <summary>Prevents the SequenceView control from drawing until the SequenceView.EndUpdate method is called.  </summary>
      <remarks>Call this method to make multiple changes to the selection or the list of steps without updating the display.</remarks>
      <seealso cref="SequenceView.EndUpdate" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.BeginUpdate">
      <summary>Prevents the SequenceView control from drawing until the SequenceView.EndUpdate method is called.  </summary>
      <remarks>Call this method to make multiple changes to the selection or the list of steps without updating the display.</remarks>
      <seealso cref="SequenceView.EndUpdate" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceView.FocusIndex">
      <summary>Specifies the index of the item with the input focus. A dotted rectangle around the item represents the input focus. This property is identical to the SequenceView.Cursor property except that setting this property does not change the selection.</summary>
      <seealso cref="SequenceView.Cursor" />
      <seealso cref="SequenceView.ItemIndexToStep" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceViewClass.FocusIndex">
      <summary>Specifies the index of the item with the input focus. A dotted rectangle around the item represents the input focus. This property is identical to the SequenceView.Cursor property except that setting this property does not change the selection.</summary>
      <seealso cref="SequenceView.Cursor" />
      <seealso cref="SequenceView.ItemIndexToStep" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SequenceFiles">
      <summary>Read-only collection of sequence files. Use the  ApplicationMgr.SequenceFiles property to obtain the collection of SequenceFile objects the Application Manager control opens.</summary>
      <seealso cref="ApplicationMgr.SequenceFiles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFiles.Item(System.Object)">
      <summary>Returns a reference to an item at the specified index in the collection.</summary>
      <param name="fileIndex">Specifies the zero-based index of the item to retrieve. Use a non-negative number less than the value of the SequenceFiles.Count property. Alternatively, you can pass a string with the fully qualified path of the sequence file to retrieve from the collection.</param>
      <seealso cref="&quot;SequenceFile&quot;javascript:APILink('/RefTopics/SequenceFile.htm')" />
      <seealso cref="SequenceFiles.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFiles.Count">
      <summary>Returns the number of items in the collection.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.Executions">
      <summary>A collection of Execution objects. The ApplicationMgr.Executions property returns an Executions object, which contains all the executions the application created.</summary>
      <seealso cref="ApplicationMgr.Executions" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Executions.Item(System.Int32)">
      <summary>Returns a reference to an item at the specified index in the collection.</summary>
      <param name="itemIdx">Specifies the zero-based index. Use a non-negative number less than the value of the Executions.Count property.</param>
      <seealso cref="&quot;Execution&quot;javascript:APILink('/RefTopics/Execution.htm')" />
      <seealso cref="Executions.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Executions.Count">
      <summary>Returns the number of items in the collection.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Executions.NumIncomplete">
      <summary>Returns the number of incomplete executions in the collection, which is the sum of paused and running executions.</summary>
      <seealso cref="Executions.NumPaused" />
      <seealso cref="Executions.NumRunning" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Executions.NumPaused">
      <summary>Returns the number of paused executions in the collection.</summary>
      <seealso cref="Executions.NumIncomplete" />
      <seealso cref="Executions.NumRunning" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Executions.NumRunning">
      <summary>Returns the number of running executions. Paused executions are not considered to be running.</summary>
      <seealso cref="Executions.NumIncomplete" />
      <seealso cref="Executions.NumPaused" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Executions.ResumeAll">
      <summary>Resumes all paused executions in the collection.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.EntryPoints">
      <summary>A Collection of EntryPoint objects. Use the <c>ConfigurationEntryPoints</c> and <c>ExecutionEntryPoints</c> methods of the SequenceFileView Manager and ExecutionView Manager controls to retrieve an EntryPoints object.</summary>
      <seealso cref="Commands.InsertKind" />
      <seealso cref="EntryPoint" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConfigurationEntryPoints" />
      <seealso cref="ExecutionViewMgr.ExecutionEntryPoints" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConfigurationEntryPoints" />
      <seealso cref="SequenceFileViewMgr.ExecutionEntryPoints" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.EntryPoints.Item(System.Object)">
      <summary>Returns a reference to an item at the specified index in the collection.</summary>
      <param name="entryPointIndexParam">Specifies the zero-based index. Use a non-negative number less than the value of the EntryPoints.Count property.</param>
      <seealso cref="EntryPoint" />
      <seealso cref="EntryPoints.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.EntryPoints.Count">
      <summary>Returns the number of items in the collection.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgr">
      <summary>A SequenceFileView Manager control performs the following tasks to manage how other visible TestStand User Interface (UI) Controls view and interact with a selected sequence file:<para><para>&#160;&#160;&#160;&#160;* Designates a sequence file as the selected sequence file.</para><para>&#160;&#160;&#160;&#160;* Tracks which sequence, step groups, and steps are selected in the selected file and tracks the expansion of the step groups.</para><para>&#160;&#160;&#160;&#160;* Displays aspects of the selected file in the visible TestStand UI Controls to which it connects.</para><para>&#160;&#160;&#160;&#160;* Enables visible TestStand UI Controls to which it connects to change the selected file, sequence, step group, and steps.</para><para>&#160;&#160;&#160;&#160;* Provides methods for executing the selected sequence file.</para></para>
An application must have one SequenceFileView Manager control for each location, such as a window, form, or panel, in which you display a sequence file or let the user select a current sequence file.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr">
      <summary>A SequenceFileView Manager control performs the following tasks to manage how other visible TestStand User Interface (UI) Controls view and interact with a selected sequence file:<para><para>&#160;&#160;&#160;&#160;* Designates a sequence file as the selected sequence file.</para><para>&#160;&#160;&#160;&#160;* Tracks which sequence, step groups, and steps are selected in the selected file and tracks the expansion of the step groups.</para><para>&#160;&#160;&#160;&#160;* Displays aspects of the selected file in the visible TestStand UI Controls to which it connects.</para><para>&#160;&#160;&#160;&#160;* Enables visible TestStand UI Controls to which it connects to change the selected file, sequence, step group, and steps.</para><para>&#160;&#160;&#160;&#160;* Provides methods for executing the selected sequence file.</para></para>
An application must have one SequenceFileView Manager control for each location, such as a window, form, or panel, in which you display a sequence file or let the user select a current sequence file.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass">
      <summary>A SequenceFileView Manager control performs the following tasks to manage how other visible TestStand User Interface (UI) Controls view and interact with a selected sequence file:<para><para>&#160;&#160;&#160;&#160;* Designates a sequence file as the selected sequence file.</para><para>&#160;&#160;&#160;&#160;* Tracks which sequence, step groups, and steps are selected in the selected file and tracks the expansion of the step groups.</para><para>&#160;&#160;&#160;&#160;* Displays aspects of the selected file in the visible TestStand UI Controls to which it connects.</para><para>&#160;&#160;&#160;&#160;* Enables visible TestStand UI Controls to which it connects to change the selected file, sequence, step group, and steps.</para><para>&#160;&#160;&#160;&#160;* Provides methods for executing the selected sequence file.</para></para>
An application must have one SequenceFileView Manager control for each location, such as a window, form, or panel, in which you display a sequence file or let the user select a current sequence file.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.LoopOnSelectedSteps(System.Object,System.Object)">
      <summary>Starts an execution that loops on the currently selected steps.</summary>
      <returns>A new execution.</returns>
      <param name="interactiveArgsVal">Specifies a custom InteractiveArgs object using this parameter. When you do not pass a custom <c>InteractiveArgs</c> object, the SequenceFileView Manager control builds an <c>InteractiveArgs</c> object according to the current selections.</param>
      <param name="editArgsVal">Specifies a custom EditArgs object using this parameter. When you do not pass a custom <c>EditArgs</c> object, the SequenceFileView Manager control builds an <c>EditArgs</c> object according to the current selections.</param>
      <seealso cref="&quot;CommandKind_LoopOnSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="SequenceFileViewMgr.BuildEditArgs" />
      <seealso cref="SequenceFileViewMgr.BuildInteractiveArgs" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.RunSelectedSteps" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.LoopOnSelectedSteps(System.Object,System.Object)">
      <summary>Starts an execution that loops on the currently selected steps.</summary>
      <returns>A new execution.</returns>
      <param name="interactiveArgsVal">Specifies a custom InteractiveArgs object using this parameter. When you do not pass a custom <c>InteractiveArgs</c> object, the SequenceFileView Manager control builds an <c>InteractiveArgs</c> object according to the current selections.</param>
      <param name="editArgsVal">Specifies a custom EditArgs object using this parameter. When you do not pass a custom <c>EditArgs</c> object, the SequenceFileView Manager control builds an <c>EditArgs</c> object according to the current selections.</param>
      <seealso cref="&quot;CommandKind_LoopOnSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="SequenceFileViewMgr.BuildEditArgs" />
      <seealso cref="SequenceFileViewMgr.BuildInteractiveArgs" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.RunSelectedSteps" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.Refresh">
      <summary>Refreshes all connected controls.</summary>
      <remarks>Typically, you do not call this method unless you have changed the state of the execution directly using the TestStand API. Call this method so these types of changes are reflected in the connected controls.</remarks>
      <seealso cref="ApplicationMgr.Refresh" />
      <seealso cref="ApplicationMgr.RefreshAllViewMgrs" />
      <seealso cref="ExecutionViewMgr.Refresh" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.Refresh">
      <summary>Refreshes all connected controls.</summary>
      <remarks>Typically, you do not call this method unless you have changed the state of the execution directly using the TestStand API. Call this method so these types of changes are reflected in the connected controls.</remarks>
      <seealso cref="ApplicationMgr.Refresh" />
      <seealso cref="ApplicationMgr.RefreshAllViewMgrs" />
      <seealso cref="ExecutionViewMgr.Refresh" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.RefreshStep(System.Int32)">
      <summary>Refreshes a step in the current step group in a connected SequenceView control.</summary>
      <remarks>Typically, you do not call this method unless you have changed the state of the step directly using the TestStand API. Call this method so these types of changes are reflected in the connected SequenceView control. 

When you set the SequenceFileViewMgr.StepGroupMode property to <c>StepGroupMode_AllGroups</c>, call the SequenceFileViewMgr.RefreshStepEx method instead of this method to specify the step group in which the step resides.</remarks>
      <param name="stepIndex">Specifies the index of the step to refresh. Passing <c>-1</c> refreshes all steps in the connected SequenceView control.</param>
      <seealso cref="SequenceFileViewMgr.RefreshStepEx" />
      <seealso cref="SequenceFileViewMgr.StepGroupMode" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.RefreshStep(System.Int32)">
      <summary>Refreshes a step in the current step group in a connected SequenceView control.</summary>
      <remarks>Typically, you do not call this method unless you have changed the state of the step directly using the TestStand API. Call this method so these types of changes are reflected in the connected SequenceView control. 

When you set the SequenceFileViewMgr.StepGroupMode property to <c>StepGroupMode_AllGroups</c>, call the SequenceFileViewMgr.RefreshStepEx method instead of this method to specify the step group in which the step resides.</remarks>
      <param name="stepIndex">Specifies the index of the step to refresh. Passing <c>-1</c> refreshes all steps in the connected SequenceView control.</param>
      <seealso cref="SequenceFileViewMgr.RefreshStepEx" />
      <seealso cref="SequenceFileViewMgr.StepGroupMode" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.GetCommand(NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32)">
      <summary>Creates a Command object. When applicable, the command operates on the items the SequenceFileView Manager control selects.</summary>
      <param name="cmdKind">Specifies the type of Command object to create.</param>
      <param name="index">Use this parameter on commands that are sets  to specify which command in the set to return.</param>
      <seealso cref="ApplicationMgr.GetCommand" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.GetCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.GetCommand(NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32)">
      <summary>Creates a Command object. When applicable, the command operates on the items the SequenceFileView Manager control selects.</summary>
      <param name="cmdKind">Specifies the type of Command object to create.</param>
      <param name="index">Use this parameter on commands that are sets  to specify which command in the set to return.</param>
      <seealso cref="ApplicationMgr.GetCommand" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.GetCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.GetCaptionText(NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean,System.String)">
      <summary>Returns the current caption text for a caption source in a SequenceFileView Manager control.</summary>
      <returns>The current text for the caption source you specify.</returns>
      <param name="captionSource">Specifies the type of caption source from which to obtain text.</param>
      <param name="longName">For certain caption sources, this parameter specifies whether to return a long or short version of the caption text. Refer to the CaptionSources enumeration for more information about determining when this option affects the text and for more information about the difference between the long and short versions of the text.</param>
      <param name="formatExpression">Specifies a format expression to evaluate when generating the caption text. For the CaptionSource_MacroExpression caption source, specify a format expression that evaluates to a string value that contains macros that specify other caption sources. For all other caption sources, specify an expression that evaluates to a string value that contains the characters <c>%1</c>.  The method replaces the <c>%1</c> characters with the text from the caption source. Pass an empty string to use the default format string for the caption source.</param>
      <seealso cref="ApplicationMgr.GetCaptionText" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.GetCaptionText" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.GetCaptionText(NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean,System.String)">
      <summary>Returns the current caption text for a caption source in a SequenceFileView Manager control.</summary>
      <returns>The current text for the caption source you specify.</returns>
      <param name="captionSource">Specifies the type of caption source from which to obtain text.</param>
      <param name="longName">For certain caption sources, this parameter specifies whether to return a long or short version of the caption text. Refer to the CaptionSources enumeration for more information about determining when this option affects the text and for more information about the difference between the long and short versions of the text.</param>
      <param name="formatExpression">Specifies a format expression to evaluate when generating the caption text. For the CaptionSource_MacroExpression caption source, specify a format expression that evaluates to a string value that contains macros that specify other caption sources. For all other caption sources, specify an expression that evaluates to a string value that contains the characters <c>%1</c>.  The method replaces the <c>%1</c> characters with the text from the caption source. Pass an empty string to use the default format string for the caption source.</param>
      <seealso cref="ApplicationMgr.GetCaptionText" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.GetCaptionText" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectCommand(System.Object,NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32,System.Int32)">
      <summary>Connects a command source in a SequenceFileView Manager control to a TestStand button or checkbox control. The connection automatically updates the enabled, visible, and caption properties of the button or checkbox according to the state of the current execution. Clicking the button or enabling the checkbox control executes the command.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.Command property to obtain the CommandConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the button or checkbox control to which the command connects.</param>
      <param name="cmdKind">Specifies the type of command to connect.</param>
      <param name="index">For CommandKinds that are sets, this parameter indexes the set to obtain a particular command.</param>
      <param name="opts">Specifies the options for the CommandConnection. Refer to the CommandConnectionOptions constants for more information about options for the CommandConnection object.</param>
      <seealso cref="Button" />
      <seealso cref="CommandConnectionOptions" />
      <seealso cref="&quot;CommandConnections&quot;CommandConnections.htm" />
      <seealso cref="CommandKinds" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.GetCommand" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.Command&quot;SequenceFileViewMgrConnections_Command_P.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectCommand(System.Object,NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32,System.Int32)">
      <summary>Connects a command source in a SequenceFileView Manager control to a TestStand button or checkbox control. The connection automatically updates the enabled, visible, and caption properties of the button or checkbox according to the state of the current execution. Clicking the button or enabling the checkbox control executes the command.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.Command property to obtain the CommandConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the button or checkbox control to which the command connects.</param>
      <param name="cmdKind">Specifies the type of command to connect.</param>
      <param name="index">For CommandKinds that are sets, this parameter indexes the set to obtain a particular command.</param>
      <param name="opts">Specifies the options for the CommandConnection. Refer to the CommandConnectionOptions constants for more information about options for the CommandConnection object.</param>
      <seealso cref="Button" />
      <seealso cref="CommandConnectionOptions" />
      <seealso cref="&quot;CommandConnections&quot;CommandConnections.htm" />
      <seealso cref="CommandKinds" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.GetCommand" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.Command&quot;SequenceFileViewMgrConnections_Command_P.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectCaption(System.Object,NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean)">
      <summary>Connects a caption source in a SequenceFileView Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with text that describes an aspect of the current application state.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, call the SequenceFileViewMgrConnections.Caption property to obtain the CaptionConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the visible control or element of a visible control to which the caption source connects. Pass a Label, ExpressionEdit, or StatusBarPane.</param>
      <param name="captionSource">Specifies the type of caption source to connect.</param>
      <param name="longName">For certain caption sources, this parameter specifies whether the connection displays a long or short version of the caption text. Refer to the CaptionSources enumeration for more information about determining when this option affects a caption source and for more information about the difference between the long and short versions of the text.</param>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="&quot;CaptionConnections&quot;CaptionConnections.htm" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="ExpressionEdit" />
      <seealso cref="Label" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.Caption&quot;SequenceFileViewMgrConnections_Caption_P.htm" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectCaption(System.Object,NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean)">
      <summary>Connects a caption source in a SequenceFileView Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with text that describes an aspect of the current application state.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, call the SequenceFileViewMgrConnections.Caption property to obtain the CaptionConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the visible control or element of a visible control to which the caption source connects. Pass a Label, ExpressionEdit, or StatusBarPane.</param>
      <param name="captionSource">Specifies the type of caption source to connect.</param>
      <param name="longName">For certain caption sources, this parameter specifies whether the connection displays a long or short version of the caption text. Refer to the CaptionSources enumeration for more information about determining when this option affects a caption source and for more information about the difference between the long and short versions of the text.</param>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="&quot;CaptionConnections&quot;CaptionConnections.htm" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="ExpressionEdit" />
      <seealso cref="Label" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.Caption&quot;SequenceFileViewMgrConnections_Caption_P.htm" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectSequenceFileList(System.Object,System.Boolean)">
      <summary>Connects a user interface control that displays the list of opened sequence files. The control can also select a sequence file to place into the SequenceFileView Manager control.</summary>
      <remarks>You can connect a ComboBox, ListBarPage, and ListBox to SequenceFileLists.
To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.SequenceFileList property to obtain the SequenceFileListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Use a ComboBox, ListBarPage, or ListBox to display the list of sequence files.</param>
      <param name="fullPath">When this parameter is <c>True</c>, TestStand displays the sequence files with full pathnames.</param>
      <seealso cref="ComboBox" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
      <seealso cref="&quot;SequenceFileListConnections&quot;SequenceFileListConnections.htm" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceFileList&quot;SequenceFileViewMgrConnections_SequenceFileList_P.htm" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectSequenceFileList(System.Object,System.Boolean)">
      <summary>Connects a user interface control that displays the list of opened sequence files. The control can also select a sequence file to place into the SequenceFileView Manager control.</summary>
      <remarks>You can connect a ComboBox, ListBarPage, and ListBox to SequenceFileLists.
To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.SequenceFileList property to obtain the SequenceFileListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Use a ComboBox, ListBarPage, or ListBox to display the list of sequence files.</param>
      <param name="fullPath">When this parameter is <c>True</c>, TestStand displays the sequence files with full pathnames.</param>
      <seealso cref="ComboBox" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
      <seealso cref="&quot;SequenceFileListConnections&quot;SequenceFileListConnections.htm" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceFileList&quot;SequenceFileViewMgrConnections_SequenceFileList_P.htm" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectSequenceList(System.Object)">
      <summary>Connects a user interface control that displays the list of sequences in the current sequence file. The control can also select a sequence to place into the SequenceFileView Manager control.</summary>
      <remarks>You can connect the ComboBox, ListBarPage, and ListBox to SequenceFileLists.
To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.SequenceList property to obtain the SequenceListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Use ComboBox, ListBarPage, or ListBox to display the list of sequence files.</param>
      <seealso cref="ComboBox" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceList&quot;SequenceFileViewMgrConnections_SequenceList_P.htm" />
      <seealso cref="&quot;SequenceListConnections&quot;SequenceListConnections.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectSequenceList(System.Object)">
      <summary>Connects a user interface control that displays the list of sequences in the current sequence file. The control can also select a sequence to place into the SequenceFileView Manager control.</summary>
      <remarks>You can connect the ComboBox, ListBarPage, and ListBox to SequenceFileLists.
To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.SequenceList property to obtain the SequenceListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Use ComboBox, ListBarPage, or ListBox to display the list of sequence files.</param>
      <seealso cref="ComboBox" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceList&quot;SequenceFileViewMgrConnections_SequenceList_P.htm" />
      <seealso cref="&quot;SequenceListConnections&quot;SequenceListConnections.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectStepGroupList(System.Object)">
      <summary>Connects a user interface control that selects the step group of the current sequence file to place into the SequenceFileView Manager control.</summary>
      <remarks>You can connect a ComboBox, ListBarPage, and ListBox as StepGroupLists.
To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.StepGroupList property to obtain the StepGroupListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Use a ComboBox, ListBarPage, or ListBox to display the list of step groups.</param>
      <seealso cref="ComboBox" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.StepGroupList&quot;SequenceFileViewMgrConnections_StepGroupList_P.htm" />
      <seealso cref=".StepGroup" />
      <seealso cref="&quot;StepGroupListConnections&quot;StepGroupListConnections.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectStepGroupList(System.Object)">
      <summary>Connects a user interface control that selects the step group of the current sequence file to place into the SequenceFileView Manager control.</summary>
      <remarks>You can connect a ComboBox, ListBarPage, and ListBox as StepGroupLists.
To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.StepGroupList property to obtain the StepGroupListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Use a ComboBox, ListBarPage, or ListBox to display the list of step groups.</param>
      <seealso cref="ComboBox" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.StepGroupList&quot;SequenceFileViewMgrConnections_StepGroupList_P.htm" />
      <seealso cref=".StepGroup" />
      <seealso cref="&quot;StepGroupListConnections&quot;StepGroupListConnections.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectSequenceView(System.Object)">
      <summary>Connects a SequenceView control to display the current sequence of the SequenceFileView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.SequenceView property to obtain the SequenceViewConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the reference to a SequenceView control that displays the current sequence and step group.</param>
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceView&quot;SequenceFileViewMgrConnections_SequenceView_P.htm" />
      <seealso cref="&quot;SequenceViewConnections&quot;SequenceViewConnections.htm" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectSequenceView(System.Object)">
      <summary>Connects a SequenceView control to display the current sequence of the SequenceFileView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.SequenceView property to obtain the SequenceViewConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the reference to a SequenceView control that displays the current sequence and step group.</param>
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.SequenceView&quot;SequenceFileViewMgrConnections_SequenceView_P.htm" />
      <seealso cref="&quot;SequenceViewConnections&quot;SequenceViewConnections.htm" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectImage(System.Object,NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Connects an image source in a SequenceFileView Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with an icon that describes an aspect of the current application state.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.Image property to obtain the ImageConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the visible control or element of a visible control to which the caption source connects. Pass a StatusBarPane or Button.</param>
      <param name="imageSource">Specifies the type of image source to connect.</param>
      <seealso cref="Button" />
      <seealso cref="ExecutionViewMgr.ConnectImage" />
      <seealso cref="&quot;ImageConnections&quot;ImageConnections.htm" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.GetImageName" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.Image&quot;SequenceFileViewMgrConnections_Image_P.htm" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectImage(System.Object,NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Connects an image source in a SequenceFileView Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with an icon that describes an aspect of the current application state.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.Image property to obtain the ImageConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the visible control or element of a visible control to which the caption source connects. Pass a StatusBarPane or Button.</param>
      <param name="imageSource">Specifies the type of image source to connect.</param>
      <seealso cref="Button" />
      <seealso cref="ExecutionViewMgr.ConnectImage" />
      <seealso cref="&quot;ImageConnections&quot;ImageConnections.htm" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgr.GetImageName" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.Image&quot;SequenceFileViewMgrConnections_Image_P.htm" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectVariables(System.Object)">
      <summary>Connects a VariablesView control to display the current sequence context of the SequenceFileView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.Variables property to obtain the VariablesConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the reference to a VariablesView control that displays the current sequence context.</param>
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgrConnections" />
      <seealso cref="SequenceFileViewMgrConnections.Variables" />
      <seealso cref="VariablesConnections" />
      <seealso cref="VariablesView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectVariables(System.Object)">
      <summary>Connects a VariablesView control to display the current sequence context of the SequenceFileView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.Variables property to obtain the VariablesConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the reference to a VariablesView control that displays the current sequence context.</param>
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="SequenceFileViewMgrConnections" />
      <seealso cref="SequenceFileViewMgrConnections.Variables" />
      <seealso cref="VariablesConnections" />
      <seealso cref="VariablesView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.Connections">
      <summary>Returns the connections of this control.</summary>
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.Connections">
      <summary>Returns the connections of this control.</summary>
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ExecutionEntryPoints">
      <summary>Returns the set of Execution entry points the model sequence file for the selected sequence file defines. The collection includes only entry points that set the Sequence.ShowEntryPointForFileWindow property.</summary>
      <remarks>This collection can change when the selected sequence file changes.</remarks>
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr.ExecutionEntryPoints" />
      <seealso cref="&quot;Sequence.ShowEntryPointForFileWindow&quot;javascript:APILink('/RefTopics/Sequence_ShowEntryPointForFileWindow_P.htm')" />
      <seealso cref="SequenceFileViewMgr.ConfigurationEntryPoints" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ExecutionEntryPoints">
      <summary>Returns the set of Execution entry points the model sequence file for the selected sequence file defines. The collection includes only entry points that set the Sequence.ShowEntryPointForFileWindow property.</summary>
      <remarks>This collection can change when the selected sequence file changes.</remarks>
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr.ExecutionEntryPoints" />
      <seealso cref="&quot;Sequence.ShowEntryPointForFileWindow&quot;javascript:APILink('/RefTopics/Sequence_ShowEntryPointForFileWindow_P.htm')" />
      <seealso cref="SequenceFileViewMgr.ConfigurationEntryPoints" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.SequenceFile">
      <summary>Specifies the selected sequence file the controls connected to the SequenceFileView Manager control display.</summary>
      <remarks>Use the SequenceFileViewMgr.ConnectSequenceFileList method to connect a control that displays open sequence files and specifies the selected sequence file.</remarks>
      <seealso cref="&quot;SequenceFile&quot;javascript:APILink('/RefTopics/SequenceFile.htm')" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceFileViewMgr.StepGroup" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.SequenceFile">
      <summary>Specifies the selected sequence file the controls connected to the SequenceFileView Manager control display.</summary>
      <remarks>Use the SequenceFileViewMgr.ConnectSequenceFileList method to connect a control that displays open sequence files and specifies the selected sequence file.</remarks>
      <seealso cref="&quot;SequenceFile&quot;javascript:APILink('/RefTopics/SequenceFile.htm')" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceFileViewMgr.StepGroup" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.Sequence">
      <summary>Specifies the current sequence.</summary>
      <remarks>Use the SequenceFileViewMgr.ConnectSequenceList method to connect a control that displays sequences and specifies the current sequence.
The current sequence is the sequence the SequenceFileView Manager control displays in a connected SequenceView control. Use the SequenceFileViewMgr.SelectedSequences property to determine the list of sequence a connected control selects.
Use the SequenceFileViewMgr.SetSequenceAndGroup method to set the current sequence when you must also set the SequenceFileViewMgr.StepGroup property.</remarks>
      <seealso cref="&quot;Sequence&quot;javascript:APILink('/RefTopics/Sequence.htm')" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.SelectedSequences" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="SequenceFileViewMgr.SetSequenceAndGroup" />
      <seealso cref="SequenceFileViewMgr.StepGroup" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.Sequence">
      <summary>Specifies the current sequence.</summary>
      <remarks>Use the SequenceFileViewMgr.ConnectSequenceList method to connect a control that displays sequences and specifies the current sequence.
The current sequence is the sequence the SequenceFileView Manager control displays in a connected SequenceView control. Use the SequenceFileViewMgr.SelectedSequences property to determine the list of sequence a connected control selects.
Use the SequenceFileViewMgr.SetSequenceAndGroup method to set the current sequence when you must also set the SequenceFileViewMgr.StepGroup property.</remarks>
      <seealso cref="&quot;Sequence&quot;javascript:APILink('/RefTopics/Sequence.htm')" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.SelectedSequences" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="SequenceFileViewMgr.SetSequenceAndGroup" />
      <seealso cref="SequenceFileViewMgr.StepGroup" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.StepGroup">
      <summary>Specifies the selected step group.</summary>
      <remarks>A SequenceView control displays the selected step group or all groups depending on the value of the SequenceFileViewMgr.StepGroupMode property. Use the SequenceFileViewMgr.SetSequenceAndGroup method to set the step group when you must also set the SequenceFileViewMgr.Sequence property.</remarks>
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="SequenceFileViewMgr.SetSequenceAndGroup" />
      <seealso cref="SequenceFileViewMgr.StepGroupMode" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.StepGroup">
      <summary>Specifies the selected step group.</summary>
      <remarks>A SequenceView control displays the selected step group or all groups depending on the value of the SequenceFileViewMgr.StepGroupMode property. Use the SequenceFileViewMgr.SetSequenceAndGroup method to set the step group when you must also set the SequenceFileViewMgr.Sequence property.</remarks>
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="SequenceFileViewMgr.SetSequenceAndGroup" />
      <seealso cref="SequenceFileViewMgr.StepGroupMode" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConfigurationEntryPoints">
      <summary>Returns the collection of Configuration entry points for the selected sequence file.</summary>
      <remarks>This collection can change when the selected sequence file changes.</remarks>
      <seealso cref="EntryPoints" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ExecutionEntryPoints" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConfigurationEntryPoints">
      <summary>Returns the collection of Configuration entry points for the selected sequence file.</summary>
      <remarks>This collection can change when the selected sequence file changes.</remarks>
      <seealso cref="EntryPoints" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceFileList" />
      <seealso cref="SequenceFileViewMgr.ExecutionEntryPoints" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.SelectedSteps">
      <summary>Returns a collection of selected steps.</summary>
      <remarks>Use this collection to obtain the selected steps or to change the selected steps for the selected file. TestStand User Interface Controls connected to a SequenceFileView Manager control, such as the SequenceView control, automatically set this property when you select steps.</remarks>
      <seealso cref="&quot;SelectedSteps&quot;SelectedSteps.htm" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceFileViewMgr.StepGroup" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.SelectedSteps">
      <summary>Returns a collection of selected steps.</summary>
      <remarks>Use this collection to obtain the selected steps or to change the selected steps for the selected file. TestStand User Interface Controls connected to a SequenceFileView Manager control, such as the SequenceView control, automatically set this property when you select steps.</remarks>
      <seealso cref="&quot;SelectedSteps&quot;SelectedSteps.htm" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceFileViewMgr.StepGroup" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ReplaceSequenceFileOnClose">
      <summary>Specifies whether the SequenceFileView Manager control selects another sequence file when the currently selected sequence file closes.</summary>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ReplaceSequenceFileOnClose">
      <summary>Specifies whether the SequenceFileView Manager control selects another sequence file when the currently selected sequence file closes.</summary>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ApplicationMgr">
      <summary>Returns a reference to the Application Manager control of the application. The value is <c>NULL</c> when no Application Manager control exists within the process.</summary>
      <seealso cref="ApplicationMgr" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ApplicationMgr">
      <summary>Returns a reference to the Application Manager control of the application. The value is <c>NULL</c> when no Application Manager control exists within the process.</summary>
      <seealso cref="ApplicationMgr" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.UserData">
      <summary>Stores data associated with this control.</summary>
      <remarks>Stored data is cleared during the shutdown process.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.UserData">
      <summary>Stores data associated with this control.</summary>
      <remarks>Stored data is cleared during the shutdown process.</remarks>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.BuildEditArgs">
      <summary>Creates an EditArgs object according to the current selection settings of the SequenceFileView Manager control.</summary>
      <remarks>Use this method to create an EditArgs object, which you can modify before you pass it as the optional parameter to a method that starts an execution.</remarks>
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.LoopOnSelectedSteps" />
      <seealso cref="SequenceFileViewMgr.Run" />
      <seealso cref="SequenceFileViewMgr.RunSelectedSteps" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.BuildEditArgs">
      <summary>Creates an EditArgs object according to the current selection settings of the SequenceFileView Manager control.</summary>
      <remarks>Use this method to create an EditArgs object, which you can modify before you pass it as the optional parameter to a method that starts an execution.</remarks>
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.LoopOnSelectedSteps" />
      <seealso cref="SequenceFileViewMgr.Run" />
      <seealso cref="SequenceFileViewMgr.RunSelectedSteps" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.SetSequenceAndGroup(NationalInstruments.TestStand.Interop.API.Sequence,NationalInstruments.TestStand.Interop.API.StepGroups)">
      <summary>Sets the current sequence and step group at the same time.</summary>
      <remarks>This is more efficient than setting the SequenceFileViewMgr.Sequence property before setting the SequenceFileViewMgr.StepGroup property.</remarks>
      <param name="newSequence">Specifies the sequence to set in the SequenceFileView Manager control.</param>
      <param name="newGroup">Specifies the step group value to set in the SequenceFileView Manager control.</param>
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceFileViewMgr.StepGroup" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.SetSequenceAndGroup(NationalInstruments.TestStand.Interop.API.Sequence,NationalInstruments.TestStand.Interop.API.StepGroups)">
      <summary>Sets the current sequence and step group at the same time.</summary>
      <remarks>This is more efficient than setting the SequenceFileViewMgr.Sequence property before setting the SequenceFileViewMgr.StepGroup property.</remarks>
      <param name="newSequence">Specifies the sequence to set in the SequenceFileView Manager control.</param>
      <param name="newGroup">Specifies the step group value to set in the SequenceFileView Manager control.</param>
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceFileViewMgr.StepGroup" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.Run(System.Object)">
      <summary>Runs the current sequence without using a process model entry point.</summary>
      <returns>A new execution.</returns>
      <param name="editArgsVal">Specifies a custom EditArgs object using this parameter. When you do not pass a custom <c>EditArgs</c> object, the SequenceFileView Manager control builds an <c>EditArgs</c> object according to the current selections.</param>
      <seealso cref="&quot;CommandKind_RunCurrentSequence&quot;CommandKinds.htm" />
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.BuildEditArgs" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.Run(System.Object)">
      <summary>Runs the current sequence without using a process model entry point.</summary>
      <returns>A new execution.</returns>
      <param name="editArgsVal">Specifies a custom EditArgs object using this parameter. When you do not pass a custom <c>EditArgs</c> object, the SequenceFileView Manager control builds an <c>EditArgs</c> object according to the current selections.</param>
      <seealso cref="&quot;CommandKind_RunCurrentSequence&quot;CommandKinds.htm" />
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.BuildEditArgs" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.RunSelectedSteps(System.Object,System.Object)">
      <summary>Starts an execution to run the currently selected steps.</summary>
      <returns>A new execution.</returns>
      <param name="interactiveArgsVal">Specifies a custom InteractiveArgs object using this parameter. When you do not pass a custom <c>InteractiveArgs</c> object, the SequenceFileView Manager control builds an <c>InteractiveArgs</c> object according to the current selections.</param>
      <param name="editArgsVal">Specifies a custom EditArgs object using this parameter. When you do not pass a custom <c>EditArgs</c> object, the SequenceFileView Manager control builds an <c>EditArgs</c> object according to the current selections.</param>
      <seealso cref="&quot;CommandKind_RunSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="&quot;InteractiveArgs&quot;javascript:APILink('/RefTopics/InteractiveArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.BuildEditArgs" />
      <seealso cref="SequenceFileViewMgr.BuildInteractiveArgs" />
      <seealso cref="SequenceFileViewMgr.LoopOnSelectedSteps" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.RunSelectedSteps(System.Object,System.Object)">
      <summary>Starts an execution to run the currently selected steps.</summary>
      <returns>A new execution.</returns>
      <param name="interactiveArgsVal">Specifies a custom InteractiveArgs object using this parameter. When you do not pass a custom <c>InteractiveArgs</c> object, the SequenceFileView Manager control builds an <c>InteractiveArgs</c> object according to the current selections.</param>
      <param name="editArgsVal">Specifies a custom EditArgs object using this parameter. When you do not pass a custom <c>EditArgs</c> object, the SequenceFileView Manager control builds an <c>EditArgs</c> object according to the current selections.</param>
      <seealso cref="&quot;CommandKind_RunSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="&quot;InteractiveArgs&quot;javascript:APILink('/RefTopics/InteractiveArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.BuildEditArgs" />
      <seealso cref="SequenceFileViewMgr.BuildInteractiveArgs" />
      <seealso cref="SequenceFileViewMgr.LoopOnSelectedSteps" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.BuildInteractiveArgs(System.Object,System.Object@)">
      <summary>Creates an InteractiveArgs object according to the current selection settings of the SequenceFileView Manager control.</summary>
      <remarks>Use this method to create an InteractiveArgs object, which you can modify before you pass it as the optional parameter to a method that starts an interactive execution.</remarks>
      <returns>A new InteractiveArgs object.</returns>
      <param name="createLoopArgs">When this parameter is <c>True</c>, this property launches the Loop on Selected Steps dialog box to create the InteractiveArgs object for the SequenceFileViewMgr.LoopOnSelectedSteps method.</param>
      <param name="cancel">If the Loop on Selected Steps dialog box is cancelled, the value of the parameter passed in is <c>True</c>.</param>
      <seealso cref="&quot;Loop on Selected Steps dialog box&quot;javascript:RefLink('/InfoTopics/DB_Loop_On_Sel_Step.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.LoopOnSelectedSteps" />
      <seealso cref="SequenceFileViewMgr.RunSelectedSteps" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.BuildInteractiveArgs(System.Object,System.Object@)">
      <summary>Creates an InteractiveArgs object according to the current selection settings of the SequenceFileView Manager control.</summary>
      <remarks>Use this method to create an InteractiveArgs object, which you can modify before you pass it as the optional parameter to a method that starts an interactive execution.</remarks>
      <returns>A new InteractiveArgs object.</returns>
      <param name="createLoopArgs">When this parameter is <c>True</c>, this property launches the Loop on Selected Steps dialog box to create the InteractiveArgs object for the SequenceFileViewMgr.LoopOnSelectedSteps method.</param>
      <param name="cancel">If the Loop on Selected Steps dialog box is cancelled, the value of the parameter passed in is <c>True</c>.</param>
      <seealso cref="&quot;Loop on Selected Steps dialog box&quot;javascript:RefLink('/InfoTopics/DB_Loop_On_Sel_Step.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.LoopOnSelectedSteps" />
      <seealso cref="SequenceFileViewMgr.RunSelectedSteps" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceFileViewMgrEvents_Event.SequenceFileChanged">
      <summary>Occurs when the selected sequence file changes.</summary>
      <param name="newFile">Specifies the new sequence file.</param>
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceFileViewMgrEvents_Event.SelectionChanged">
      <summary>Occurs when the selected steps are changed.</summary>
      <seealso cref="SequenceFileViewMgr.SelectedSteps" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceFileViewMgrEvents_Event.SequenceChanged">
      <summary>Occurs when the current sequence changes.</summary>
      <param name="newSequence">Specifies the new sequence.</param>
      <seealso cref="SequenceFileViewMgr.Sequence" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceFileViewMgrEvents_Event.StepGroupChanged">
      <summary>Occurs when the selected step group changes.</summary>
      <param name="newGroup">Specifies the new value of the step group property.</param>
      <seealso cref="SequenceFileViewMgr.StepGroup" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceFileViewMgrEvents_Event.RefreshWindow">
      <summary>Occurs when TestStand sends a <c>UIMsg_RefreshWindows</c> message that requires a refresh of the selected sequence file.</summary>
      <seealso cref="ApplicationMgr.RefreshWindows" />
      <seealso cref="ExecutionViewMgr.RefreshWindow" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
      <seealso cref="&quot;UIMsg_RefreshWindows&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.GetImageName(NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Returns the current image name for an image source in a SequenceFileView Manager control. Use the Images.FindImage method to acquire a reference to the image.</summary>
      <returns>The current image name for the image source you specify.</returns>
      <param name="imageSource">Specifies the type of image source from which to obtain an image name. </param>
      <seealso cref="ApplicationMgr.GetImageName" />
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="ExecutionViewMgr.GetImageName" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.GetImageName(NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Returns the current image name for an image source in a SequenceFileView Manager control. Use the Images.FindImage method to acquire a reference to the image.</summary>
      <returns>The current image name for the image source you specify.</returns>
      <param name="imageSource">Specifies the type of image source from which to obtain an image name. </param>
      <seealso cref="ApplicationMgr.GetImageName" />
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="ExecutionViewMgr.GetImageName" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.StepGroupMode">
      <summary>For connected controls that display steps, this property specifies whether to display all steps in the Cleanup, Main, and Setup groups or to display only the steps in the current step group.</summary>
      <remarks>When you set this property to <c>StepGroupMode_AllGroups</c>, ensure that the application does not use the value of the SequenceFileViewMgr.StepGroup property.</remarks>
      <seealso cref="SequenceFileViewMgr.StepGroup" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.StepGroupMode">
      <summary>For connected controls that display steps, this property specifies whether to display all steps in the Cleanup, Main, and Setup groups or to display only the steps in the current step group.</summary>
      <remarks>When you set this property to <c>StepGroupMode_AllGroups</c>, ensure that the application does not use the value of the SequenceFileViewMgr.StepGroup property.</remarks>
      <seealso cref="SequenceFileViewMgr.StepGroup" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.UndoStack">
      <summary>Returns the UndoStack for the currently selected SequenceFile.</summary>
      <remarks>TestStand creates the UndoStack object and automatically adds items to this UndoStack for edits to the currently selected sequence file the TestStand User Interface Controls make.</remarks>
      <seealso cref="ApplicationMgr.UndoStack" />
      <seealso cref="&quot;SequenceFile&quot;javascript:APILink('/RefTopics/SequenceFile.htm')" />
      <seealso cref="&quot;UndoStack&quot;javascript:APILink('/RefTopics/UndoStack.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.UndoStack">
      <summary>Returns the UndoStack for the currently selected SequenceFile.</summary>
      <remarks>TestStand creates the UndoStack object and automatically adds items to this UndoStack for edits to the currently selected sequence file the TestStand User Interface Controls make.</remarks>
      <seealso cref="ApplicationMgr.UndoStack" />
      <seealso cref="&quot;SequenceFile&quot;javascript:APILink('/RefTopics/SequenceFile.htm')" />
      <seealso cref="&quot;UndoStack&quot;javascript:APILink('/RefTopics/UndoStack.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.SelectedSequences">
      <summary>Returns a collection of selected sequences.</summary>
      <remarks>Use this collection to obtain the selected sequences or to change the selected sequences for the selected file. Use the SequenceFileViewMgr.ConnectSequenceList method to connect a control that displays sequences and specifies the selected sequence. Use the SequenceFileViewMgr.Sequence property to determine the sequence a connected SequenceView control displays.
TestStand User Interface Controls connected to a SequenceFileView Manager control, such as the ListBox control, automatically set this property when you select sequences.</remarks>
      <seealso cref="ListBox" />
      <seealso cref="&quot;SelectedSequences&quot;SelectedSequences.htm" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.SelectedSequences">
      <summary>Returns a collection of selected sequences.</summary>
      <remarks>Use this collection to obtain the selected sequences or to change the selected sequences for the selected file. Use the SequenceFileViewMgr.ConnectSequenceList method to connect a control that displays sequences and specifies the selected sequence. Use the SequenceFileViewMgr.Sequence property to determine the sequence a connected SequenceView control displays.
TestStand User Interface Controls connected to a SequenceFileView Manager control, such as the ListBox control, automatically set this property when you select sequences.</remarks>
      <seealso cref="ListBox" />
      <seealso cref="&quot;SelectedSequences&quot;SelectedSequences.htm" />
      <seealso cref="SequenceFileViewMgr.ConnectSequenceList" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.RefreshStepEx(NationalInstruments.TestStand.Interop.API.StepGroups,System.Int32)">
      <summary>Refreshes a step in all connected SequenceView controls.</summary>
      <remarks>Typically, you do not call this method unless you change the state of the step directly using the TestStand API.</remarks>
      <param name="group">Specifies a particular step group.</param>
      <param name="stepIndex">Specifies the zero-based index in the step group of the step to refresh. Pass <c>-1</c> to refresh all the steps in all groups in the connected SequenceView control.</param>
      <seealso cref="SequenceFileViewMgr.RefreshStep" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.RefreshStepEx(NationalInstruments.TestStand.Interop.API.StepGroups,System.Int32)">
      <summary>Refreshes a step in all connected SequenceView controls.</summary>
      <remarks>Typically, you do not call this method unless you change the state of the step directly using the TestStand API.</remarks>
      <param name="group">Specifies a particular step group.</param>
      <param name="stepIndex">Specifies the zero-based index in the step group of the step to refresh. Pass <c>-1</c> to refresh all the steps in all groups in the connected SequenceView control.</param>
      <seealso cref="SequenceFileViewMgr.RefreshStep" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.NewEditContext">
      <summary>Returns a <c>SequenceContext</c> that has a <c>Step</c> property that has only properties common to all currently selected steps. Use the SequenceContext.GetMultipleValues method to determine whether the values of the <c>Step</c> subproperties are common across all the currently selected steps.</summary>
      <seealso cref="&quot;Engine.NewEditContext&quot;javascript:APILink('/RefTopics/Engine_NewEditContext_M.htm')" />
      <seealso cref="ExecutionViewMgr.NewEditContext" />
      <seealso cref="&quot;SequenceContext.GetMultipleValues&quot;javascript:APILink('/RefTopics/SequenceContext_GetMultipleValues_M.htm')" />
      <seealso cref="&quot;SequenceContext.SetMultipleValues&quot;javascript:APILink('/RefTopics/SequenceContext_SetMultipleValues_M.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.NewEditContext">
      <summary>Returns a <c>SequenceContext</c> that has a <c>Step</c> property that has only properties common to all currently selected steps. Use the SequenceContext.GetMultipleValues method to determine whether the values of the <c>Step</c> subproperties are common across all the currently selected steps.</summary>
      <seealso cref="&quot;Engine.NewEditContext&quot;javascript:APILink('/RefTopics/Engine_NewEditContext_M.htm')" />
      <seealso cref="ExecutionViewMgr.NewEditContext" />
      <seealso cref="&quot;SequenceContext.GetMultipleValues&quot;javascript:APILink('/RefTopics/SequenceContext_GetMultipleValues_M.htm')" />
      <seealso cref="&quot;SequenceContext.SetMultipleValues&quot;javascript:APILink('/RefTopics/SequenceContext_SetMultipleValues_M.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceFileViewMgrEvents_Event.SequenceSelectionChanged">
      <summary>Occurs when the selected sequences change.</summary>
      <seealso cref="SequenceFileViewMgr.SelectedSequences" />
      <seealso cref="SequenceFileViewMgr.Sequence" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.ConnectInsertionPalette(System.Object)">
      <summary>Connects an InsertionPalette control to display the step type list and templates list and enables inserting sequences, steps, and variables into controls connected to the SequenceFileView Manager control, such as the ListBox, SequenceView, or VariablesView controls.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.InsertionPalettes property to obtain the InsertionPaletteConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the reference to an InsertionPalette control that displays the step type list and templates list.</param>
      <seealso cref="InsertionPalette" />
      <seealso cref="&quot;InsertionPaletteConnections&quot;InsertionPaletteConnections.htm" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.InsertionPalettes&quot;SequenceFileViewMgrConnections_InsertionPalettes_P.htm" />
      <seealso cref="SequenceView" />
      <seealso cref="VariablesView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.ConnectInsertionPalette(System.Object)">
      <summary>Connects an InsertionPalette control to display the step type list and templates list and enables inserting sequences, steps, and variables into controls connected to the SequenceFileView Manager control, such as the ListBox, SequenceView, or VariablesView controls.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the SequenceFileViewMgrConnections object from the SequenceFileViewMgr.Connections property. Then, access the SequenceFileViewMgrConnections.InsertionPalettes property to obtain the InsertionPaletteConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the reference to an InsertionPalette control that displays the step type list and templates list.</param>
      <seealso cref="InsertionPalette" />
      <seealso cref="&quot;InsertionPaletteConnections&quot;InsertionPaletteConnections.htm" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr.Connections" />
      <seealso cref="&quot;SequenceFileViewMgrConnections&quot;SequenceFileViewMgrConnections.htm" />
      <seealso cref="&quot;SequenceFileViewMgrConnections.InsertionPalettes&quot;SequenceFileViewMgrConnections_InsertionPalettes_P.htm" />
      <seealso cref="SequenceView" />
      <seealso cref="VariablesView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ISequenceFileViewMgr.SelectedPropertyObjects">
      <summary>Returns a collection of selected property objects.</summary>
      <remarks>Use this collection to obtain the selected property objects or change the selected property objects for the selected file. TestStand User Interface Controls connected to a SequenceFileView Manager control, such as the VariablesView control, automatically set this property when you select variables and properties.</remarks>
      <seealso cref="&quot;SelectedPropertyObjects&quot;SelectedPropertyObjects.htm" />
      <seealso cref="SequenceFileViewMgr.PropertyObjectSelectionChanged" />
      <seealso cref="VariablesView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.SequenceFileViewMgrClass.SelectedPropertyObjects">
      <summary>Returns a collection of selected property objects.</summary>
      <remarks>Use this collection to obtain the selected property objects or change the selected property objects for the selected file. TestStand User Interface Controls connected to a SequenceFileView Manager control, such as the VariablesView control, automatically set this property when you select variables and properties.</remarks>
      <seealso cref="&quot;SelectedPropertyObjects&quot;SelectedPropertyObjects.htm" />
      <seealso cref="SequenceFileViewMgr.PropertyObjectSelectionChanged" />
      <seealso cref="VariablesView" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._SequenceFileViewMgrEvents_Event.PropertyObjectSelectionChanged">
      <summary>Occurs when the selected property objects change. For example, this event is generated when you change the selection in a VariablesView control that connects to the SequenceFileView Manager control or when you programmatically change the contents of the SelectedPropertyObjects collection.</summary>
      <seealso cref="ExecutionViewMgr.PropertyObjectSelectionChanged" />
      <seealso cref="SequenceFileViewMgr.SelectedPropertyObjects" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgr">
      <summary>An ExecutionView Manager control performs the following tasks to manage how other visible TestStand User Interface (UI) Controls view and interact with a selected TestStand execution:<para><para>&#160;&#160;&#160;&#160;* Designates an execution as the selected execution.</para><para>&#160;&#160;&#160;&#160;* Tracks which thread, stack frame, sequence, step group, and steps are selected in the selected execution.</para><para>&#160;&#160;&#160;&#160;* Displays aspects of the selected execution in the visible TestStand UI Controls to which the control connects.</para><para>&#160;&#160;&#160;&#160;* Enables visible TestStand UI Controls to which the control connects to change the selected thread, stack frame, sequence, step group, and steps.</para><para>&#160;&#160;&#160;&#160;* Generates events to notify the application of the progress and state of the selected execution.</para><para>&#160;&#160;&#160;&#160;* Provides debugging commands.</para><para>&#160;&#160;&#160;&#160;* Updates the ReportView control to show the current report for the selected execution.</para></para>
An application must have one ExecutionView Manager control for each location, such as a window, form, or panel, in which you display an execution or let the user select a current execution.</summary>
      <seealso cref="ReportView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr">
      <summary>An ExecutionView Manager control performs the following tasks to manage how other visible TestStand User Interface (UI) Controls view and interact with a selected TestStand execution:<para><para>&#160;&#160;&#160;&#160;* Designates an execution as the selected execution.</para><para>&#160;&#160;&#160;&#160;* Tracks which thread, stack frame, sequence, step group, and steps are selected in the selected execution.</para><para>&#160;&#160;&#160;&#160;* Displays aspects of the selected execution in the visible TestStand UI Controls to which the control connects.</para><para>&#160;&#160;&#160;&#160;* Enables visible TestStand UI Controls to which the control connects to change the selected thread, stack frame, sequence, step group, and steps.</para><para>&#160;&#160;&#160;&#160;* Generates events to notify the application of the progress and state of the selected execution.</para><para>&#160;&#160;&#160;&#160;* Provides debugging commands.</para><para>&#160;&#160;&#160;&#160;* Updates the ReportView control to show the current report for the selected execution.</para></para>
An application must have one ExecutionView Manager control for each location, such as a window, form, or panel, in which you display an execution or let the user select a current execution.</summary>
      <seealso cref="ReportView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass">
      <summary>An ExecutionView Manager control performs the following tasks to manage how other visible TestStand User Interface (UI) Controls view and interact with a selected TestStand execution:<para><para>&#160;&#160;&#160;&#160;* Designates an execution as the selected execution.</para><para>&#160;&#160;&#160;&#160;* Tracks which thread, stack frame, sequence, step group, and steps are selected in the selected execution.</para><para>&#160;&#160;&#160;&#160;* Displays aspects of the selected execution in the visible TestStand UI Controls to which the control connects.</para><para>&#160;&#160;&#160;&#160;* Enables visible TestStand UI Controls to which the control connects to change the selected thread, stack frame, sequence, step group, and steps.</para><para>&#160;&#160;&#160;&#160;* Generates events to notify the application of the progress and state of the selected execution.</para><para>&#160;&#160;&#160;&#160;* Provides debugging commands.</para><para>&#160;&#160;&#160;&#160;* Updates the ReportView control to show the current report for the selected execution.</para></para>
An application must have one ExecutionView Manager control for each location, such as a window, form, or panel, in which you display an execution or let the user select a current execution.</summary>
      <seealso cref="ReportView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.Execution">
      <summary>Specifies the execution selected in the ExecutionView Manager control.</summary>
      <remarks>An execution cannot be selected in more than one ExecutionView Manager control at a time. The ExecutionView Manager control generates an ExecutionViewMgr.ExecutionChanged event when this property changes.</remarks>
      <seealso cref="&quot;Execution&quot;javascript:APILink('/RefTopics/Execution.htm')" />
      <seealso cref="ExecutionViewMgr.ExecutionChanged" />
      <seealso cref="ExecutionViewMgr.ReplaceExecutionOnClose" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.Execution">
      <summary>Specifies the execution selected in the ExecutionView Manager control.</summary>
      <remarks>An execution cannot be selected in more than one ExecutionView Manager control at a time. The ExecutionView Manager control generates an ExecutionViewMgr.ExecutionChanged event when this property changes.</remarks>
      <seealso cref="&quot;Execution&quot;javascript:APILink('/RefTopics/Execution.htm')" />
      <seealso cref="ExecutionViewMgr.ExecutionChanged" />
      <seealso cref="ExecutionViewMgr.ReplaceExecutionOnClose" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.Connections">
      <summary>Accesses the connections of the ExecutionView Manager control.</summary>
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.Connections">
      <summary>Accesses the connections of the ExecutionView Manager control.</summary>
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.RunState">
      <summary>Returns the run state of the execution.</summary>
      <remarks>The ExecutionView Manager control generates the ExecutionViewMgr.RunStateChanged event when this property changes. The value this property obtains does not necessarily correspond to the value the Execution.GetStates  method obtains. The <c>Execution.GetStates</c> method returns the instantaneous state of the execution, while the <c>ExecutionViewMgr.RunState</c> property returns the current state the ExecutionView Manager control displays. 
<para>Note: When you write a user interface that uses an ExecutionView Manager control, National Instruments recommends using the <c>ExecutionViewMgr.RunState</c> and ExecutionViewMgr.TerminationState properties instead of directly calling the <c>Execution.GetStates</c> method on the execution. A slight delay exists between when the instantaneous state of the execution changes and when TestStand updates the state this property returns to reflect the change. This occurs because the <c>ExecutionViewMgr.RunState</c> and <c>ExecutionViewMgr.TerminationState</c> properties do not change until TestStand processes the UIMessages involved. Thus, use the <c>ExecutionViewMgr.RunState</c> and <c>ExecutionViewMgr.TerminationState</c> properties instead because these properties reflect what the user interface actually displays.</para></remarks>
      <seealso cref="ApplicationMgr.GetRunState" />
      <seealso cref="&quot;Execution.GetStates&quot;javascript:APILink('/RefTopics/Execution_GetStates_M.htm')" />
      <seealso cref="ExecutionViewMgr.RunStateChanged" />
      <seealso cref="ExecutionViewMgr.TerminationState" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.RunState">
      <summary>Returns the run state of the execution.</summary>
      <remarks>The ExecutionView Manager control generates the ExecutionViewMgr.RunStateChanged event when this property changes. The value this property obtains does not necessarily correspond to the value the Execution.GetStates  method obtains. The <c>Execution.GetStates</c> method returns the instantaneous state of the execution, while the <c>ExecutionViewMgr.RunState</c> property returns the current state the ExecutionView Manager control displays. 
<para>Note: When you write a user interface that uses an ExecutionView Manager control, National Instruments recommends using the <c>ExecutionViewMgr.RunState</c> and ExecutionViewMgr.TerminationState properties instead of directly calling the <c>Execution.GetStates</c> method on the execution. A slight delay exists between when the instantaneous state of the execution changes and when TestStand updates the state this property returns to reflect the change. This occurs because the <c>ExecutionViewMgr.RunState</c> and <c>ExecutionViewMgr.TerminationState</c> properties do not change until TestStand processes the UIMessages involved. Thus, use the <c>ExecutionViewMgr.RunState</c> and <c>ExecutionViewMgr.TerminationState</c> properties instead because these properties reflect what the user interface actually displays.</para></remarks>
      <seealso cref="ApplicationMgr.GetRunState" />
      <seealso cref="&quot;Execution.GetStates&quot;javascript:APILink('/RefTopics/Execution_GetStates_M.htm')" />
      <seealso cref="ExecutionViewMgr.RunStateChanged" />
      <seealso cref="ExecutionViewMgr.TerminationState" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.TerminationState">
      <summary>Returns the termination state of the execution.</summary>
      <remarks>The ExecutionView Manager control generates the ExecutionViewMgr.TerminationStateChanged event when this property changes. The value obtained from this property does not necessarily correspond to the value obtained from the Execution.GetStates  method. The <c>Execution.GetStates</c> method returns the instantaneous state of the execution, while the ExecutionViewMgr.RunState property returns the current state the ExecutionView Manager control displays. 
<para>Note: When you write a user interface that uses an ExecutionView Manager control, National Instruments recommends using the ExecutionViewMgr.RunState and ExecutionViewMgr.TerminationState properties instead of directly calling the <c>Execution.GetStates</c> method on the execution. A slight delay exists between when the instantaneous state of the execution changes and when TestStand updates the state this property returns to reflect the change. This occurs because the state this property returns does not change until TestStand processes the UIMessages involved, thus allowing for synchronization of the updates necessary for displaying an execution.</para></remarks>
      <seealso cref="ApplicationMgr.GetTerminationState" />
      <seealso cref="&quot;Execution.GetStates&quot;javascript:APILink('/RefTopics/Execution_GetStates_M.htm')" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminationStateChanged" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.TerminationState">
      <summary>Returns the termination state of the execution.</summary>
      <remarks>The ExecutionView Manager control generates the ExecutionViewMgr.TerminationStateChanged event when this property changes. The value obtained from this property does not necessarily correspond to the value obtained from the Execution.GetStates  method. The <c>Execution.GetStates</c> method returns the instantaneous state of the execution, while the ExecutionViewMgr.RunState property returns the current state the ExecutionView Manager control displays. 
<para>Note: When you write a user interface that uses an ExecutionView Manager control, National Instruments recommends using the ExecutionViewMgr.RunState and ExecutionViewMgr.TerminationState properties instead of directly calling the <c>Execution.GetStates</c> method on the execution. A slight delay exists between when the instantaneous state of the execution changes and when TestStand updates the state this property returns to reflect the change. This occurs because the state this property returns does not change until TestStand processes the UIMessages involved, thus allowing for synchronization of the updates necessary for displaying an execution.</para></remarks>
      <seealso cref="ApplicationMgr.GetTerminationState" />
      <seealso cref="&quot;Execution.GetStates&quot;javascript:APILink('/RefTopics/Execution_GetStates_M.htm')" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminationStateChanged" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ExecutionEntryPoints">
      <summary>Returns the set of Execution entry points that the model sequence file for the selected execution defines. The collection includes only entry points that set the Sequence.ShowEntryPointForExeWindow property.</summary>
      <remarks>This collection can change when the selected execution changes.</remarks>
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr.ConfigurationEntryPoints" />
      <seealso cref="&quot;Sequence.ShowEntryPointForExeWindow&quot;javascript:APILink('/RefTopics/Sequence_ShowEntryPointForExeWindow_P.htm')" />
      <seealso cref="SequenceFileViewMgr.ExecutionEntryPoints" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ExecutionEntryPoints">
      <summary>Returns the set of Execution entry points that the model sequence file for the selected execution defines. The collection includes only entry points that set the Sequence.ShowEntryPointForExeWindow property.</summary>
      <remarks>This collection can change when the selected execution changes.</remarks>
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr.ConfigurationEntryPoints" />
      <seealso cref="&quot;Sequence.ShowEntryPointForExeWindow&quot;javascript:APILink('/RefTopics/Sequence_ShowEntryPointForExeWindow_P.htm')" />
      <seealso cref="SequenceFileViewMgr.ExecutionEntryPoints" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConfigurationEntryPoints">
      <summary>Returns a collection of Configuration entry points for the selected execution.</summary>
      <remarks>This collection can change when the selected execution changes.</remarks>
      <seealso cref="EntryPoint" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr.ExecutionEntryPoints" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConfigurationEntryPoints">
      <summary>Returns a collection of Configuration entry points for the selected execution.</summary>
      <remarks>This collection can change when the selected execution changes.</remarks>
      <seealso cref="EntryPoint" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr.ExecutionEntryPoints" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.SelectedSteps">
      <summary>Returns the collection of selected steps.</summary>
      <remarks>Use this collection to obtain the selected steps or to change the selected steps. TestStand User Interface Controls connected to an ExecutionView Manager control, such as the SequenceView control, automatically set this property when you select steps. The ExecutionView Manager control also generates the ExecutionViewMgr.SelectionChanged event when this property changes. 
<para>Note: You can select steps only when an execution is paused.</para></remarks>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.SelectionChanged" />
      <seealso cref="&quot;SelectedSteps&quot;SelectedSteps.htm" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.SelectedSteps">
      <summary>Returns the collection of selected steps.</summary>
      <remarks>Use this collection to obtain the selected steps or to change the selected steps. TestStand User Interface Controls connected to an ExecutionView Manager control, such as the SequenceView control, automatically set this property when you select steps. The ExecutionView Manager control also generates the ExecutionViewMgr.SelectionChanged event when this property changes. 
<para>Note: You can select steps only when an execution is paused.</para></remarks>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.SelectionChanged" />
      <seealso cref="&quot;SelectedSteps&quot;SelectedSteps.htm" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.SequenceContext">
      <summary>Specifies the current SequenceContext of the ExecutionView Manager control.</summary>
      <remarks>The ExecutionView Manager control automatically sets this property when pausing an execution.
<para>Note: You can read and write to this property only when the selected execution is paused. When you write to this property, the sequence context must belong to the selected execution.</para></remarks>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="&quot;SequenceContext&quot;javascript:APILink('/RefTopics/SequenceContext.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.SequenceContext">
      <summary>Specifies the current SequenceContext of the ExecutionView Manager control.</summary>
      <remarks>The ExecutionView Manager control automatically sets this property when pausing an execution.
<para>Note: You can read and write to this property only when the selected execution is paused. When you write to this property, the sequence context must belong to the selected execution.</para></remarks>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="&quot;SequenceContext&quot;javascript:APILink('/RefTopics/SequenceContext.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.Thread">
      <summary>Specifies the foreground thread of the selected execution.</summary>
      <remarks><para>Note: You can read or write to this property only when the selected execution is paused. When you write to this property, the thread must belong to the selected execution.</para>
<para>Note: Although you can set the foreground thread of an Execution object, National Instruments recommends using this property so connected TestStand User Interface Controls are updated to reflect any changes made.</para></remarks>
      <seealso cref="&quot;Thread&quot;javascript:APILink('/RefTopics/Thread.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.Thread">
      <summary>Specifies the foreground thread of the selected execution.</summary>
      <remarks><para>Note: You can read or write to this property only when the selected execution is paused. When you write to this property, the thread must belong to the selected execution.</para>
<para>Note: Although you can set the foreground thread of an Execution object, National Instruments recommends using this property so connected TestStand User Interface Controls are updated to reflect any changes made.</para></remarks>
      <seealso cref="&quot;Thread&quot;javascript:APILink('/RefTopics/Thread.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ReplaceExecutionOnClose">
      <summary>When this property is <c>True</c>, closing the selected execution replaces the closed execution with another execution not displayed in any other ExecutionView Manager control. Otherwise, the selected execution becomes <c>NULL</c>.</summary>
      <seealso cref="ApplicationMgr.CloseExecution" />
      <seealso cref="ExecutionViewMgr.Execution" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ReplaceExecutionOnClose">
      <summary>When this property is <c>True</c>, closing the selected execution replaces the closed execution with another execution not displayed in any other ExecutionView Manager control. Otherwise, the selected execution becomes <c>NULL</c>.</summary>
      <seealso cref="ApplicationMgr.CloseExecution" />
      <seealso cref="ExecutionViewMgr.Execution" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ApplicationMgr">
      <summary>Returns a reference to the Application Manager control of the application. The value is <c>NULL</c> when no Application Manager control exists within the process.</summary>
      <seealso cref="ApplicationMgr" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ApplicationMgr">
      <summary>Returns a reference to the Application Manager control of the application. The value is <c>NULL</c> when no Application Manager control exists within the process.</summary>
      <seealso cref="ApplicationMgr" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.UserData">
      <summary>Stores data associated with this control.</summary>
      <remarks>Stored data is cleared during the shutdown process.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.UserData">
      <summary>Stores data associated with this control.</summary>
      <remarks>Stored data is cleared during the shutdown process.</remarks>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.BreakExecution">
      <summary>Attempts to pause the current execution if it is running.</summary>
      <remarks>The ExecutionView Manager control generates an ExecutionViewMgr.Break event when the execution suspends.</remarks>
      <seealso cref="&quot;CommandKind_Break&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.Break" />
      <seealso cref="ExecutionViewMgr.ResumeExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.BreakExecution">
      <summary>Attempts to pause the current execution if it is running.</summary>
      <remarks>The ExecutionView Manager control generates an ExecutionViewMgr.Break event when the execution suspends.</remarks>
      <seealso cref="&quot;CommandKind_Break&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.Break" />
      <seealso cref="ExecutionViewMgr.ResumeExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.BuildEditArgs">
      <summary>Creates an EditArgs object that reflects the selection state of the ExecutionView Manager control.</summary>
      <remarks>Use this method to create an EditArgs object, which you can modify before you pass it as the optional parameter to a method that starts an execution.</remarks>
      <returns>A new EditArgs object.</returns>
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.BuildEditArgs">
      <summary>Creates an EditArgs object that reflects the selection state of the ExecutionView Manager control.</summary>
      <remarks>Use this method to create an EditArgs object, which you can modify before you pass it as the optional parameter to a method that starts an execution.</remarks>
      <returns>A new EditArgs object.</returns>
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.BuildInteractiveArgs(System.Object,System.Object@)">
      <summary>Creates an InteractiveArgs object that reflects the selection state of the ExecutionView Manager control.</summary>
      <remarks>Use this method to create an InteractiveArgs object, which you can modify before you pass it as an optional parameter to a method that starts an interactive execution.</remarks>
      <returns>The new InteractiveArgs object.</returns>
      <param name="createLoopArgs">When this parameter is <c>True</c>, this property launches the Loop on Selected Steps dialog box to create the InteractiveArgs for the ExecutionViewMgr.LoopOnSelectedSteps method.</param>
      <param name="cancel">If the Loop on Selected Steps dialog box is cancelled, the value of the parameter passed in is <c>True</c>.</param>
      <seealso cref="ExecutionViewMgr.LoopOnSelectedSteps" />
      <seealso cref="ExecutionViewMgr.RunSelectedSteps" />
      <seealso cref="&quot;Loop on Selected Steps dialog box&quot;javascript:RefLink('/InfoTopics/DB_Loop_On_Sel_Step.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.BuildInteractiveArgs(System.Object,System.Object@)">
      <summary>Creates an InteractiveArgs object that reflects the selection state of the ExecutionView Manager control.</summary>
      <remarks>Use this method to create an InteractiveArgs object, which you can modify before you pass it as an optional parameter to a method that starts an interactive execution.</remarks>
      <returns>The new InteractiveArgs object.</returns>
      <param name="createLoopArgs">When this parameter is <c>True</c>, this property launches the Loop on Selected Steps dialog box to create the InteractiveArgs for the ExecutionViewMgr.LoopOnSelectedSteps method.</param>
      <param name="cancel">If the Loop on Selected Steps dialog box is cancelled, the value of the parameter passed in is <c>True</c>.</param>
      <seealso cref="ExecutionViewMgr.LoopOnSelectedSteps" />
      <seealso cref="ExecutionViewMgr.RunSelectedSteps" />
      <seealso cref="&quot;Loop on Selected Steps dialog box&quot;javascript:RefLink('/InfoTopics/DB_Loop_On_Sel_Step.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.Refresh(System.Object)">
      <summary>Refreshes all connected controls.</summary>
      <remarks>Typically, you do not call this method unless you have changed the state of the execution directly using the API. Call this method so these types of changes are reflected in the connected controls.</remarks>
      <param name="seqCtxt">Specifies the SequenceContext used to refresh the controls. When you do pass a SequenceContext, the ExecutionView Manager control uses the current SequenceContext to refresh the controls.</param>
      <seealso cref="ApplicationMgr.Refresh" />
      <seealso cref="ApplicationMgr.RefreshAllViewMgrs" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.Refresh(System.Object)">
      <summary>Refreshes all connected controls.</summary>
      <remarks>Typically, you do not call this method unless you have changed the state of the execution directly using the API. Call this method so these types of changes are reflected in the connected controls.</remarks>
      <param name="seqCtxt">Specifies the SequenceContext used to refresh the controls. When you do pass a SequenceContext, the ExecutionView Manager control uses the current SequenceContext to refresh the controls.</param>
      <seealso cref="ApplicationMgr.Refresh" />
      <seealso cref="ApplicationMgr.RefreshAllViewMgrs" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.RefreshStep(System.Int32)">
      <summary>Refreshes a step in a SequenceView control connected to the ExecutionView Manager control.
<para>Note: When the value of the ExecutionViewMgr.StepGroupMode property is not <c>StepGroupMode_OneGroup</c>, call ExecutionViewMgr.RefreshStepEx instead so you can specify the step group that contains the step.</para></summary>
      <remarks>Typically, you do not call this method unless you have changed the state of the step directly using the TestStand API. Call this method so these types of changes are reflected in connected SequenceView controls.</remarks>
      <param name="stepIndex">Specifies the index of the step to refresh. Passing <c>-1</c> refreshes all the steps in the connected SequenceView control.</param>
      <seealso cref="ExecutionViewMgr.RefreshStepEx" />
      <seealso cref="ExecutionViewMgr.StepGroupMode" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.RefreshStep(System.Int32)">
      <summary>Refreshes a step in a SequenceView control connected to the ExecutionView Manager control.
<para>Note: When the value of the ExecutionViewMgr.StepGroupMode property is not <c>StepGroupMode_OneGroup</c>, call ExecutionViewMgr.RefreshStepEx instead so you can specify the step group that contains the step.</para></summary>
      <remarks>Typically, you do not call this method unless you have changed the state of the step directly using the TestStand API. Call this method so these types of changes are reflected in connected SequenceView controls.</remarks>
      <param name="stepIndex">Specifies the index of the step to refresh. Passing <c>-1</c> refreshes all the steps in the connected SequenceView control.</param>
      <seealso cref="ExecutionViewMgr.RefreshStepEx" />
      <seealso cref="ExecutionViewMgr.StepGroupMode" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.GetCommand(NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32)">
      <summary>Creates a Command object. When applicable, the command operates on the items the ExecutionView Manager control selects.</summary>
      <param name="cmdKind">Specifies the type of Command object to create.</param>
      <param name="commandIndex">Pass this parameter on commands that are sets  to specify which command in the set to return.</param>
      <seealso cref="ApplicationMgr.GetCommand" />
      <seealso cref="CommandKinds" />
      <seealso cref="SequenceFileViewMgr.GetCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.GetCommand(NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32)">
      <summary>Creates a Command object. When applicable, the command operates on the items the ExecutionView Manager control selects.</summary>
      <param name="cmdKind">Specifies the type of Command object to create.</param>
      <param name="commandIndex">Pass this parameter on commands that are sets  to specify which command in the set to return.</param>
      <seealso cref="ApplicationMgr.GetCommand" />
      <seealso cref="CommandKinds" />
      <seealso cref="SequenceFileViewMgr.GetCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.GetCaptionText(NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean,System.String)">
      <summary>Returns the current caption text for a caption source in an ExecutionView Manager control.</summary>
      <returns>The current text for the caption source you specify.</returns>
      <param name="captionSource">Specifies the type of caption source from which to obtain text.</param>
      <param name="longName">For certain caption sources, this parameter specifies to return a long or short version of the caption text. Refer to the CaptionSources enumeration for more information about determining when this option affects the text and for more information about the difference between the long and short versions of the text.</param>
      <param name="formatExpression">Specifies a format expression to evaluate when generating the caption text. For the CaptionSource_MacroExpression caption source, specify a format expression that evaluates to a string value that contains macros that specify other caption sources. For all other caption sources, specify an expression that evaluates to a string value that contains the characters <c>%1</c>.  The method replaces the <c>%1</c> characters with the text from the caption source. Pass an empty string to use the default format string for the caption source.</param>
      <seealso cref="ApplicationMgr.GetCaptionText" />
      <seealso cref="CaptionSources" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.GetCaptionText(NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean,System.String)">
      <summary>Returns the current caption text for a caption source in an ExecutionView Manager control.</summary>
      <returns>The current text for the caption source you specify.</returns>
      <param name="captionSource">Specifies the type of caption source from which to obtain text.</param>
      <param name="longName">For certain caption sources, this parameter specifies to return a long or short version of the caption text. Refer to the CaptionSources enumeration for more information about determining when this option affects the text and for more information about the difference between the long and short versions of the text.</param>
      <param name="formatExpression">Specifies a format expression to evaluate when generating the caption text. For the CaptionSource_MacroExpression caption source, specify a format expression that evaluates to a string value that contains macros that specify other caption sources. For all other caption sources, specify an expression that evaluates to a string value that contains the characters <c>%1</c>.  The method replaces the <c>%1</c> characters with the text from the caption source. Pass an empty string to use the default format string for the caption source.</param>
      <seealso cref="ApplicationMgr.GetCaptionText" />
      <seealso cref="CaptionSources" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.RunSelectedSteps(System.Object)">
      <summary>Interactively executes the selected steps within the current execution.</summary>
      <remarks><para>Note: You can call this method only when the execution is paused and the execution is not in interactive mode.</para></remarks>
      <param name="interArgs">Specifies an InteractiveArgs object. When you do not pass <c>InteractiveArgs</c> objects, the ExecutionView Manager control creates the appropriate <c>InteractiveArgs</c> objects.</param>
      <seealso cref="&quot;CommandKind_RunSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.BuildInteractiveArgs" />
      <seealso cref="ExecutionViewMgr.LoopOnSelectedSteps" />
      <seealso cref="&quot;InteractiveArgs&quot;javascript:APILink('/RefTopics/InteractiveArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.RunSelectedSteps(System.Object)">
      <summary>Interactively executes the selected steps within the current execution.</summary>
      <remarks><para>Note: You can call this method only when the execution is paused and the execution is not in interactive mode.</para></remarks>
      <param name="interArgs">Specifies an InteractiveArgs object. When you do not pass <c>InteractiveArgs</c> objects, the ExecutionView Manager control creates the appropriate <c>InteractiveArgs</c> objects.</param>
      <seealso cref="&quot;CommandKind_RunSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.BuildInteractiveArgs" />
      <seealso cref="ExecutionViewMgr.LoopOnSelectedSteps" />
      <seealso cref="&quot;InteractiveArgs&quot;javascript:APILink('/RefTopics/InteractiveArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.LoopOnSelectedSteps(System.Object)">
      <summary>Starts an interactive execution that loops on the currently selected steps.</summary>
      <remarks><para>Note: You can call this method only when the execution is paused and the execution is not in interactive mode.</para></remarks>
      <param name="interArgs">Specifies an InteractiveArgs object. When you do not pass an <c>InteractiveArgs</c> object, the ExecutionView Manager control creates the appropriate <c>InteractiveArgs</c> object.</param>
      <seealso cref="&quot;CommandKind_LoopOnSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.BuildInteractiveArgs" />
      <seealso cref="ExecutionViewMgr.RunSelectedSteps" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.LoopOnSelectedSteps(System.Object)">
      <summary>Starts an interactive execution that loops on the currently selected steps.</summary>
      <remarks><para>Note: You can call this method only when the execution is paused and the execution is not in interactive mode.</para></remarks>
      <param name="interArgs">Specifies an InteractiveArgs object. When you do not pass an <c>InteractiveArgs</c> object, the ExecutionView Manager control creates the appropriate <c>InteractiveArgs</c> object.</param>
      <seealso cref="&quot;CommandKind_LoopOnSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.BuildInteractiveArgs" />
      <seealso cref="ExecutionViewMgr.RunSelectedSteps" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectCommand(System.Object,NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32,System.Int32)">
      <summary>Connects a command source in an ExecutionView Manager control to a TestStand button or checkbox control. The connection automatically updates the enabled, visible, and caption properties of the button or checkbox based on the state of the current execution. Clicking the button or enabling the checkbox executes the command.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.Command property to obtain the CommandConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the button or checkbox control to which the command connects.</param>
      <param name="cmdKind">Specifies the type of command to connect.</param>
      <param name="index">For CommandKinds that are sets, this parameter indexes the set to obtain a particular command.</param>
      <param name="opts">Specifies the options for the CommandConnection. Refer to the CommandConnectionOptions constants for more information about the options for the CommandConnection object.</param>
      <seealso cref="Button" />
      <seealso cref="CommandConnectionOptions" />
      <seealso cref="&quot;CommandConnections&quot;CommandConnections.htm" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgr.GetCommand" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.Command&quot;ExecutionViewMgrConnections_Command_P.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectCommand(System.Object,NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32,System.Int32)">
      <summary>Connects a command source in an ExecutionView Manager control to a TestStand button or checkbox control. The connection automatically updates the enabled, visible, and caption properties of the button or checkbox based on the state of the current execution. Clicking the button or enabling the checkbox executes the command.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.Command property to obtain the CommandConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the button or checkbox control to which the command connects.</param>
      <param name="cmdKind">Specifies the type of command to connect.</param>
      <param name="index">For CommandKinds that are sets, this parameter indexes the set to obtain a particular command.</param>
      <param name="opts">Specifies the options for the CommandConnection. Refer to the CommandConnectionOptions constants for more information about the options for the CommandConnection object.</param>
      <seealso cref="Button" />
      <seealso cref="CommandConnectionOptions" />
      <seealso cref="&quot;CommandConnections&quot;CommandConnections.htm" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgr.GetCommand" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.Command&quot;ExecutionViewMgrConnections_Command_P.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectCaption(System.Object,NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean)">
      <summary>Connects a caption source in an ExecutionView Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with text that describes an aspect of the current application state. </summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.Caption property to obtain the CaptionConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the visible control or element of a visible control to which the caption source connects. Pass a Label, ExpressionEdit, or StatusBarPane control.</param>
      <param name="captionSource">Specifies the type of caption source to connect.</param>
      <param name="longName">For certain caption sources, this parameter specifies whether the connection displays a long or short version of the caption text. Refer to the CaptionSources enumeration for more information about determining when this option affects a caption source and for more information about the difference between the long and short versions of the text.</param>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="&quot;CaptionConnections&quot;CaptionConnections.htm" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgr.GetCaptionText" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.Caption&quot;ExecutionViewMgrConnections_Caption_P.htm" />
      <seealso cref="ExpressionEdit" />
      <seealso cref="Label" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectCaption(System.Object,NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean)">
      <summary>Connects a caption source in an ExecutionView Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with text that describes an aspect of the current application state. </summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.Caption property to obtain the CaptionConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the visible control or element of a visible control to which the caption source connects. Pass a Label, ExpressionEdit, or StatusBarPane control.</param>
      <param name="captionSource">Specifies the type of caption source to connect.</param>
      <param name="longName">For certain caption sources, this parameter specifies whether the connection displays a long or short version of the caption text. Refer to the CaptionSources enumeration for more information about determining when this option affects a caption source and for more information about the difference between the long and short versions of the text.</param>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="&quot;CaptionConnections&quot;CaptionConnections.htm" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgr.GetCaptionText" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.Caption&quot;ExecutionViewMgrConnections_Caption_P.htm" />
      <seealso cref="ExpressionEdit" />
      <seealso cref="Label" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectExecutionView(System.Object,System.Int32)">
      <summary>Connects a SequenceView control to display the steps of the running sequence in the execution.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.ExecutionView property to obtain the ExecutionViewConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the SequenceView control to connect to the ExecutionViewConnection.</param>
      <param name="opts">Specifies the options for the ExecutionViewConnection. Refer to the ExecutionViewOptions constants for more information about the options for the ExecutionViewConnection.</param>
      <seealso cref="&quot;ExecutionViewConnections&quot;ExecutionViewConnections.htm" />
      <seealso cref="ExecutionViewOptions" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionView&quot;ExecutionViewMgrConnections_ExecutionView_P.htm" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectExecutionView(System.Object,System.Int32)">
      <summary>Connects a SequenceView control to display the steps of the running sequence in the execution.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.ExecutionView property to obtain the ExecutionViewConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the SequenceView control to connect to the ExecutionViewConnection.</param>
      <param name="opts">Specifies the options for the ExecutionViewConnection. Refer to the ExecutionViewOptions constants for more information about the options for the ExecutionViewConnection.</param>
      <seealso cref="&quot;ExecutionViewConnections&quot;ExecutionViewConnections.htm" />
      <seealso cref="ExecutionViewOptions" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionView&quot;ExecutionViewMgrConnections_ExecutionView_P.htm" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectReportView(System.Object)">
      <summary>Connects a ReportView control to display the report of the selected execution in the ExecutionView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.ReportView property to obtain the ReportViewConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the ReportView control to connect to the ExecutionView Manager control.</param>
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ReportView&quot;ExecutionViewMgrConnections_ReportView_P.htm" />
      <seealso cref="ReportView" />
      <seealso cref="&quot;ReportViewConnections&quot;ReportViewConnections.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectReportView(System.Object)">
      <summary>Connects a ReportView control to display the report of the selected execution in the ExecutionView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.ReportView property to obtain the ReportViewConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the ReportView control to connect to the ExecutionView Manager control.</param>
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ReportView&quot;ExecutionViewMgrConnections_ReportView_P.htm" />
      <seealso cref="ReportView" />
      <seealso cref="&quot;ReportViewConnections&quot;ReportViewConnections.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectExecutionList(System.Object)">
      <summary>Connects a ComboBox, ListBarPage, or ListBox control to the list of running executions. The connected item displays the executions and allows the user to select an execution in the ExecutionView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.ExecutionList property to obtain the ExecutionListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Use a ComboBox, ListBarPage, or ListBox to display the list of executions.</param>
      <seealso cref="ComboBox" />
      <seealso cref=".Execution" />
      <seealso cref="&quot;ExecutionListConnections&quot;ExecutionListConnections.htm" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectExecutionList(System.Object)">
      <summary>Connects a ComboBox, ListBarPage, or ListBox control to the list of running executions. The connected item displays the executions and allows the user to select an execution in the ExecutionView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.ExecutionList property to obtain the ExecutionListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Use a ComboBox, ListBarPage, or ListBox to display the list of executions.</param>
      <seealso cref="ComboBox" />
      <seealso cref=".Execution" />
      <seealso cref="&quot;ExecutionListConnections&quot;ExecutionListConnections.htm" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectCallStack(System.Object)">
      <summary>Connects a ComboBox, ListBarPage, or ListBox control to display the call stack of the paused execution.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.CallStack property to obtain the CallstackConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the control or element to which the call stack connection connects. Pass a ComboBox, ListBarPage, or ListBox.</param>
      <seealso cref="&quot;CallstackConnections&quot;CallstackConnections.htm" />
      <seealso cref="ComboBox" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.CallStack&quot;ExecutionViewMgrConnections_CallStack_P.htm" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectCallStack(System.Object)">
      <summary>Connects a ComboBox, ListBarPage, or ListBox control to display the call stack of the paused execution.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.CallStack property to obtain the CallstackConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the control or element to which the call stack connection connects. Pass a ComboBox, ListBarPage, or ListBox.</param>
      <seealso cref="&quot;CallstackConnections&quot;CallstackConnections.htm" />
      <seealso cref="ComboBox" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.CallStack&quot;ExecutionViewMgrConnections_CallStack_P.htm" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectThreadList(System.Object)">
      <summary>Connects the list of threads in the current execution to a control. The connected control displays the threads when the execution is paused and allows the user to specify a thread as the foreground thread.</summary>
      <remarks>You can connect a ComboBox, ListBarPage, or ListBox to this connection.
To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.ThreadList property to obtain the ThreadListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies a control or control element to connect to the ThreadListConnection.</param>
      <seealso cref="ComboBox" />
      <seealso cref="&quot;Execution.GetThread&quot;javascript:APILink('/RefTopics/Execution_GetThread_M.htm')" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ThreadList&quot;ExecutionViewMgrConnections_ThreadList_P.htm" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
      <seealso cref="&quot;ThreadListConnections&quot;ThreadListConnections.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectThreadList(System.Object)">
      <summary>Connects the list of threads in the current execution to a control. The connected control displays the threads when the execution is paused and allows the user to specify a thread as the foreground thread.</summary>
      <remarks>You can connect a ComboBox, ListBarPage, or ListBox to this connection.
To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.ThreadList property to obtain the ThreadListConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies a control or control element to connect to the ThreadListConnection.</param>
      <seealso cref="ComboBox" />
      <seealso cref="&quot;Execution.GetThread&quot;javascript:APILink('/RefTopics/Execution_GetThread_M.htm')" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ThreadList&quot;ExecutionViewMgrConnections_ThreadList_P.htm" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
      <seealso cref="&quot;ThreadListConnections&quot;ThreadListConnections.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectImage(System.Object,NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Connects an image source in an ExecutionView Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with an icon that describes an aspect of the current application state.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.Image property to obtain the ImageConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies a visible control or element of a visible control to which the caption source connects. Pass a StatusBarPane or Button.</param>
      <param name="imageSource">Specifies the type of image source to connect.</param>
      <seealso cref="Button" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgr.GetImageName" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.Image&quot;ExecutionViewMgrConnections_Image_P.htm" />
      <seealso cref="&quot;ImageConnections&quot;ImageConnections.htm" />
      <seealso cref="SequenceFileViewMgr.ConnectImage" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectImage(System.Object,NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Connects an image source in an ExecutionView Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with an icon that describes an aspect of the current application state.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.Image property to obtain the ImageConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies a visible control or element of a visible control to which the caption source connects. Pass a StatusBarPane or Button.</param>
      <param name="imageSource">Specifies the type of image source to connect.</param>
      <seealso cref="Button" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgr.GetImageName" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.Image&quot;ExecutionViewMgrConnections_Image_P.htm" />
      <seealso cref="&quot;ImageConnections&quot;ImageConnections.htm" />
      <seealso cref="SequenceFileViewMgr.ConnectImage" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectNumeric(System.Object,NationalInstruments.TestStand.Interop.UI.NumericSources)">
      <summary>Connects a numeric source in an ExecutionView Manager control to an element of a visible control. The connection automatically updates the visible control with the numeric information that describes an aspect of the current application state.</summary>
      <remarks>Use this method to display an execution progress bar in a StatusBar pane.
To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.Numeric property to obtain the NumericConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the element of a visible control to which the caption source connects. Pass a StatusBarPane.</param>
      <param name="numericSource">Specifies the type of numeric source from which to obtain a numeric value.</param>
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgr.GetNumericValue" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.Numeric&quot;ExecutionViewMgrConnections_Numeric_P.htm" />
      <seealso cref="&quot;NumericConnections&quot;NumericConnections.htm" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectNumeric(System.Object,NationalInstruments.TestStand.Interop.UI.NumericSources)">
      <summary>Connects a numeric source in an ExecutionView Manager control to an element of a visible control. The connection automatically updates the visible control with the numeric information that describes an aspect of the current application state.</summary>
      <remarks>Use this method to display an execution progress bar in a StatusBar pane.
To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the ExecutionViewMgrConnections.Numeric property to obtain the NumericConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the element of a visible control to which the caption source connects. Pass a StatusBarPane.</param>
      <param name="numericSource">Specifies the type of numeric source from which to obtain a numeric value.</param>
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgr.GetNumericValue" />
      <seealso cref="&quot;ExecutionViewMgrConnections&quot;ExecutionViewMgrConnections.htm" />
      <seealso cref="&quot;ExecutionViewMgrConnections.Numeric&quot;ExecutionViewMgrConnections_Numeric_P.htm" />
      <seealso cref="&quot;NumericConnections&quot;NumericConnections.htm" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.ExecutionChanged">
      <summary>Occurs when the ExecutionViewMgr.Execution property changes.</summary>
      <param name="exec">Specifies a new execution.</param>
      <seealso cref="ExecutionViewMgr.ConnectExecutionList" />
      <seealso cref="ExecutionViewMgr.Execution" />
      <seealso cref="ExecutionViewMgr.ReplaceExecutionOnClose" />
      <seealso cref="ExecutionViewMgr.RunStateChanged" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.RunStateChanged">
      <summary>Occurs when the run state of the execution changes or when the execution changes and the new execution has a different run state.</summary>
      <param name="newRunState">Specifies the new run state of the execution.</param>
      <seealso cref="ExecutionViewMgr.EndExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.EndExecution">
      <summary>Occurs when the selected execution ends.</summary>
      <param name="exec">Specifies the execution that has ended.</param>
      <seealso cref="ExecutionViewMgr.AbortExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminateExecution" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.TerminationStateChanged">
      <summary>Occurs when the termination state for the execution changes or when the execution changes and the new execution has a different termination state.</summary>
      <param name="newTermState">Specifies the new termination state of the execution.</param>
      <seealso cref="ExecutionViewMgr.TerminationState" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.SelectionChanged">
      <summary>Occurs when the set of selected steps changes.</summary>
      <seealso cref="ExecutionViewMgr.SelectedSteps" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.UserMessage">
      <summary>Occurs when the execution sends a user message.</summary>
      <remarks>User messages are messages with codes that are greater than or equal to <c>UIMsg_UserMessageBase</c>.
The ExecutionView Manager control automatically acknowledges the user message when this event completes. Therefore, you do not have to directly call the UIMessage.Acknowledge method from within this event.</remarks>
      <param name="uiMsg">Specifies the user-defined UIMessage object.</param>
      <seealso cref="&quot;UIMessageCodes&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.RefreshWindow">
      <summary>Occurs when TestStand sends a <c>UIMsg_RefreshWindows</c> message that requires a refresh of the selected execution.</summary>
      <param name="ctxt">Specifies the context of the steps to be refreshed. When the context is not passed in, the steps in the current context refresh.</param>
      <seealso cref="ApplicationMgr.RefreshWindows" />
      <seealso cref="ExecutionViewMgr.Refresh" />
      <seealso cref="SequenceFileViewMgr.RefreshWindow" />
      <seealso cref="&quot;UIMsg_RefreshWindows&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.Break">
      <summary>Occurs when the selected execution in the ExecutionView Manager control breaks as a result of a breakpoint or upon user request, such as when you call the ExecutionViewMgr.BreakExecution method.</summary>
      <remarks>To obtain the message that signaled this event, use the ApplicationMgr.CurrentUIMessage property.</remarks>
      <param name="exec">Specifies the paused execution.</param>
      <param name="thrd">Specifies the thread that generated the break notification.</param>
      <param name="ctxt">Specifies the current context of the execution.</param>
      <seealso cref="ApplicationMgr.CurrentUIMessage" />
      <seealso cref="ExecutionViewMgr.BreakExecution" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.Trace">
      <summary>Occurs when the execution sends a <c>UIMsg_Trace</c> message.</summary>
      <param name="exec">Specifies the current execution.</param>
      <param name="thrd">Specifies the current thread.</param>
      <param name="ctxt">Specifies the current context.</param>
      <seealso cref="&quot;UIMessageCodes&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.DisplayReport">
      <summary>Occurs when an execution has ended and has a report to display. This event is also called in response to <c>UIMsg_DisplayReport</c>.</summary>
      <remarks>Use this event to show the report for the execution.</remarks>
      <param name="exec">Specifies the execution that has the report to display.</param>
      <seealso cref="&quot;UIMessageCodes&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.GetImageName(NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Returns the current image name for an image source in an ExecutionView Manager control. Use the Images.FindImage method to acquire a reference to the image.</summary>
      <returns>The current image name for the image source you specify.</returns>
      <param name="imageSource">Specifies the type of image source from which to obtain an image name.</param>
      <seealso cref="ApplicationMgr.GetImageName" />
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
      <seealso cref="SequenceFileViewMgr.GetImageName" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.GetImageName(NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Returns the current image name for an image source in an ExecutionView Manager control. Use the Images.FindImage method to acquire a reference to the image.</summary>
      <returns>The current image name for the image source you specify.</returns>
      <param name="imageSource">Specifies the type of image source from which to obtain an image name.</param>
      <seealso cref="ApplicationMgr.GetImageName" />
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
      <seealso cref="SequenceFileViewMgr.GetImageName" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.GetNumericValue(NationalInstruments.TestStand.Interop.UI.NumericSources)">
      <summary>Returns the current numeric value for a numeric source in an ExecutionView Manager control.</summary>
      <returns>The current value for the numeric source you specify.</returns>
      <param name="numericSource">Specifies the type of numeric source from which to obtain a numeric value.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.GetNumericValue(NationalInstruments.TestStand.Interop.UI.NumericSources)">
      <summary>Returns the current numeric value for a numeric source in an ExecutionView Manager control.</summary>
      <returns>The current value for the numeric source you specify.</returns>
      <param name="numericSource">Specifies the type of numeric source from which to obtain a numeric value.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.TerminateExecution">
      <summary>Terminates the current execution if it is running.</summary>
      <remarks>The ExecutionView Manager control generates the ExecutionViewMgr.TerminationStateChanged event after calling this method and the ExecutionViewMgr.EndExecution event when the execution has ended.</remarks>
      <seealso cref="&quot;CommandKind_Terminate&quot;CommandKinds.htm" />
      <seealso cref="&quot;CommandKind_TerminateRestart&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.EndExecution" />
      <seealso cref="ExecutionViewMgr.RestartExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminationStateChanged" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.TerminateExecution">
      <summary>Terminates the current execution if it is running.</summary>
      <remarks>The ExecutionView Manager control generates the ExecutionViewMgr.TerminationStateChanged event after calling this method and the ExecutionViewMgr.EndExecution event when the execution has ended.</remarks>
      <seealso cref="&quot;CommandKind_Terminate&quot;CommandKinds.htm" />
      <seealso cref="&quot;CommandKind_TerminateRestart&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.EndExecution" />
      <seealso cref="ExecutionViewMgr.RestartExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminationStateChanged" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ResumeExecution">
      <summary>Resumes the paused execution.</summary>
      <seealso cref="&quot;CommandKind_BreakResume&quot;CommandKinds.htm" />
      <seealso cref="&quot;CommandKind_Resume&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.Break" />
      <seealso cref="ExecutionViewMgr.RunState" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ResumeExecution">
      <summary>Resumes the paused execution.</summary>
      <seealso cref="&quot;CommandKind_BreakResume&quot;CommandKinds.htm" />
      <seealso cref="&quot;CommandKind_Resume&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.Break" />
      <seealso cref="ExecutionViewMgr.RunState" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.RestartExecution">
      <summary>Restarts the stopped execution.</summary>
      <seealso cref="&quot;CommandKind_Restart&quot;CommandKinds.htm" />
      <seealso cref="&quot;CommandKind_TerminateRestart&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.AbortExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminateExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.RestartExecution">
      <summary>Restarts the stopped execution.</summary>
      <seealso cref="&quot;CommandKind_Restart&quot;CommandKinds.htm" />
      <seealso cref="&quot;CommandKind_TerminateRestart&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.AbortExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminateExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.AbortExecution">
      <summary>Attempts to abort the current execution if it is running.</summary>
      <remarks>The ExecutionView Manager control generates the ExecutionViewMgr.TerminationStateChanged event after calling this method and then generates the ExecutionViewMgr.EndExecution event when the execution has ended.</remarks>
      <seealso cref="&quot;CommandKind_Abort&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.EndExecution" />
      <seealso cref="ExecutionViewMgr.RestartExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminationStateChanged" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.AbortExecution">
      <summary>Attempts to abort the current execution if it is running.</summary>
      <remarks>The ExecutionView Manager control generates the ExecutionViewMgr.TerminationStateChanged event after calling this method and then generates the ExecutionViewMgr.EndExecution event when the execution has ended.</remarks>
      <seealso cref="&quot;CommandKind_Abort&quot;CommandKinds.htm" />
      <seealso cref="ExecutionViewMgr.EndExecution" />
      <seealso cref="ExecutionViewMgr.RestartExecution" />
      <seealso cref="ExecutionViewMgr.RunState" />
      <seealso cref="ExecutionViewMgr.TerminationStateChanged" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.ContextChanged">
      <summary>Occurs when the ExecutionViewMgr.SequenceContext property changes programmatically or when a control connected to a CallStackConnection changes the property.</summary>
      <param name="ctxt">Specifies the current sequence context of the ExecutionView Manager control.</param>
      <seealso cref="&quot;CallStackConnection&quot;CallStackConnection.htm" />
      <seealso cref="ExecutionViewMgr.SequenceContext" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.ThreadChanged">
      <summary>Occurs when the ExecutionViewMgr.Thread property changes programmatically or when a control connected to a ThreadListConnection changes the property.</summary>
      <param name="thrd">Specifies the current foreground thread of the execution in the ExecutionView Manager control.</param>
      <seealso cref="ExecutionViewMgr.Thread" />
      <seealso cref="&quot;ThreadListConnection&quot;ThreadListConnection.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.StepGroupMode">
      <summary>Specifies whether the SequenceView controls that connect to the ExecutionView Manager control display steps in all the step groups or only steps in the current step group.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.StepGroupMode">
      <summary>Specifies whether the SequenceView controls that connect to the ExecutionView Manager control display steps in all the step groups or only steps in the current step group.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.RefreshStepEx(NationalInstruments.TestStand.Interop.API.StepGroups,System.Int32)">
      <summary>Refreshes a step in all connected SequenceView controls.</summary>
      <remarks>Typically, you do not call this method unless you change the state of the step directly using the TestStand API.</remarks>
      <param name="group">Specifies a particular step group.</param>
      <param name="stepIndex">Specifies the zero-based index in the step group of the step to refresh. Pass <c>-1</c> to refresh all the steps in all groups in the connected SequenceView controls.</param>
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.RefreshStepEx(NationalInstruments.TestStand.Interop.API.StepGroups,System.Int32)">
      <summary>Refreshes a step in all connected SequenceView controls.</summary>
      <remarks>Typically, you do not call this method unless you change the state of the step directly using the TestStand API.</remarks>
      <param name="group">Specifies a particular step group.</param>
      <param name="stepIndex">Specifies the zero-based index in the step group of the step to refresh. Pass <c>-1</c> to refresh all the steps in all groups in the connected SequenceView controls.</param>
      <seealso cref="SequenceView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.NewEditContext">
      <summary>Returns a <c>SequenceContext</c> object that has a <c>Step</c> property that has only properties common to all the currently selected steps. Use the SequenceContext.GetMultipleValues method to determine whether the values of the <c>Step</c> subproperties are common across all the currently selected steps.</summary>
      <seealso cref="&quot;Engine.NewEditContext&quot;javascript:APILink('/RefTopics/Engine_NewEditContext_M.htm')" />
      <seealso cref="&quot;SequenceContext.GetMultipleValues&quot;javascript:APILink('/RefTopics/SequenceContext_GetMultipleValues_M.htm')" />
      <seealso cref="&quot;SequenceContext.SetMultipleValues&quot;javascript:APILink('/RefTopics/SequenceContext_SetMultipleValues_M.htm')" />
      <seealso cref="SequenceFileViewMgr.NewEditContext" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.NewEditContext">
      <summary>Returns a <c>SequenceContext</c> object that has a <c>Step</c> property that has only properties common to all the currently selected steps. Use the SequenceContext.GetMultipleValues method to determine whether the values of the <c>Step</c> subproperties are common across all the currently selected steps.</summary>
      <seealso cref="&quot;Engine.NewEditContext&quot;javascript:APILink('/RefTopics/Engine_NewEditContext_M.htm')" />
      <seealso cref="&quot;SequenceContext.GetMultipleValues&quot;javascript:APILink('/RefTopics/SequenceContext_GetMultipleValues_M.htm')" />
      <seealso cref="&quot;SequenceContext.SetMultipleValues&quot;javascript:APILink('/RefTopics/SequenceContext_SetMultipleValues_M.htm')" />
      <seealso cref="SequenceFileViewMgr.NewEditContext" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.ConnectVariables(System.Object)">
      <summary>Connects a VariablesView control to display the current sequence context of the ExecutionView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the  ExecutionViewMgrConnections.Variables property to obtain the VariablesConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the reference to a VariablesView control that displays the current sequence context.</param>
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgrConnections" />
      <seealso cref="ExecutionViewMgrConnections.Variables" />
      <seealso cref="VariablesConnections" />
      <seealso cref="VariablesView" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.ConnectVariables(System.Object)">
      <summary>Connects a VariablesView control to display the current sequence context of the ExecutionView Manager control.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ExecutionViewMgrConnections object from the ExecutionViewMgr.Connections property. Then, access the  ExecutionViewMgrConnections.Variables property to obtain the VariablesConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected to this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the reference to a VariablesView control that displays the current sequence context.</param>
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="ExecutionViewMgrConnections" />
      <seealso cref="ExecutionViewMgrConnections.Variables" />
      <seealso cref="VariablesConnections" />
      <seealso cref="VariablesView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IExecutionViewMgr.SelectedPropertyObjects">
      <summary>Returns a collection of selected property objects.</summary>
      <remarks>Use this collection to obtain the selected property objects or change the selected property objects for the selected execution. TestStand User Interface Controls connected to an ExecutionView Manager control, such as the VariablesView control, automatically set this property when you select variables and properties. The ExecutionView Manager control also generates a ExecutionViewMgr.PropertyObjectSelectionChanged event when this property changes.</remarks>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.PropertyObjectSelectionChanged" />
      <seealso cref="SelectedPropertyObjects" />
      <seealso cref="VariablesView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExecutionViewMgrClass.SelectedPropertyObjects">
      <summary>Returns a collection of selected property objects.</summary>
      <remarks>Use this collection to obtain the selected property objects or change the selected property objects for the selected execution. TestStand User Interface Controls connected to an ExecutionView Manager control, such as the VariablesView control, automatically set this property when you select variables and properties. The ExecutionView Manager control also generates a ExecutionViewMgr.PropertyObjectSelectionChanged event when this property changes.</remarks>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.PropertyObjectSelectionChanged" />
      <seealso cref="SelectedPropertyObjects" />
      <seealso cref="VariablesView" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ExecutionViewMgrEvents_Event.PropertyObjectSelectionChanged">
      <summary>Occurs when the selected property objects change. For example, this event is generated when you change the selection in a VariablesView control that connects to the ExecutionView Manager control or when you programmatically change the contents of the SelectedPropertyObjects collection.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref=".SelectedPropertyObjects" />
      <seealso cref="SequenceFileViewMgr.PropertyObjectSelectionChanged" />
      <seealso cref="VariablesView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ApplicationMgr">
      <summary>The Application Manager control performs the following basic operations, which facilitate using the TestStand Engine in an application:<para><para>&#160;&#160;&#160;&#160;* Processes command-line arguments.</para><para>&#160;&#160;&#160;&#160;* Maintains an application configuration file.</para><para>&#160;&#160;&#160;&#160;* Initializes and shuts down the TestStand Engine.</para><para>&#160;&#160;&#160;&#160;* Logs users in and out.</para><para>&#160;&#160;&#160;&#160;* Loads and unloads files.</para><para>&#160;&#160;&#160;&#160;* Launches executions.</para><para>&#160;&#160;&#160;&#160;* Tracks existing sequence files and executions.</para><para>&#160;&#160;&#160;&#160;* Manages licensing.</para></para>
An application that uses the TestStand User Interface Controls must have a single Application Manager control that exists for the duration of the application.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IApplicationMgr">
      <summary>The Application Manager control performs the following basic operations, which facilitate using the TestStand Engine in an application:<para><para>&#160;&#160;&#160;&#160;* Processes command-line arguments.</para><para>&#160;&#160;&#160;&#160;* Maintains an application configuration file.</para><para>&#160;&#160;&#160;&#160;* Initializes and shuts down the TestStand Engine.</para><para>&#160;&#160;&#160;&#160;* Logs users in and out.</para><para>&#160;&#160;&#160;&#160;* Loads and unloads files.</para><para>&#160;&#160;&#160;&#160;* Launches executions.</para><para>&#160;&#160;&#160;&#160;* Tracks existing sequence files and executions.</para><para>&#160;&#160;&#160;&#160;* Manages licensing.</para></para>
An application that uses the TestStand User Interface Controls must have a single Application Manager control that exists for the duration of the application.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass">
      <summary>The Application Manager control performs the following basic operations, which facilitate using the TestStand Engine in an application:<para><para>&#160;&#160;&#160;&#160;* Processes command-line arguments.</para><para>&#160;&#160;&#160;&#160;* Maintains an application configuration file.</para><para>&#160;&#160;&#160;&#160;* Initializes and shuts down the TestStand Engine.</para><para>&#160;&#160;&#160;&#160;* Logs users in and out.</para><para>&#160;&#160;&#160;&#160;* Loads and unloads files.</para><para>&#160;&#160;&#160;&#160;* Launches executions.</para><para>&#160;&#160;&#160;&#160;* Tracks existing sequence files and executions.</para><para>&#160;&#160;&#160;&#160;* Manages licensing.</para></para>
An application that uses the TestStand User Interface Controls must have a single Application Manager control that exists for the duration of the application.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.UserData">
      <summary>Stores user-specific data.</summary>
      <remarks>User data is cleared when the application shuts down.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.UserData">
      <summary>Stores user-specific data.</summary>
      <remarks>User data is cleared when the application shuts down.</remarks>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetModelFile(NationalInstruments.TestStand.Interop.API.SequenceFile,System.Boolean)">
      <summary>This method returns the process model sequence file the Application Manager control loads for a specified sequence file.</summary>
      <param name="clientFile">Specifies the sequence file with the associated process model sequence file you want. When you pass <c>NULL</c>, this method returns the station model file.</param>
      <param name="loadIfNotAlreadyLoaded">Pass <c>True</c> to force the Application Manager control to load the model file if the Application Manager control has not already done so. When you pass <c>False</c> and the Application Manager control has not already loaded the model file, this method returns <c>NULL</c>.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetModelFile(NationalInstruments.TestStand.Interop.API.SequenceFile,System.Boolean)">
      <summary>This method returns the process model sequence file the Application Manager control loads for a specified sequence file.</summary>
      <param name="clientFile">Specifies the sequence file with the associated process model sequence file you want. When you pass <c>NULL</c>, this method returns the station model file.</param>
      <param name="loadIfNotAlreadyLoaded">Pass <c>True</c> to force the Application Manager control to load the model file if the Application Manager control has not already done so. When you pass <c>False</c> and the Application Manager control has not already loaded the model file, this method returns <c>NULL</c>.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ConnectAdapterList(System.Object)">
      <summary>Connects the list of adapters to a ComboBox, ListBarPage, or ListBox control. The connected control shows the adapters and allows the user to select an adapter as the default adapter of the TestStand Engine.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ApplicationMgrConnections object from the ApplicationMgr.Connections property. Then, access the ApplicationMgrConnections.AdapterList property to obtain the AdapterListConnections collection.</remarks>
      <param name="uiObj">Specifies the visible control or element of a visible control to display the list of adapters. Pass a ComboBox, ListBarPage, or ListBox.</param>
      <seealso cref="AdapterListConnections" />
      <seealso cref="ApplicationMgr.Connections" />
      <seealso cref="ApplicationMgrConnections" />
      <seealso cref="ApplicationMgrConnections.AdapterList" />
      <seealso cref="ComboBox" />
      <seealso cref="&quot;Engine.DefaultAdapter&quot;javascript:APILink('/RefTopics/Engine_DefaultAdapter_P.htm')" />
      <seealso cref="&quot;Engine.DefaultAdapterIndex&quot;javascript:APILink('/RefTopics/Engine_DefaultAdapterIndex_P.htm')" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ConnectAdapterList(System.Object)">
      <summary>Connects the list of adapters to a ComboBox, ListBarPage, or ListBox control. The connected control shows the adapters and allows the user to select an adapter as the default adapter of the TestStand Engine.</summary>
      <remarks>To disconnect an existing connection, you must first obtain the ApplicationMgrConnections object from the ApplicationMgr.Connections property. Then, access the ApplicationMgrConnections.AdapterList property to obtain the AdapterListConnections collection.</remarks>
      <param name="uiObj">Specifies the visible control or element of a visible control to display the list of adapters. Pass a ComboBox, ListBarPage, or ListBox.</param>
      <seealso cref="AdapterListConnections" />
      <seealso cref="ApplicationMgr.Connections" />
      <seealso cref="ApplicationMgrConnections" />
      <seealso cref="ApplicationMgrConnections.AdapterList" />
      <seealso cref="ComboBox" />
      <seealso cref="&quot;Engine.DefaultAdapter&quot;javascript:APILink('/RefTopics/Engine_DefaultAdapter_P.htm')" />
      <seealso cref="&quot;Engine.DefaultAdapterIndex&quot;javascript:APILink('/RefTopics/Engine_DefaultAdapterIndex_P.htm')" />
      <seealso cref="ListBarPage" />
      <seealso cref="ListBox" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.Refresh(System.Int32)">
      <summary>Refreshes the specified connected controls.</summary>
      <param name="opts">Specifies any combination of RefreshOptions.</param>
      <seealso cref="ApplicationMgr.RefreshAllViewMgrs" />
      <seealso cref="ExecutionViewMgr.Refresh" />
      <seealso cref="RefreshOptions" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.Refresh(System.Int32)">
      <summary>Refreshes the specified connected controls.</summary>
      <param name="opts">Specifies any combination of RefreshOptions.</param>
      <seealso cref="ApplicationMgr.RefreshAllViewMgrs" />
      <seealso cref="ExecutionViewMgr.Refresh" />
      <seealso cref="RefreshOptions" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.RefreshFile(NationalInstruments.TestStand.Interop.API.PropertyObjectFile,System.Int32)">
      <summary>Performs a refresh operation on every SequenceFileView Manager control that currently displays the specified file.</summary>
      <remarks>
</remarks>
      <param name="file">Specifies the PropertyObjectFile reference for a TestStand sequence file.</param>
      <param name="opts">Do not pass a value or pass <c>RefreshOption_All (0xFFFFFFFF)</c> to this reserved parameter.</param>
      <seealso cref="&quot;PropertyObjectFile&quot;javascript:APILink('/RefTopics/PropertyObjectFile.htm')" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.RefreshFile(NationalInstruments.TestStand.Interop.API.PropertyObjectFile,System.Int32)">
      <summary>Performs a refresh operation on every SequenceFileView Manager control that currently displays the specified file.</summary>
      <remarks>
</remarks>
      <param name="file">Specifies the PropertyObjectFile reference for a TestStand sequence file.</param>
      <param name="opts">Do not pass a value or pass <c>RefreshOption_All (0xFFFFFFFF)</c> to this reserved parameter.</param>
      <seealso cref="&quot;PropertyObjectFile&quot;javascript:APILink('/RefTopics/PropertyObjectFile.htm')" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ReloadConfigFile">
      <summary>Reloads the application configuration file from disk.</summary>
      <remarks>Unlike sequences files, the application configuration file does not automatically reload when an external application, such as a source control system, modifies the file. You can call this method to force the configuration file to reload.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ReloadConfigFile">
      <summary>Reloads the application configuration file from disk.</summary>
      <remarks>Unlike sequences files, the application configuration file does not automatically reload when an external application, such as a source control system, modifies the file. You can call this method to force the configuration file to reload.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.LoginRunning">
      <summary>Returns <c>True</c> when the Application Manager control is running the LoginLogout Front-End callback sequence to log in a user.</summary>
      <seealso cref="ApplicationMgr.LogoutRunning" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.LoginRunning">
      <summary>Returns <c>True</c> when the Application Manager control is running the LoginLogout Front-End callback sequence to log in a user.</summary>
      <seealso cref="ApplicationMgr.LogoutRunning" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.LogoutRunning">
      <summary>Returns <c>True</c> when the Application Manager control is running LoginLogout Front-End callback sequence to log out a user.</summary>
      <seealso cref="ApplicationMgr.LoginRunning" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.LogoutRunning">
      <summary>Returns <c>True</c> when the Application Manager control is running LoginLogout Front-End callback sequence to log out a user.</summary>
      <seealso cref="ApplicationMgr.LoginRunning" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.UndoStack">
      <summary>Assign an UndoStack to this property to provide an UndoStack for <c>CommandKind_Edit_Undo</c> and <c>CommandKind_Edit_Redo</c> commands you connect to the Application Manager control.</summary>
      <remarks>This property is useful for creating undo and redo commands for TestStand files that are not sequence files such the station globals file and the users file.</remarks>
      <seealso cref="CommandKinds" />
      <seealso cref="&quot;Engine.NewUndoStack&quot;javascript:APILink('/RefTopics/Engine_NewUndoStack_M.htm')" />
      <seealso cref="SequenceFileViewMgr.UndoStack" />
      <seealso cref="&quot;UndoStack&quot;javascript:APILink('/RefTopics/UndoStack.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.UndoStack">
      <summary>Assign an UndoStack to this property to provide an UndoStack for <c>CommandKind_Edit_Undo</c> and <c>CommandKind_Edit_Redo</c> commands you connect to the Application Manager control.</summary>
      <remarks>This property is useful for creating undo and redo commands for TestStand files that are not sequence files such the station globals file and the users file.</remarks>
      <seealso cref="CommandKinds" />
      <seealso cref="&quot;Engine.NewUndoStack&quot;javascript:APILink('/RefTopics/Engine_NewUndoStack_M.htm')" />
      <seealso cref="SequenceFileViewMgr.UndoStack" />
      <seealso cref="&quot;UndoStack&quot;javascript:APILink('/RefTopics/UndoStack.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.IsEditor">
      <summary>Specifies whether the TestStand User Interface (UI) Controls allow the user to create and edit sequence files. Set this property to <c>False</c> for a non-editing user interface application. Set this property to <c>True</c> for an application that edits and saves sequence files.</summary>
      <remarks>When you set this property to <c>True</c> and you do not have an activated license that allows editing, TestStand generates a prompt to activate a license. When you do not have an appropriate license, TestStand generates an error. You can set or clear this property with the <c>/editor</c> or <c>/operatorinterface</c> command-line flags. To avoid overriding a value you specify on the command line, set this property to a default value for the application before the application evaluates the command-line arguments. The application evaluates command-line arguments when you call the ApplicationMgr.Start method. Use the ApplicationMgr.CommandLineCanChangeEditMode property to control whether the application evaluates the <c>/editor</c> or <c>/operatorinterface</c> command-line flags.
When you set this property in the designer or set it before you call the <c>ApplicationMgr.Start</c> method, TestStand verifies the value when you call the <c>ApplicationMgr.Start</c> method, which returns an error when this property is <c>True</c> and cannot obtain a license that permits editing. When you set this property after calling the <c>ApplicationMgr.Start</c> method, the Application Manager control might prompt to activate a license.</remarks>
      <seealso cref="&quot;Activating Your Software with the NI License Manager&quot;javascript:TSHelpLink('/NITopics/nilm.html')" />
      <seealso cref="ApplicationMgr.CommandLineCanChangeEditMode" />
      <seealso cref="ApplicationMgr.EditModeShortcutKey" />
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.IsEditor">
      <summary>Specifies whether the TestStand User Interface (UI) Controls allow the user to create and edit sequence files. Set this property to <c>False</c> for a non-editing user interface application. Set this property to <c>True</c> for an application that edits and saves sequence files.</summary>
      <remarks>When you set this property to <c>True</c> and you do not have an activated license that allows editing, TestStand generates a prompt to activate a license. When you do not have an appropriate license, TestStand generates an error. You can set or clear this property with the <c>/editor</c> or <c>/operatorinterface</c> command-line flags. To avoid overriding a value you specify on the command line, set this property to a default value for the application before the application evaluates the command-line arguments. The application evaluates command-line arguments when you call the ApplicationMgr.Start method. Use the ApplicationMgr.CommandLineCanChangeEditMode property to control whether the application evaluates the <c>/editor</c> or <c>/operatorinterface</c> command-line flags.
When you set this property in the designer or set it before you call the <c>ApplicationMgr.Start</c> method, TestStand verifies the value when you call the <c>ApplicationMgr.Start</c> method, which returns an error when this property is <c>True</c> and cannot obtain a license that permits editing. When you set this property after calling the <c>ApplicationMgr.Start</c> method, the Application Manager control might prompt to activate a license.</remarks>
      <seealso cref="&quot;Activating Your Software with the NI License Manager&quot;javascript:TSHelpLink('/NITopics/nilm.html')" />
      <seealso cref="ApplicationMgr.CommandLineCanChangeEditMode" />
      <seealso cref="ApplicationMgr.EditModeShortcutKey" />
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.EditReadOnlyFiles">
      <summary>Specifies whether the TestStand User Interface (UI) Controls allow editing of read-only files.</summary>
      <remarks>The value of this property persists in the application configuration file.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.EditReadOnlyFiles">
      <summary>Specifies whether the TestStand User Interface (UI) Controls allow editing of read-only files.</summary>
      <remarks>The value of this property persists in the application configuration file.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.MakeStepNamesUnique">
      <summary>When this property is <c>True</c>, the TestStand User Interface Controls ensure that steps you insert into a sequence have names that are unique within the sequence.</summary>
      <remarks>The value of this property persists in the application configuration file.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.MakeStepNamesUnique">
      <summary>When this property is <c>True</c>, the TestStand User Interface Controls ensure that steps you insert into a sequence have names that are unique within the sequence.</summary>
      <remarks>The value of this property persists in the application configuration file.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.PromptForOverwrite">
      <summary>Specifies whether the Application Manager control makes a backup of a file when you save a sequence file over an existing file that has an older or newer format. When this property is <c>PerformActionOption_Yes</c>, the Application Manager control backs up the existing file before saving it. When this property is <c>PerformActionOption_No</c>, the Application Manager control saves over the existing file without backing it up. When this property is <c>PerformActionOption_Prompt</c>, the Application Manager control prompts you to choose whether to back up the existing file.</summary>
      <remarks>The value of this property persists in the application configuration file.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.PromptForOverwrite">
      <summary>Specifies whether the Application Manager control makes a backup of a file when you save a sequence file over an existing file that has an older or newer format. When this property is <c>PerformActionOption_Yes</c>, the Application Manager control backs up the existing file before saving it. When this property is <c>PerformActionOption_No</c>, the Application Manager control saves over the existing file without backing it up. When this property is <c>PerformActionOption_Prompt</c>, the Application Manager control prompts you to choose whether to back up the existing file.</summary>
      <remarks>The value of this property persists in the application configuration file.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.SaveOnClose">
      <summary>Specifies whether the Application Manager control saves a modified file when you close the modified file. When this property is <c>PerformActionOption_Yes</c>, the Application Manager control saves the file. When this property is <c>PerformActionOption_No</c>, the Application Manager control discards the file without saving the file. When this property is <c>PerformActionOption_Prompt</c>, the Application Manager control prompts you to choose whether to save the file.</summary>
      <remarks>The value of this property persists in the application configuration file.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.SaveOnClose">
      <summary>Specifies whether the Application Manager control saves a modified file when you close the modified file. When this property is <c>PerformActionOption_Yes</c>, the Application Manager control saves the file. When this property is <c>PerformActionOption_No</c>, the Application Manager control discards the file without saving the file. When this property is <c>PerformActionOption_Prompt</c>, the Application Manager control prompts you to choose whether to save the file.</summary>
      <remarks>The value of this property persists in the application configuration file.</remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.AutomaticallyReloadModifiedFiles">
      <summary>Specifies when the Application Manager control reloads sequence files that you modified on disk.</summary>
      <remarks>The Application Manager control generates the ApplicationMgr.QueryReloadSequenceFile event when the Application Manager control wants to reload the sequence file.</remarks>
      <seealso cref="&quot;ApplicationMgr.QueryReloadSequenceFile&quot;ApplicationMgr_QueryReloadSequenceFile_E.htm" />
      <seealso cref="ApplicationMgr.ReloadModifiedFilesInterval" />
      <seealso cref="ApplicationMgr.ReloadModifiedSequenceFiles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.AutomaticallyReloadModifiedFiles">
      <summary>Specifies when the Application Manager control reloads sequence files that you modified on disk.</summary>
      <remarks>The Application Manager control generates the ApplicationMgr.QueryReloadSequenceFile event when the Application Manager control wants to reload the sequence file.</remarks>
      <seealso cref="&quot;ApplicationMgr.QueryReloadSequenceFile&quot;ApplicationMgr_QueryReloadSequenceFile_E.htm" />
      <seealso cref="ApplicationMgr.ReloadModifiedFilesInterval" />
      <seealso cref="ApplicationMgr.ReloadModifiedSequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.Start">
      <summary>Initializes the user interface, acquires the necessary license, and runs the LoginLogout Front-End callback sequence, if the ApplicationMgr.LoginOnStart property is <c>True</c>.</summary>
      <remarks>Call this method after you create the user interface window. If the application edits sequence files, set the ApplicationMgr.IsEditor property before calling this method. This method calls the Engine.AcquireLicense method to request the proper license for the application to start.
<para>Note: You cannot use the user interface until you call this method.</para></remarks>
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.IsStarted" />
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="&quot;Engine.AcquireLicense&quot;javascript:APILink('/RefTopics/Engine_AcquireLicense_M.htm')" />
      <seealso cref="&#xD;&#xA;&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.Start">
      <summary>Initializes the user interface, acquires the necessary license, and runs the LoginLogout Front-End callback sequence, if the ApplicationMgr.LoginOnStart property is <c>True</c>.</summary>
      <remarks>Call this method after you create the user interface window. If the application edits sequence files, set the ApplicationMgr.IsEditor property before calling this method. This method calls the Engine.AcquireLicense method to request the proper license for the application to start.
<para>Note: You cannot use the user interface until you call this method.</para></remarks>
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.IsStarted" />
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="&quot;Engine.AcquireLicense&quot;javascript:APILink('/RefTopics/Engine_AcquireLicense_M.htm')" />
      <seealso cref="&#xD;&#xA;&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.Shutdown">
      <summary>Closes opened sequence files and executions. This method also releases the TestStand Engine.</summary>
      <remarks>Call this method before the parent window of the Application Manager control is destroyed. When this method returns <c>True</c>, it is safe to destroy the parent window. When this method returns <c>False</c>, do not destroy the window until the Application Manager control generates an ApplicationMgrExitApplication event. When you cancel the TestStand Engine shutdown procedure, the Application Manager control generates the ApplicationMgrShutDownCancelled event.</remarks>
      <seealso cref="ApplicationMgr.ExitApplication" />
      <seealso cref="ApplicationMgr.QueryShutdown" />
      <seealso cref="ApplicationMgr.ShutDownCancelled" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.Shutdown">
      <summary>Closes opened sequence files and executions. This method also releases the TestStand Engine.</summary>
      <remarks>Call this method before the parent window of the Application Manager control is destroyed. When this method returns <c>True</c>, it is safe to destroy the parent window. When this method returns <c>False</c>, do not destroy the window until the Application Manager control generates an ApplicationMgrExitApplication event. When you cancel the TestStand Engine shutdown procedure, the Application Manager control generates the ApplicationMgrShutDownCancelled event.</remarks>
      <seealso cref="ApplicationMgr.ExitApplication" />
      <seealso cref="ApplicationMgr.QueryShutdown" />
      <seealso cref="ApplicationMgr.ShutDownCancelled" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.Login">
      <summary>Logs in the user by running the LoginLogout Front-End callback sequence. This method does not wait for the callback to execute. Use the ApplicationMgr.UserChanged event to determine whether the login was successful.</summary>
      <seealso cref="ApplicationMgr.LoginLogoutRunning" />
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.Logout" />
      <seealso cref="ApplicationMgr.UserChanged" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.Login">
      <summary>Logs in the user by running the LoginLogout Front-End callback sequence. This method does not wait for the callback to execute. Use the ApplicationMgr.UserChanged event to determine whether the login was successful.</summary>
      <seealso cref="ApplicationMgr.LoginLogoutRunning" />
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.Logout" />
      <seealso cref="ApplicationMgr.UserChanged" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.Logout">
      <summary>Logs out the current user by running the LoginLogout Front-End callback sequence. This method does not wait for the callback to execute. Use the ApplicationMgr.UserChanged event to determine whether the logout was successful.</summary>
      <seealso cref="ApplicationMgr.Login" />
      <seealso cref="ApplicationMgr.LoginLogoutRunning" />
      <seealso cref="ApplicationMgr.UserChanged" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.Logout">
      <summary>Logs out the current user by running the LoginLogout Front-End callback sequence. This method does not wait for the callback to execute. Use the ApplicationMgr.UserChanged event to determine whether the logout was successful.</summary>
      <seealso cref="ApplicationMgr.Login" />
      <seealso cref="ApplicationMgr.LoginLogoutRunning" />
      <seealso cref="ApplicationMgr.UserChanged" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CloseAllSequenceFiles">
      <summary>Closes all open sequence files.</summary>
      <remarks>The Application Manager control attempts to close all sequence files by generating a QueryCloseSequenceFile event for each sequence file in the SequenceFiles collection. The <c>ApplicationMgr.QueryCloseSequenceFile</c> event confirms whether to release the file and remove the file from the <c>SequenceFiles</c> collection. When a sequence file is running in an execution or when other references to the sequence file exist, TestStand does not immediately unload the sequence file from memory.</remarks>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.QueryCloseSequenceFile" />
      <seealso cref="ApplicationMgr.SequenceFileClosing" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CloseAllSequenceFiles">
      <summary>Closes all open sequence files.</summary>
      <remarks>The Application Manager control attempts to close all sequence files by generating a QueryCloseSequenceFile event for each sequence file in the SequenceFiles collection. The <c>ApplicationMgr.QueryCloseSequenceFile</c> event confirms whether to release the file and remove the file from the <c>SequenceFiles</c> collection. When a sequence file is running in an execution or when other references to the sequence file exist, TestStand does not immediately unload the sequence file from memory.</remarks>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.QueryCloseSequenceFile" />
      <seealso cref="ApplicationMgr.SequenceFileClosing" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.OpenSequenceFile(System.String)">
      <summary>Opens a sequence file.</summary>
      <remarks>This method adds the sequence file to the SequenceFiles collection and generates the ApplicationMgr.SequenceFileOpened and ApplicationMgr.DisplaySequenceFile events.</remarks>
      <returns>Returns the opened sequence file, when successful. When a type conflict occurs when loading the file and the conflict prevents TestStand from opening the file, this method returns <c>NULL</c>. When an error occurs while opening the file, this method throws an exception. </returns>
      <param name="sequenceFilePath">Specifies the path of the sequence file to load. When you do not pass an absolute path, this method searches for the file using the TestStand search directory paths.</param>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.DisplaySequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFileDialog" />
      <seealso cref="ApplicationMgr.OpenSequenceFilesDialog" />
      <seealso cref="ApplicationMgr.SequenceFileOpened" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.OpenSequenceFile(System.String)">
      <summary>Opens a sequence file.</summary>
      <remarks>This method adds the sequence file to the SequenceFiles collection and generates the ApplicationMgr.SequenceFileOpened and ApplicationMgr.DisplaySequenceFile events.</remarks>
      <returns>Returns the opened sequence file, when successful. When a type conflict occurs when loading the file and the conflict prevents TestStand from opening the file, this method returns <c>NULL</c>. When an error occurs while opening the file, this method throws an exception. </returns>
      <param name="sequenceFilePath">Specifies the path of the sequence file to load. When you do not pass an absolute path, this method searches for the file using the TestStand search directory paths.</param>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.DisplaySequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFileDialog" />
      <seealso cref="ApplicationMgr.OpenSequenceFilesDialog" />
      <seealso cref="ApplicationMgr.SequenceFileOpened" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CloseSequenceFile(NationalInstruments.TestStand.Interop.API.SequenceFile)">
      <summary>Closes a sequence file.</summary>
      <remarks>The Application Manager control attempts to close the sequence file by generating a QueryCloseSequenceFile event. The <c>ApplicationMgr.QueryCloseSequenceFile</c> event confirms whether to release the file and remove the file from the SequenceFiles collection. When the sequence file is running in an execution or when other references to the sequence file exist, TestStand does not immediately unload the file from memory.</remarks>
      <returns>Returns <c>True</c> if the sequence file was closed.</returns>
      <param name="file">Specifies the sequence file to close.</param>
      <seealso cref="ApplicationMgr.QueryCloseSequenceFile" />
      <seealso cref="ApplicationMgr.SequenceFileClosing" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CloseSequenceFile(NationalInstruments.TestStand.Interop.API.SequenceFile)">
      <summary>Closes a sequence file.</summary>
      <remarks>The Application Manager control attempts to close the sequence file by generating a QueryCloseSequenceFile event. The <c>ApplicationMgr.QueryCloseSequenceFile</c> event confirms whether to release the file and remove the file from the SequenceFiles collection. When the sequence file is running in an execution or when other references to the sequence file exist, TestStand does not immediately unload the file from memory.</remarks>
      <returns>Returns <c>True</c> if the sequence file was closed.</returns>
      <param name="file">Specifies the sequence file to close.</param>
      <seealso cref="ApplicationMgr.QueryCloseSequenceFile" />
      <seealso cref="ApplicationMgr.SequenceFileClosing" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.OpenSequenceFileDialog">
      <summary>Launches the Open File dialog box.</summary>
      <remarks>This method adds the sequence file to the SequenceFiles collection and generates the ApplicationMgr.SequenceFileOpened and ApplicationMgr.DisplaySequenceFile events.</remarks>
      <returns>Returns the opened sequence file if you open a file. This method returns <c>NULL</c> if you cancel the Open File dialog box.</returns>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.DisplaySequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFilesDialog" />
      <seealso cref="ApplicationMgr.SequenceFileOpened" />
      <seealso cref="&quot;Open File dialog box&quot;javascript:RefLink('/InfoTopics/DB_Open_File.htm')" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.OpenSequenceFileDialog">
      <summary>Launches the Open File dialog box.</summary>
      <remarks>This method adds the sequence file to the SequenceFiles collection and generates the ApplicationMgr.SequenceFileOpened and ApplicationMgr.DisplaySequenceFile events.</remarks>
      <returns>Returns the opened sequence file if you open a file. This method returns <c>NULL</c> if you cancel the Open File dialog box.</returns>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.DisplaySequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFilesDialog" />
      <seealso cref="ApplicationMgr.SequenceFileOpened" />
      <seealso cref="&quot;Open File dialog box&quot;javascript:RefLink('/InfoTopics/DB_Open_File.htm')" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.NewCommands">
      <summary>Creates an empty Commands collection. Refer to the Command object for more information about Command objects.</summary>
      <returns>A reference to a Commands object. Release this reference when you are finished with it.</returns>
      <seealso cref="Command" />
      <seealso cref="Commands" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.NewCommands">
      <summary>Creates an empty Commands collection. Refer to the Command object for more information about Command objects.</summary>
      <returns>A reference to a Commands object. Release this reference when you are finished with it.</returns>
      <seealso cref="Command" />
      <seealso cref="Commands" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.RaiseError(System.Int32,System.String)">
      <summary>Generates an ApplicationMgr.ReportError event.</summary>
      <remarks>Typically, an application handles the ReportError event to display or log errors that occur during the operation of the TestStand User Interface Controls. An application can reuse this event handler to report other errors by calling this method.</remarks>
      <param name="errorCode">Specifies the integer error code.</param>
      <param name="errorMessage">Specifies the descriptive error string.</param>
      <seealso cref="ApplicationMgr.ReportError" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.RaiseError(System.Int32,System.String)">
      <summary>Generates an ApplicationMgr.ReportError event.</summary>
      <remarks>Typically, an application handles the ReportError event to display or log errors that occur during the operation of the TestStand User Interface Controls. An application can reuse this event handler to report other errors by calling this method.</remarks>
      <param name="errorCode">Specifies the integer error code.</param>
      <param name="errorMessage">Specifies the descriptive error string.</param>
      <seealso cref="ApplicationMgr.ReportError" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CloseExecution(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Releases all references to the execution.</summary>
      <remarks>The Application Manager control attempts to close the execution by generating a QueryCloseExecution event. The <c>ApplicationMgr.QueryCloseExecution</c> event determines whether to cancel the closing of an execution or take additional actions when the execution is running. This method does not wait for running or terminating executions to complete.</remarks>
      <returns>Returns <c>True</c> if the execution was closed.</returns>
      <param name="exec">Specifies the execution to close.</param>
      <seealso cref="ApplicationMgr.CloseAllExecutions" />
      <seealso cref="ApplicationMgr.QueryCloseExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CloseExecution(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Releases all references to the execution.</summary>
      <remarks>The Application Manager control attempts to close the execution by generating a QueryCloseExecution event. The <c>ApplicationMgr.QueryCloseExecution</c> event determines whether to cancel the closing of an execution or take additional actions when the execution is running. This method does not wait for running or terminating executions to complete.</remarks>
      <returns>Returns <c>True</c> if the execution was closed.</returns>
      <param name="exec">Specifies the execution to close.</param>
      <seealso cref="ApplicationMgr.CloseAllExecutions" />
      <seealso cref="ApplicationMgr.QueryCloseExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.SetAutoCloseExecution(NationalInstruments.TestStand.Interop.API.Execution,System.Boolean)">
      <summary>Sets an execution to automatically close when complete.</summary>
      <param name="exec">Specifies the execution you want to close automatically.</param>
      <param name="val">Pass <c>True</c> for the execution to close when complete. When this parameter is <c>False</c>, the execution does not close automatically.</param>
      <seealso cref="ApplicationMgr.GetAutoCloseExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.SetAutoCloseExecution(NationalInstruments.TestStand.Interop.API.Execution,System.Boolean)">
      <summary>Sets an execution to automatically close when complete.</summary>
      <param name="exec">Specifies the execution you want to close automatically.</param>
      <param name="val">Pass <c>True</c> for the execution to close when complete. When this parameter is <c>False</c>, the execution does not close automatically.</param>
      <seealso cref="ApplicationMgr.GetAutoCloseExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetAutoCloseExecution(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Returns a Boolean value that indicates whether an execution closes automatically when complete.</summary>
      <returns>When this method returns <c>True</c>, the execution closes automatically when complete. When this method returns <c>False</c>, the execution does not close automatically.</returns>
      <param name="exec">Specifies the execution to obtain the setting from.</param>
      <seealso cref="ApplicationMgr.SetAutoCloseExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetAutoCloseExecution(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Returns a Boolean value that indicates whether an execution closes automatically when complete.</summary>
      <returns>When this method returns <c>True</c>, the execution closes automatically when complete. When this method returns <c>False</c>, the execution does not close automatically.</returns>
      <param name="exec">Specifies the execution to obtain the setting from.</param>
      <seealso cref="ApplicationMgr.SetAutoCloseExecution" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.SetVisible(NationalInstruments.TestStand.Interop.API.Execution,System.Boolean)">
      <summary>Specify <c>False</c> to hide the execution in the user interface. Hidden executions are not included in an execution list connection you establish to an ExecutionView Manager control unless you set the ExecutionListConnection.ShowHiddenExecutions property to <c>True</c>.</summary>
      <remarks>Invisible executions are created when an execution is created with <c>ExecTypeMask_InitiallyHidden</c>.</remarks>
      <param name="exec">Specifies the execution to make visible or hidden.</param>
      <param name="val">Pass <c>True</c> to make the execution visible. Pass <c>False</c> to make the execution hidden.</param>
      <seealso cref="ApplicationMgr.GetVisible" />
      <seealso cref="&quot;ExecutionListConnection&quot;ExecutionListConnection.htm" />
      <seealso cref="&quot;ExecutionListConnection.ShowHiddenExecutions&quot;ExecutionListConnection_ShowHiddenExecutions_P.htm" />
      <seealso cref="&quot;ExecutionTypeMask&quot;javascript:APILink('/RefTopics/ExecutionTypeMask.htm')" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.SetVisible(NationalInstruments.TestStand.Interop.API.Execution,System.Boolean)">
      <summary>Specify <c>False</c> to hide the execution in the user interface. Hidden executions are not included in an execution list connection you establish to an ExecutionView Manager control unless you set the ExecutionListConnection.ShowHiddenExecutions property to <c>True</c>.</summary>
      <remarks>Invisible executions are created when an execution is created with <c>ExecTypeMask_InitiallyHidden</c>.</remarks>
      <param name="exec">Specifies the execution to make visible or hidden.</param>
      <param name="val">Pass <c>True</c> to make the execution visible. Pass <c>False</c> to make the execution hidden.</param>
      <seealso cref="ApplicationMgr.GetVisible" />
      <seealso cref="&quot;ExecutionListConnection&quot;ExecutionListConnection.htm" />
      <seealso cref="&quot;ExecutionListConnection.ShowHiddenExecutions&quot;ExecutionListConnection_ShowHiddenExecutions_P.htm" />
      <seealso cref="&quot;ExecutionTypeMask&quot;javascript:APILink('/RefTopics/ExecutionTypeMask.htm')" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetVisible(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Returns <c>True</c> when the execution is not hidden in the user interface. Hidden executions are not included in an execution list connection you establish to an ExecutionView Manager control unless you set the ExecutionListConnection.ShowHiddenExecutions property to <c>True</c>.</summary>
      <remarks>Hidden executions are created using the <c>ExecTypeMask_InitiallyHidden</c> flag.</remarks>
      <param name="exec">Specifies the execution to determine whether it is visible.</param>
      <seealso cref="ApplicationMgr.SetVisible" />
      <seealso cref="&quot;ExecutionListConnection&quot;ExecutionListConnection.htm" />
      <seealso cref="&quot;ExecutionListConnection.ShowHiddenExecutions&quot;ExecutionListConnection_ShowHiddenExecutions_P.htm" />
      <seealso cref="&quot;ExecutionTypeMask&quot;javascript:APILink('/RefTopics/ExecutionTypeMask.htm')" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetVisible(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Returns <c>True</c> when the execution is not hidden in the user interface. Hidden executions are not included in an execution list connection you establish to an ExecutionView Manager control unless you set the ExecutionListConnection.ShowHiddenExecutions property to <c>True</c>.</summary>
      <remarks>Hidden executions are created using the <c>ExecTypeMask_InitiallyHidden</c> flag.</remarks>
      <param name="exec">Specifies the execution to determine whether it is visible.</param>
      <seealso cref="ApplicationMgr.SetVisible" />
      <seealso cref="&quot;ExecutionListConnection&quot;ExecutionListConnection.htm" />
      <seealso cref="&quot;ExecutionListConnection.ShowHiddenExecutions&quot;ExecutionListConnection_ShowHiddenExecutions_P.htm" />
      <seealso cref="&quot;ExecutionTypeMask&quot;javascript:APILink('/RefTopics/ExecutionTypeMask.htm')" />
      <seealso cref="ExecutionViewMgr.Connections" />
      <seealso cref="&quot;ExecutionViewMgrConnections.ExecutionList&quot;ExecutionViewMgrConnections_ExecutionList_P.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetEngine">
      <summary>Returns a reference to the TestStand Engine.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetEngine">
      <summary>Returns a reference to the TestStand Engine.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetCommand(NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32)">
      <summary>Creates a Command object.</summary>
      <returns>Command object that represents the command.</returns>
      <param name="cmdKind">Specifies the type of Command object to create.</param>
      <param name="commandIndex">Specifies which command in the set to return. Use this on sets of commands.</param>
      <seealso cref="ApplicationMgr.NewCommands" />
      <seealso cref="Command" />
      <seealso cref="Commands" />
      <seealso cref="ExecutionViewMgr.GetCommand" />
      <seealso cref="SequenceFileViewMgr.GetCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetCommand(NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32)">
      <summary>Creates a Command object.</summary>
      <returns>Command object that represents the command.</returns>
      <param name="cmdKind">Specifies the type of Command object to create.</param>
      <param name="commandIndex">Specifies which command in the set to return. Use this on sets of commands.</param>
      <seealso cref="ApplicationMgr.NewCommands" />
      <seealso cref="Command" />
      <seealso cref="Commands" />
      <seealso cref="ExecutionViewMgr.GetCommand" />
      <seealso cref="SequenceFileViewMgr.GetCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetCaptionText(NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean,System.String)">
      <summary>Returns the current caption text for a caption source in the Application Manager control.</summary>
      <returns>The current text for the caption source you specify.</returns>
      <param name="captionSource">Specifies the type of caption source to obtain the text from.</param>
      <param name="longName">Specifies whether to return a long or short version of the caption text for certain caption sources. Refer to the CaptionSources enumeration for more information about determining when this option affects the text and for more information about the difference between the long and short versions of the text.</param>
      <param name="formatExpression">Specifies a format expression to evaluate when generating the caption text. For the CaptionSource_MacroExpression caption source, specify a format expression that evaluates to a string value that contains macros that specify other caption sources. For all other caption sources, specify an expression that evaluates to a string value that contains the characters <c>%1</c>.  The method replaces the <c>%1</c> characters with the text from the caption source. Pass an empty string to use the default format string for the caption source.</param>
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.GetCaptionText" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetCaptionText(NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean,System.String)">
      <summary>Returns the current caption text for a caption source in the Application Manager control.</summary>
      <returns>The current text for the caption source you specify.</returns>
      <param name="captionSource">Specifies the type of caption source to obtain the text from.</param>
      <param name="longName">Specifies whether to return a long or short version of the caption text for certain caption sources. Refer to the CaptionSources enumeration for more information about determining when this option affects the text and for more information about the difference between the long and short versions of the text.</param>
      <param name="formatExpression">Specifies a format expression to evaluate when generating the caption text. For the CaptionSource_MacroExpression caption source, specify a format expression that evaluates to a string value that contains macros that specify other caption sources. For all other caption sources, specify an expression that evaluates to a string value that contains the characters <c>%1</c>.  The method replaces the <c>%1</c> characters with the text from the caption source. Pass an empty string to use the default format string for the caption source.</param>
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.GetCaptionText" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ReloadModifiedSequenceFiles">
      <summary><para>Note: This method is obsolete. Use the ReloadModifiedSequenceFilesEx method instead.</para></summary>
      <remarks>Determines whether loaded sequence files have been modified on disk and generates an ApplicationMgr.QueryReloadSequenceFile event to determine whether to prompt you to reload any modified files.
This method also refreshes the read-only state of open sequence files and updates the ApplicationMgr.ConfigurationEntryPoints and ApplicationMgr.ExecutionEntryPoints properties. Use the ApplicationMgr.ReloadFile method to reload a specific file.</remarks>
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.ConfigurationEntryPoints" />
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.QueryReloadSequenceFile" />
      <seealso cref="ApplicationMgr.ReloadFile" />
      <seealso cref="ApplicationMgr.ReloadModifiedFilesInterval" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ReloadModifiedSequenceFiles">
      <summary><para>Note: This method is obsolete. Use the ReloadModifiedSequenceFilesEx method instead.</para></summary>
      <remarks>Determines whether loaded sequence files have been modified on disk and generates an ApplicationMgr.QueryReloadSequenceFile event to determine whether to prompt you to reload any modified files.
This method also refreshes the read-only state of open sequence files and updates the ApplicationMgr.ConfigurationEntryPoints and ApplicationMgr.ExecutionEntryPoints properties. Use the ApplicationMgr.ReloadFile method to reload a specific file.</remarks>
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.ConfigurationEntryPoints" />
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.QueryReloadSequenceFile" />
      <seealso cref="ApplicationMgr.ReloadFile" />
      <seealso cref="ApplicationMgr.ReloadModifiedFilesInterval" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CloseAllExecutions">
      <summary>Closes and releases all references to all executions.</summary>
      <remarks>The Application Manager control attempts to close all executions by generating a QueryCloseExecution event for each execution in the Executions collection. The <c>ApplicationMgr.QueryCloseExecution</c> event determines whether to cancel the closing of an execution or take additional actions when the execution is running. This method does not wait for running or terminating executions to complete.</remarks>
      <seealso cref="ApplicationMgr.CloseExecution" />
      <seealso cref="ApplicationMgr.QueryCloseExecution" />
      <seealso cref="Executions" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CloseAllExecutions">
      <summary>Closes and releases all references to all executions.</summary>
      <remarks>The Application Manager control attempts to close all executions by generating a QueryCloseExecution event for each execution in the Executions collection. The <c>ApplicationMgr.QueryCloseExecution</c> event determines whether to cancel the closing of an execution or take additional actions when the execution is running. This method does not wait for running or terminating executions to complete.</remarks>
      <seealso cref="ApplicationMgr.CloseExecution" />
      <seealso cref="ApplicationMgr.QueryCloseExecution" />
      <seealso cref="Executions" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ConnectCommand(System.Object,NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32,System.Int32)">
      <summary>Connects a control to the Application Manager control to make the connected control function as a command.</summary>
      <remarks>You can connect TestStand User Interface buttons and checkboxes using this method.
To disconnect an existing connection, you must first obtain the ApplicationMgrConnections object from the ApplicationMgr.Connections property. Then, access the ApplicationMgrConnections.Command property to obtain the CommandConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected with this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the button or checkbox control to which the command connects.</param>
      <param name="cmdKind">Specifies the type of command to connect. 
<para>Note: Not all commands found in the CommandKinds enumeration work with the Application Manager control. Refer to the  CommandKinds enumeration for a list of compatible commands.</para></param>
      <param name="index">Specifies an index into command sets. For example, when you connect to <c>CommandKind_EntryPointSet</c>, this parameter specifies the index of the entry point to use.</param>
      <param name="opts">Specifies a bitwise-OR combination of the CommandConnectionOptions constants.</param>
      <seealso cref="ApplicationMgr.Connections" />
      <seealso cref="ApplicationMgr.GetCommand" />
      <seealso cref="&quot;ApplicationMgrConnections&quot;ApplicationMgrConnections.htm" />
      <seealso cref="&quot;ApplicationMgrConnections.Command&quot;ApplicationMgrConnections_Command_P.htm" />
      <seealso cref="Button" />
      <seealso cref="&quot;CommandConnection&quot;CommandConnection.htm" />
      <seealso cref="&quot;CommandConnections&quot;CommandConnections.htm" />
      <seealso cref="CommandConnectionOptions" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ConnectCommand(System.Object,NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Int32,System.Int32)">
      <summary>Connects a control to the Application Manager control to make the connected control function as a command.</summary>
      <remarks>You can connect TestStand User Interface buttons and checkboxes using this method.
To disconnect an existing connection, you must first obtain the ApplicationMgrConnections object from the ApplicationMgr.Connections property. Then, access the ApplicationMgrConnections.Command property to obtain the CommandConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected with this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the button or checkbox control to which the command connects.</param>
      <param name="cmdKind">Specifies the type of command to connect. 
<para>Note: Not all commands found in the CommandKinds enumeration work with the Application Manager control. Refer to the  CommandKinds enumeration for a list of compatible commands.</para></param>
      <param name="index">Specifies an index into command sets. For example, when you connect to <c>CommandKind_EntryPointSet</c>, this parameter specifies the index of the entry point to use.</param>
      <param name="opts">Specifies a bitwise-OR combination of the CommandConnectionOptions constants.</param>
      <seealso cref="ApplicationMgr.Connections" />
      <seealso cref="ApplicationMgr.GetCommand" />
      <seealso cref="&quot;ApplicationMgrConnections&quot;ApplicationMgrConnections.htm" />
      <seealso cref="&quot;ApplicationMgrConnections.Command&quot;ApplicationMgrConnections_Command_P.htm" />
      <seealso cref="Button" />
      <seealso cref="&quot;CommandConnection&quot;CommandConnection.htm" />
      <seealso cref="&quot;CommandConnections&quot;CommandConnections.htm" />
      <seealso cref="CommandConnectionOptions" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ConnectCaption(System.Object,NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean)">
      <summary>Connects a caption source in the Application Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with the text that describes an aspect of the application state.</summary>
      <remarks>You can use this method to display a caption in a Label, ExpressionEdit or StatusBarPane control.
To disconnect an existing connection, you must first obtain the ApplicationMgrConnections object from the ApplicationMgr.Connections property. Then, access the ApplicationMgrConnections.Caption property to obtain the CaptionConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected with this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the visible control, or element of a visible control to which the caption source connects. Pass a Label, ExpressionEdit,  or StatusBarPane.</param>
      <param name="captionSource">Specifies the type of caption source to connect.</param>
      <param name="longName">For certain caption sources, this parameter specifies whether the connection displays the long or short version of the caption text. Refer to the CaptionSources enumeration for more information about the difference between the long and short versions of the text and to determine when this option affects a caption source.</param>
      <seealso cref="ApplicationMgr.Connections" />
      <seealso cref="ApplicationMgr.GetCaptionText" />
      <seealso cref="&quot;ApplicationMgrConnections&quot;ApplicationMgrConnections.htm" />
      <seealso cref="&quot;ApplicationMgrConnections.Caption&quot;ApplicationMgrConnections_Caption_P.htm" />
      <seealso cref="&quot;CaptionConnection&quot;CaptionConnection.htm" />
      <seealso cref="&quot;CaptionConnections&quot;CaptionConnections.htm" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="ExpressionEdit" />
      <seealso cref="Label" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ConnectCaption(System.Object,NationalInstruments.TestStand.Interop.UI.CaptionSources,System.Boolean)">
      <summary>Connects a caption source in the Application Manager control to a visible control or an element of a visible control. The connection automatically updates the visible control with the text that describes an aspect of the application state.</summary>
      <remarks>You can use this method to display a caption in a Label, ExpressionEdit or StatusBarPane control.
To disconnect an existing connection, you must first obtain the ApplicationMgrConnections object from the ApplicationMgr.Connections property. Then, access the ApplicationMgrConnections.Caption property to obtain the CaptionConnections collection.</remarks>
      <returns>A reference to an object that represents the new connection. Discarding the reference does not affect the connection. When the object is already connected with this type of connection, the existing connection is returned.</returns>
      <param name="uiObj">Specifies the visible control, or element of a visible control to which the caption source connects. Pass a Label, ExpressionEdit,  or StatusBarPane.</param>
      <param name="captionSource">Specifies the type of caption source to connect.</param>
      <param name="longName">For certain caption sources, this parameter specifies whether the connection displays the long or short version of the caption text. Refer to the CaptionSources enumeration for more information about the difference between the long and short versions of the text and to determine when this option affects a caption source.</param>
      <seealso cref="ApplicationMgr.Connections" />
      <seealso cref="ApplicationMgr.GetCaptionText" />
      <seealso cref="&quot;ApplicationMgrConnections&quot;ApplicationMgrConnections.htm" />
      <seealso cref="&quot;ApplicationMgrConnections.Caption&quot;ApplicationMgrConnections_Caption_P.htm" />
      <seealso cref="&quot;CaptionConnection&quot;CaptionConnection.htm" />
      <seealso cref="&quot;CaptionConnections&quot;CaptionConnections.htm" />
      <seealso cref="CaptionSources" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="ExpressionEdit" />
      <seealso cref="Label" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetSequenceFileViewMgr(NationalInstruments.TestStand.Interop.API.SequenceFile)">
      <summary>Finds a SequenceFileView Manager control that has a particular sequence file selected.</summary>
      <returns>IDispatch pointer to a SequenceFileView Manager control. When a sequence file is not selected in a SequenceFileView Manager control, the return value is <c>NULL</c>.</returns>
      <param name="file">Specifies the Sequence file with the SequenceFileView Manager control you want returned.</param>
      <seealso cref="ApplicationMgr.GetExecutionViewMgr" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetSequenceFileViewMgr(NationalInstruments.TestStand.Interop.API.SequenceFile)">
      <summary>Finds a SequenceFileView Manager control that has a particular sequence file selected.</summary>
      <returns>IDispatch pointer to a SequenceFileView Manager control. When a sequence file is not selected in a SequenceFileView Manager control, the return value is <c>NULL</c>.</returns>
      <param name="file">Specifies the Sequence file with the SequenceFileView Manager control you want returned.</param>
      <seealso cref="ApplicationMgr.GetExecutionViewMgr" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetExecutionViewMgr(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Finds the ExecutionView Manager control displaying a particular execution.</summary>
      <returns>The ExecutionView Manager control that is displaying the execution that is passed in. This method returns <c>NULL</c> when it cannot find an ExecutionView Manager control that displays the specified execution.</returns>
      <param name="exec">Specifies the execution with the ExecutionView Manager control you want returned.</param>
      <seealso cref="ApplicationMgr.GetSequenceFileViewMgr" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetExecutionViewMgr(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Finds the ExecutionView Manager control displaying a particular execution.</summary>
      <returns>The ExecutionView Manager control that is displaying the execution that is passed in. This method returns <c>NULL</c> when it cannot find an ExecutionView Manager control that displays the specified execution.</returns>
      <param name="exec">Specifies the execution with the ExecutionView Manager control you want returned.</param>
      <seealso cref="ApplicationMgr.GetSequenceFileViewMgr" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.LocalizeAllControls(System.String)">
      <summary>Calls the <c>Localize</c> method on all loaded TestStand User Interface Controls using a given section name.
For each user visible control text string, this method searches for a tag with the same string value in the specified section. When this method finds a control text string that is a tag in the language file, the method replaces the control text string with the value of the tag for the current language.</summary>
      <remarks>Call this control to localize all the controls once they are loaded.</remarks>
      <param name="sectionName">Specifies the name of the section in the language files to use.</param>
      <seealso cref="Button.Localize" />
      <seealso cref="Label.Localize" />
      <seealso cref="ListBar.Localize" />
      <seealso cref="SequenceView.Localize" />
      <seealso cref="StatusBar.Localize" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.LocalizeAllControls(System.String)">
      <summary>Calls the <c>Localize</c> method on all loaded TestStand User Interface Controls using a given section name.
For each user visible control text string, this method searches for a tag with the same string value in the specified section. When this method finds a control text string that is a tag in the language file, the method replaces the control text string with the value of the tag for the current language.</summary>
      <remarks>Call this control to localize all the controls once they are loaded.</remarks>
      <param name="sectionName">Specifies the name of the section in the language files to use.</param>
      <seealso cref="Button.Localize" />
      <seealso cref="Label.Localize" />
      <seealso cref="ListBar.Localize" />
      <seealso cref="SequenceView.Localize" />
      <seealso cref="StatusBar.Localize" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.LoginOnStart">
      <summary>When this property is <c>True</c> and the StationOptions.LoginOnStart property is <c>True</c>, the LoginLogout Front-End callback sequence runs when you call the ApplicationMgr.Start method.</summary>
      <seealso cref="ApplicationMgr.LoginLogoutRunning" />
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.LoginOnStart">
      <summary>When this property is <c>True</c> and the StationOptions.LoginOnStart property is <c>True</c>, the LoginLogout Front-End callback sequence runs when you call the ApplicationMgr.Start method.</summary>
      <seealso cref="ApplicationMgr.LoginLogoutRunning" />
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.BreakOnStepFailure">
      <summary>When this property is <c>True</c>, TestStand suspends an execution for any step that fails. When this property is <c>False</c>, TestStand suspends execution based on whether the ExecTypeMask_BreakOnStepFailure option is enabled in the Execution.TypeMask property for that execution.</summary>
      <remarks>The value of this property is the same as the StationOptions.BreakOnStepFailure property.</remarks>
      <seealso cref="ApplicationMgr.BreakOnFirstStep" />
      <seealso cref="ApplicationMgr.BreakOnSequenceFailure" />
      <seealso cref="&quot;Execution.TypeMask&quot;javascript:APILink('/RefTopics/Execution_TypeMask_P.htm')" />
      <seealso cref="&quot;ExecutionTypeMask&quot;javascript:APILink('/RefTopics/ExecutionTypeMask.htm')" />
      <seealso cref="&quot;StationOptions.BreakOnStepFailure&quot;javascript:APILink('/RefTopics/StationOptions_BreakOnStepFailure_P.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.BreakOnStepFailure">
      <summary>When this property is <c>True</c>, TestStand suspends an execution for any step that fails. When this property is <c>False</c>, TestStand suspends execution based on whether the ExecTypeMask_BreakOnStepFailure option is enabled in the Execution.TypeMask property for that execution.</summary>
      <remarks>The value of this property is the same as the StationOptions.BreakOnStepFailure property.</remarks>
      <seealso cref="ApplicationMgr.BreakOnFirstStep" />
      <seealso cref="ApplicationMgr.BreakOnSequenceFailure" />
      <seealso cref="&quot;Execution.TypeMask&quot;javascript:APILink('/RefTopics/Execution_TypeMask_P.htm')" />
      <seealso cref="&quot;ExecutionTypeMask&quot;javascript:APILink('/RefTopics/ExecutionTypeMask.htm')" />
      <seealso cref="&quot;StationOptions.BreakOnStepFailure&quot;javascript:APILink('/RefTopics/StationOptions_BreakOnStepFailure_P.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.Connections">
      <summary>Returns the ApplicationMgrConnections object, which contains the collection of the connections made to the Application Manager control.</summary>
      <remarks>Typically, you do not need to use this object.
To make connections to the Application Manager control, use the ApplicationMgr.ConnectCaption and the ApplicationMgr.ConnectCommand methods.</remarks>
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="&quot;ApplicationMgrConnections&quot;ApplicationMgrConnections.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.Connections">
      <summary>Returns the ApplicationMgrConnections object, which contains the collection of the connections made to the Application Manager control.</summary>
      <remarks>Typically, you do not need to use this object.
To make connections to the Application Manager control, use the ApplicationMgr.ConnectCaption and the ApplicationMgr.ConnectCommand methods.</remarks>
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="&quot;ApplicationMgrConnections&quot;ApplicationMgrConnections.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.BreakOnFirstStep">
      <summary>When this property is <c>True</c>, all new executions break on the first step.</summary>
      <remarks>The value of this property persists in the configuration file the  ApplicationMgr.ConfigFilePath property specifies.</remarks>
      <seealso cref="ApplicationMgr.BreakOnSequenceFailure" />
      <seealso cref="ApplicationMgr.BreakOnStepFailure" />
      <seealso cref="ApplicationMgr.ConfigFilePath" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.BreakOnFirstStep">
      <summary>When this property is <c>True</c>, all new executions break on the first step.</summary>
      <remarks>The value of this property persists in the configuration file the  ApplicationMgr.ConfigFilePath property specifies.</remarks>
      <seealso cref="ApplicationMgr.BreakOnSequenceFailure" />
      <seealso cref="ApplicationMgr.BreakOnStepFailure" />
      <seealso cref="ApplicationMgr.ConfigFilePath" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.BreakOnSequenceFailure">
      <summary>When this property is <c>True</c>, TestStand suspends an execution on sequence failure. When this property is <c>False</c>, TestStand suspends execution based on whether the ExecTypeMask_BreakOnSequenceFailure  option is enabled in the Execution.TypeMask property for the execution.</summary>
      <remarks>The value of this property is the same as the StationOptions.BreakOnSequenceFailure property.</remarks>
      <seealso cref="ApplicationMgr.BreakOnFirstStep" />
      <seealso cref="ApplicationMgr.BreakOnStepFailure" />
      <seealso cref="&quot;Execution.TypeMask&quot;javascript:APILink('/RefTopics/Execution_TypeMask_P.htm')" />
      <seealso cref="&quot;ExecutionTypeMask&quot;javascript:APILink('/RefTopics/ExecutionTypeMask.htm')" />
      <seealso cref="&quot;StationOptions.BreakOnSequenceFailure&quot;javascript:APILink('/RefTopics/StationOptions_BreakOnSequenceFailure_P.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.BreakOnSequenceFailure">
      <summary>When this property is <c>True</c>, TestStand suspends an execution on sequence failure. When this property is <c>False</c>, TestStand suspends execution based on whether the ExecTypeMask_BreakOnSequenceFailure  option is enabled in the Execution.TypeMask property for the execution.</summary>
      <remarks>The value of this property is the same as the StationOptions.BreakOnSequenceFailure property.</remarks>
      <seealso cref="ApplicationMgr.BreakOnFirstStep" />
      <seealso cref="ApplicationMgr.BreakOnStepFailure" />
      <seealso cref="&quot;Execution.TypeMask&quot;javascript:APILink('/RefTopics/Execution_TypeMask_P.htm')" />
      <seealso cref="&quot;ExecutionTypeMask&quot;javascript:APILink('/RefTopics/ExecutionTypeMask.htm')" />
      <seealso cref="&quot;StationOptions.BreakOnSequenceFailure&quot;javascript:APILink('/RefTopics/StationOptions_BreakOnSequenceFailure_P.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CommandLineArguments">
      <summary>Returns the collection of command-line arguments to the application. The following are switches on the command line:<para><para>&#160;&#160;&#160;&#160;* <c>/run &lt;sequence&gt; &lt;sequencefile&gt;</c>&#8212;Runs the sequence in the sequence file.</para><para>&#160;&#160;&#160;&#160;* <c>/runEntryPoint &lt;entryPointName&gt; &lt;SequenceFile&gt;</c>&#8212;Runs the entry point on the sequence file.</para><para>&#160;&#160;&#160;&#160;* <c>/quit</c>&#8212;Exits the application once all executions complete.</para><para>&#160;&#160;&#160;&#160;* <c>/setCurrentDir</c>&#8212;Sets the current directory to the first directory in the directory history list in the File dialog box. The current directory is the directory the File dialog box initially displays when you open a file. Use this option to set the directory the File dialog box displays to the directory the File dialog box displayed the last time you ran the application. The application sets the current directory after processing the other command-line options.</para><para>&#160;&#160;&#160;&#160;* <c>/?</c>&#8212;Launches a help dialog box, which contains a list of valid command-line arguments, and then immediately closes.</para><para>&#160;&#160;&#160;&#160;* <c>/useExisting</c>&#8212;Prevents a second instance of the application from running and forwards all command-line arguments to the application that is already running.</para><para>&#160;&#160;&#160;&#160;* <c>/goto &lt;location&gt;</c>&#8212;Instructs the application to display the item the &lt;location&gt; property object path specifies, such as <para><code>TestExec.exe C:\example.seq /goto &quot;Seq[\&quot;MainSequence\&quot;].Main[\&quot;Power On\&quot;]&quot;</code></para><br/><para><code>TestExec.exe C:\example.seq /goto &quot;Seq[\&quot;MainSequence\&quot;].Main[\&quot;ID#:JifH4ODTf0y1z7bJne0G7D\&quot;]&quot;</code></para><br/><para><code>TestExec.exe C:\example.seq /goto &quot;Seq[1].Main[4].TS.LoadOpt&quot;</code></para></para><para>&#160;&#160;&#160;&#160;* <c>/editor</c>&#8212;Enables the application to create and edit sequence files. You must have activated a license that supports creating and editing sequence files.</para><para>&#160;&#160;&#160;&#160;* <c>/operatorInterface</c>&#8212;Prevents the application from creating and editing sequence files.<para>Note: You can use <c>/</c> or <c>-</c> to specify a switch. Quotation marks are required for arguments that contain a space, such as <c>&quot;Test&#160;UUTs&quot;</c> and <c>&quot;C:\My&#160;Documents\Test&#160;Sequence.seq&quot;</c>.</para></para></para></summary>
      <remarks>The collection is created by splitting up the command line used to start the application, using white space as a delimiter.
<para>Note: When you launch another instance of the application with the <c>/useExisting</c> command-line switch, this property does not change to reflect the arguments forwarded to the application. Use the ApplicationMgr.ProcessUserCommandLineArguments event instead to process command-line arguments from another instance of the application.</para></remarks>
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
      <seealso cref="ApplicationMgr.ProcessUserCommandLineArguments" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CommandLineArguments">
      <summary>Returns the collection of command-line arguments to the application. The following are switches on the command line:<para><para>&#160;&#160;&#160;&#160;* <c>/run &lt;sequence&gt; &lt;sequencefile&gt;</c>&#8212;Runs the sequence in the sequence file.</para><para>&#160;&#160;&#160;&#160;* <c>/runEntryPoint &lt;entryPointName&gt; &lt;SequenceFile&gt;</c>&#8212;Runs the entry point on the sequence file.</para><para>&#160;&#160;&#160;&#160;* <c>/quit</c>&#8212;Exits the application once all executions complete.</para><para>&#160;&#160;&#160;&#160;* <c>/setCurrentDir</c>&#8212;Sets the current directory to the first directory in the directory history list in the File dialog box. The current directory is the directory the File dialog box initially displays when you open a file. Use this option to set the directory the File dialog box displays to the directory the File dialog box displayed the last time you ran the application. The application sets the current directory after processing the other command-line options.</para><para>&#160;&#160;&#160;&#160;* <c>/?</c>&#8212;Launches a help dialog box, which contains a list of valid command-line arguments, and then immediately closes.</para><para>&#160;&#160;&#160;&#160;* <c>/useExisting</c>&#8212;Prevents a second instance of the application from running and forwards all command-line arguments to the application that is already running.</para><para>&#160;&#160;&#160;&#160;* <c>/goto &lt;location&gt;</c>&#8212;Instructs the application to display the item the &lt;location&gt; property object path specifies, such as <para><code>TestExec.exe C:\example.seq /goto &quot;Seq[\&quot;MainSequence\&quot;].Main[\&quot;Power On\&quot;]&quot;</code></para><br/><para><code>TestExec.exe C:\example.seq /goto &quot;Seq[\&quot;MainSequence\&quot;].Main[\&quot;ID#:JifH4ODTf0y1z7bJne0G7D\&quot;]&quot;</code></para><br/><para><code>TestExec.exe C:\example.seq /goto &quot;Seq[1].Main[4].TS.LoadOpt&quot;</code></para></para><para>&#160;&#160;&#160;&#160;* <c>/editor</c>&#8212;Enables the application to create and edit sequence files. You must have activated a license that supports creating and editing sequence files.</para><para>&#160;&#160;&#160;&#160;* <c>/operatorInterface</c>&#8212;Prevents the application from creating and editing sequence files.<para>Note: You can use <c>/</c> or <c>-</c> to specify a switch. Quotation marks are required for arguments that contain a space, such as <c>&quot;Test&#160;UUTs&quot;</c> and <c>&quot;C:\My&#160;Documents\Test&#160;Sequence.seq&quot;</c>.</para></para></para></summary>
      <remarks>The collection is created by splitting up the command line used to start the application, using white space as a delimiter.
<para>Note: When you launch another instance of the application with the <c>/useExisting</c> command-line switch, this property does not change to reflect the arguments forwarded to the application. Use the ApplicationMgr.ProcessUserCommandLineArguments event instead to process command-line arguments from another instance of the application.</para></remarks>
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
      <seealso cref="ApplicationMgr.ProcessUserCommandLineArguments" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ProcessCommandLine">
      <summary>When this property is <c>True</c>, the Application Manager control processes the following switches on the command line:<para><para>&#160;&#160;&#160;&#160;* <c>/editor</c>&#8212;Enables the application to create and edit sequence files. You must have activated a license that supports creating and editing sequence files.</para><para>&#160;&#160;&#160;&#160;* <c>/goto &lt;location&gt;</c>&#8212;Instructs the application to display the item the <c>&lt;location&gt;</c> property object path specifies, such as <para><code>TestExec.exe C:\example.seq /goto &quot;Seq[\&quot;MainSequence\&quot;].Main[\&quot;Power On\&quot;]&quot;</code></para><br/><para><code>TestExec.exe C:\example.seq /goto &quot;Seq[\&quot;MainSequence\&quot;].Main[\&quot;ID#:JifH4ODTf0y1z7bJne0G7D\&quot;]&quot;</code></para><br/><para><code>TestExec.exe C:\example.seq /goto &quot;Seq[1].Main[4].TS.LoadOpt&quot;</code></para></para><para>&#160;&#160;&#160;&#160;* <c>/operatorinterface</c>&#8212;Prevents the application from creating and editing sequence files.<para>Note: You can use <c>/</c> or <c>-</c> to specify a switch. Quotation marks are required for arguments that contain a space, such as <c>&quot;Test&#160;UUTs&quot;</c> and <c>&quot;C:\My&#160;Documents\Test&#160;Sequence.seq&quot;</c>.</para></para><para>&#160;&#160;&#160;&#160;* <c>/outputToStdIO</c>&#8212;Writes the status of completed executions to standard output. When you run a user interface from the command line, the console window displays the text written to standard output.</para><para>&#160;&#160;&#160;&#160;* <c>/quit</c>&#8212;Exits the application once all executions complete.</para><para>&#160;&#160;&#160;&#160;* <c>/run &lt;sequence&gt; &lt;sequencefile&gt;</c>&#8212;Runs the sequence in the sequence file.</para><para>&#160;&#160;&#160;&#160;* <c>/runEntryPoint &lt;entryPointName&gt; &lt;SequenceFile&gt;</c>&#8212;Runs the entry point on the sequence file.</para><para>&#160;&#160;&#160;&#160;* <c>/setCurrentDir</c>&#8212;Sets the current directory to the first directory in the directory history list in the File dialog box. The current directory is the directory the File dialog box initially displays when you open a file. Use this option to set the directory the File dialog box displays to the directory the File dialog box displayed the last time you ran the application. The application sets the current directory after processing the other command-line options.</para><para>&#160;&#160;&#160;&#160;* <c>/useExisting</c>&#8212;Prevents a second instance of the application from running and forwards all command-line arguments to the application that is already running.</para><para>&#160;&#160;&#160;&#160;* <c>/?</c>&#8212;Launches a help dialog box, which contains a list of valid command-line arguments, and then immediately closes.</para></para>
In addition to the switches, you can provide on the command line sequence filenames to load into the application.</summary>
      <remarks>The ApplicationMgr.ReportError event reports errors that might occur while processing the command-line arguments.
Use the ApplicationMgr.ProcessUserCommandLineArguments event to process command-line arguments the Application Manager control does not recognize as custom command-line arguments.</remarks>
      <seealso cref="ApplicationMgr.CommandLineArguments" />
      <seealso cref="ApplicationMgr.ProcessUserCommandLineArguments" />
      <seealso cref="ApplicationMgr.ReportError" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ProcessCommandLine">
      <summary>When this property is <c>True</c>, the Application Manager control processes the following switches on the command line:<para><para>&#160;&#160;&#160;&#160;* <c>/editor</c>&#8212;Enables the application to create and edit sequence files. You must have activated a license that supports creating and editing sequence files.</para><para>&#160;&#160;&#160;&#160;* <c>/goto &lt;location&gt;</c>&#8212;Instructs the application to display the item the <c>&lt;location&gt;</c> property object path specifies, such as <para><code>TestExec.exe C:\example.seq /goto &quot;Seq[\&quot;MainSequence\&quot;].Main[\&quot;Power On\&quot;]&quot;</code></para><br/><para><code>TestExec.exe C:\example.seq /goto &quot;Seq[\&quot;MainSequence\&quot;].Main[\&quot;ID#:JifH4ODTf0y1z7bJne0G7D\&quot;]&quot;</code></para><br/><para><code>TestExec.exe C:\example.seq /goto &quot;Seq[1].Main[4].TS.LoadOpt&quot;</code></para></para><para>&#160;&#160;&#160;&#160;* <c>/operatorinterface</c>&#8212;Prevents the application from creating and editing sequence files.<para>Note: You can use <c>/</c> or <c>-</c> to specify a switch. Quotation marks are required for arguments that contain a space, such as <c>&quot;Test&#160;UUTs&quot;</c> and <c>&quot;C:\My&#160;Documents\Test&#160;Sequence.seq&quot;</c>.</para></para><para>&#160;&#160;&#160;&#160;* <c>/outputToStdIO</c>&#8212;Writes the status of completed executions to standard output. When you run a user interface from the command line, the console window displays the text written to standard output.</para><para>&#160;&#160;&#160;&#160;* <c>/quit</c>&#8212;Exits the application once all executions complete.</para><para>&#160;&#160;&#160;&#160;* <c>/run &lt;sequence&gt; &lt;sequencefile&gt;</c>&#8212;Runs the sequence in the sequence file.</para><para>&#160;&#160;&#160;&#160;* <c>/runEntryPoint &lt;entryPointName&gt; &lt;SequenceFile&gt;</c>&#8212;Runs the entry point on the sequence file.</para><para>&#160;&#160;&#160;&#160;* <c>/setCurrentDir</c>&#8212;Sets the current directory to the first directory in the directory history list in the File dialog box. The current directory is the directory the File dialog box initially displays when you open a file. Use this option to set the directory the File dialog box displays to the directory the File dialog box displayed the last time you ran the application. The application sets the current directory after processing the other command-line options.</para><para>&#160;&#160;&#160;&#160;* <c>/useExisting</c>&#8212;Prevents a second instance of the application from running and forwards all command-line arguments to the application that is already running.</para><para>&#160;&#160;&#160;&#160;* <c>/?</c>&#8212;Launches a help dialog box, which contains a list of valid command-line arguments, and then immediately closes.</para></para>
In addition to the switches, you can provide on the command line sequence filenames to load into the application.</summary>
      <remarks>The ApplicationMgr.ReportError event reports errors that might occur while processing the command-line arguments.
Use the ApplicationMgr.ProcessUserCommandLineArguments event to process command-line arguments the Application Manager control does not recognize as custom command-line arguments.</remarks>
      <seealso cref="ApplicationMgr.CommandLineArguments" />
      <seealso cref="ApplicationMgr.ProcessUserCommandLineArguments" />
      <seealso cref="ApplicationMgr.ReportError" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.SequenceFiles">
      <summary>Returns the collection of sequence files the application opens.</summary>
      <remarks>This property eliminates the need to keep an array of open sequence files. Use the ApplicationMgr.OpenSequenceFile method to add files to the collection and the ApplicationMgr.CloseSequenceFile method to remove files from the collection.</remarks>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFile" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.SequenceFiles">
      <summary>Returns the collection of sequence files the application opens.</summary>
      <remarks>This property eliminates the need to keep an array of open sequence files. Use the ApplicationMgr.OpenSequenceFile method to add files to the collection and the ApplicationMgr.CloseSequenceFile method to remove files from the collection.</remarks>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFile" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.Executions">
      <summary>Returns the collection of executions the application creates.</summary>
      <remarks>This property eliminates the need to keep an array of open executions. The Application Manager control automatically adds new executions to the collection and removes closed executions.</remarks>
      <seealso cref="ApplicationMgr.Executing" />
      <seealso cref="Executions" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.Executions">
      <summary>Returns the collection of executions the application creates.</summary>
      <remarks>This property eliminates the need to keep an array of open executions. The Application Manager control automatically adds new executions to the collection and removes closed executions.</remarks>
      <seealso cref="ApplicationMgr.Executing" />
      <seealso cref="Executions" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.LoginLogoutRunning">
      <summary>Returns <c>True</c> when the Application Manager control is running a LoginLogout Front-End callback sequence for a user to log in or log out.</summary>
      <seealso cref="ApplicationMgr.Login" />
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.Logout" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.LoginLogoutRunning">
      <summary>Returns <c>True</c> when the Application Manager control is running a LoginLogout Front-End callback sequence for a user to log in or log out.</summary>
      <seealso cref="ApplicationMgr.Login" />
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.Logout" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.Executing">
      <summary>Returns <c>True</c> when an execution is running.</summary>
      <seealso cref="ApplicationMgr.Executions" />
      <seealso cref="Executions" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.Executing">
      <summary>Returns <c>True</c> when an execution is running.</summary>
      <seealso cref="ApplicationMgr.Executions" />
      <seealso cref="Executions" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ConfigFile">
      <summary>Returns the PropertyObjectFile object that represents the configuration information that persists between sessions of the application.</summary>
      <remarks>The ApplicationMgr.ConfigFilePath property specifies the property object filename.</remarks>
      <seealso cref="ApplicationMgr.ConfigFilePath" />
      <seealso cref="ApplicationMgr.MakeStepNamesUnique" />
      <seealso cref="ApplicationMgr.PromptForOverwrite" />
      <seealso cref="ApplicationMgr.ReloadConfigFile" />
      <seealso cref="ApplicationMgr.SaveOnClose" />
      <seealso cref="&quot;PropertyObjectFile&quot;javascript:APILink('/RefTopics/PropertyObjectFile.htm')" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ConfigFile">
      <summary>Returns the PropertyObjectFile object that represents the configuration information that persists between sessions of the application.</summary>
      <remarks>The ApplicationMgr.ConfigFilePath property specifies the property object filename.</remarks>
      <seealso cref="ApplicationMgr.ConfigFilePath" />
      <seealso cref="ApplicationMgr.MakeStepNamesUnique" />
      <seealso cref="ApplicationMgr.PromptForOverwrite" />
      <seealso cref="ApplicationMgr.ReloadConfigFile" />
      <seealso cref="ApplicationMgr.SaveOnClose" />
      <seealso cref="&quot;PropertyObjectFile&quot;javascript:APILink('/RefTopics/PropertyObjectFile.htm')" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ConfigFilePath">
      <summary>Specifies the path of the configuration file.</summary>
      <remarks>Once the file has been loaded and you have called the ApplicationMgr.Start method, the path cannot be changed. The default pathname is <c>%TestStandLocalAppData%\UserInterface.xml</c>.
<para>Note: This property honors environment variables, the <c>%TSVer%</c> macro, the <c>%TestStandConfig%</c> macro, and the <c>%TestStandLocalAppData%</c> macro. The <c>%TSVer%</c> macro expands to the current TestStand version number. The <c>%TestStandConfig%</c> macro expands to the directory the Engine.GetTestStandPath (TestStandPath_Config) method call returns. The <c>%TestStandLocalAppData%</c> macro expands to the directory the Engine.GetTestStandPath (TestStandPath_LocalAppData) method call returns.</para></remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="&quot;Engine.GetTestStandPath&quot;javascript:APILink('/RefTopics/Engine_GetTestStandPath_M.htm')" />
      <seealso cref="&quot;TestStandPaths&quot;javascript:APILink('/RefTopics/TestStandPaths.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ConfigFilePath">
      <summary>Specifies the path of the configuration file.</summary>
      <remarks>Once the file has been loaded and you have called the ApplicationMgr.Start method, the path cannot be changed. The default pathname is <c>%TestStandLocalAppData%\UserInterface.xml</c>.
<para>Note: This property honors environment variables, the <c>%TSVer%</c> macro, the <c>%TestStandConfig%</c> macro, and the <c>%TestStandLocalAppData%</c> macro. The <c>%TSVer%</c> macro expands to the current TestStand version number. The <c>%TestStandConfig%</c> macro expands to the directory the Engine.GetTestStandPath (TestStandPath_Config) method call returns. The <c>%TestStandLocalAppData%</c> macro expands to the directory the Engine.GetTestStandPath (TestStandPath_LocalAppData) method call returns.</para></remarks>
      <seealso cref="ApplicationMgr.ConfigFile" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="&quot;Engine.GetTestStandPath&quot;javascript:APILink('/RefTopics/Engine_GetTestStandPath_M.htm')" />
      <seealso cref="&quot;TestStandPaths&quot;javascript:APILink('/RefTopics/TestStandPaths.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.MRUFiles">
      <summary>Returns a collection of the most recently used (MRU) sequence filenames in the application.</summary>
      <seealso cref="MRUFiles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.MRUFiles">
      <summary>Returns a collection of the most recently used (MRU) sequence filenames in the application.</summary>
      <seealso cref="MRUFiles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ReloadSequenceFilesOnStart">
      <summary>Specifies which files to reload when the application starts.</summary>
      <remarks>A value of <c>ReloadFile_None</c> results in nothing being reloaded on start. A value of <c>ReloadFile_Selected</c> makes the ApplicationMgr.Start method reload all files selected in any SequenceFileView Manager controls the last time the ApplicationMgr.Shutdown method was called. A value of <c>ReloadFile_All</c> makes the <c>ApplicationMgr.Start</c> method reload all files that were open when the <c>ApplicationMgr.Shutdown</c> method was last called. 
The files load after the first time a user logs in.</remarks>
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.ReloadFile" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ReloadSequenceFilesOnStart">
      <summary>Specifies which files to reload when the application starts.</summary>
      <remarks>A value of <c>ReloadFile_None</c> results in nothing being reloaded on start. A value of <c>ReloadFile_Selected</c> makes the ApplicationMgr.Start method reload all files selected in any SequenceFileView Manager controls the last time the ApplicationMgr.Shutdown method was called. A value of <c>ReloadFile_All</c> makes the <c>ApplicationMgr.Start</c> method reload all files that were open when the <c>ApplicationMgr.Shutdown</c> method was last called. 
The files load after the first time a user logs in.</remarks>
      <seealso cref="ApplicationMgr.LoginOnStart" />
      <seealso cref="ApplicationMgr.ReloadFile" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CurrentUIMessage">
      <summary>Accesses the current message being processed.</summary>
      <remarks>This property returns the current TestStand user interface message object when you need more information while handling an event.</remarks>
      <seealso cref="&quot;Engine.UIMessageEvent&quot;javascript:APILink('/RefTopics/Engine_UIMessageEvent_E.htm')" />
      <seealso cref="ExecutionViewMgr.UserMessage" />
      <seealso cref="&quot;UIMessage&quot;javascript:APILink('/RefTopics/UIMessage.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CurrentUIMessage">
      <summary>Accesses the current message being processed.</summary>
      <remarks>This property returns the current TestStand user interface message object when you need more information while handling an event.</remarks>
      <seealso cref="&quot;Engine.UIMessageEvent&quot;javascript:APILink('/RefTopics/Engine_UIMessageEvent_E.htm')" />
      <seealso cref="ExecutionViewMgr.UserMessage" />
      <seealso cref="&quot;UIMessage&quot;javascript:APILink('/RefTopics/UIMessage.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.LogoutClosesSeqFilesAndExecs">
      <summary>When this property is <c>True</c>, the ApplicationMgr.Logout method closes all sequence files and executions before running the LoginLogout Front-End callback. When this property is <c>False</c>, the <c>ApplicationMgr.Logout</c> method does not close any open sequence files or executions.</summary>
      <seealso cref="ApplicationMgr.Logout" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.LogoutClosesSeqFilesAndExecs">
      <summary>When this property is <c>True</c>, the ApplicationMgr.Logout method closes all sequence files and executions before running the LoginLogout Front-End callback. When this property is <c>False</c>, the <c>ApplicationMgr.Logout</c> method does not close any open sequence files or executions.</summary>
      <seealso cref="ApplicationMgr.Logout" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ReloadModifiedFilesInterval">
      <summary>Specifies the interval, in seconds, at which the Application Manager control calls the ApplicationMgr.ReloadModifiedSequenceFilesEx method. When the value is <c>0</c>, the Application Manager control does not reload any modified sequence files.</summary>
      <remarks>The default value is 3 seconds.</remarks>
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.QueryReloadSequenceFile" />
      <seealso cref="ApplicationMgr.ReloadModifiedSequenceFilesEx" />
      <seealso cref="QueryReloadSequenceFileOptions" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ReloadModifiedFilesInterval">
      <summary>Specifies the interval, in seconds, at which the Application Manager control calls the ApplicationMgr.ReloadModifiedSequenceFilesEx method. When the value is <c>0</c>, the Application Manager control does not reload any modified sequence files.</summary>
      <remarks>The default value is 3 seconds.</remarks>
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.QueryReloadSequenceFile" />
      <seealso cref="ApplicationMgr.ReloadModifiedSequenceFilesEx" />
      <seealso cref="QueryReloadSequenceFileOptions" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.ExitApplication">
      <summary>Occurs when the application has completed the shutdown process.</summary>
      <remarks>The application responds to this event by exiting. Refer to the ApplicationMgr.Shutdown method for more information about exiting.</remarks>
      <seealso cref="ApplicationMgr.Shutdown" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.UIMessageEvent">
      <summary>Forwards TestStand Engine events before the manager controls process them.</summary>
      <remarks>Use this event to handle messages before the manager controls handle them.
The Application Manager control automatically calls the UIMessage.Acknowledge method when this event completes. Therefore, you do not have to directly call the <c>UIMessage.Acknowledge</c> method from within this event.</remarks>
      <param name="uiMsg">Specifies a TestStand User Interface message.</param>
      <param name="cancel">Set this parameter to <c>True</c> when you do not want the manager controls to handle this event. Setting this parameter to <c>True</c> can improve performance in some cases by preventing TestStand from storing user interface message data in the internal cache.
<para>Note: National Instruments recommends using this parameter only when performance is a concern. Preventing the manager controls from receiving messages needed to track the state of the TestStand Engine can produce unpredictable behavior in the application.</para></param>
      <seealso cref="ApplicationMgr.AfterUIMessageEvent" />
      <seealso cref="ApplicationMgr.UserMessage" />
      <seealso cref="&quot;UIMessage&quot;javascript:APILink('/RefTopics/UIMessage.htm')" />
      <seealso cref="&quot;UIMessage.Acknowledge&quot;javascript:APILink('/RefTopics/UIMessage_Acknowledge_M.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.SequenceFileOpened">
      <summary>Occurs when a sequence file is opened.</summary>
      <param name="file">Specifies the sequence file that opened.</param>
      <param name="alreadyLoaded">If this parameter is <c>True</c>, the sequence file was already opened.</param>
      <seealso cref="ApplicationMgr.DisplaySequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFileDialog" />
      <seealso cref="ApplicationMgr.OpenSequenceFilesDialog" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.SequenceFileClosed">
      <summary><para>Note: This event is obsolete. Use the ApplicationMgr.SequenceFileClosing event instead.</para></summary>
      <remarks>Occurs when the application has closed a sequence file. You can use this event, but unsaved sequence files always pass in an empty string for the pathName parameter so no method exists for distinguishing the files.</remarks>
      <param name="pathName">Specifies the path of the closed sequence file.</param>
      <seealso cref="ApplicationMgr.CloseAllSequenceFiles" />
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.QueryCloseSequenceFile" />
      <seealso cref="ApplicationMgr.SequenceFileClosing" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.UserChanged">
      <summary>Occurs when the current user logged in changes.</summary>
      <remarks>Use this event to update the parts of the user interface that depend on user permissions when the current user logged in changes.</remarks>
      <param name="user">Specifies the current user. When this parameter is <c>NULL</c>, no user is logged in.</param>
      <seealso cref="ApplicationMgr.Login" />
      <seealso cref="ApplicationMgr.Logout" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.Wait">
      <summary>Occurs when the application is performing lengthy tasks.</summary>
      <remarks>Use this event to display or remove a wait cursor or other indicator to show when the application is busy.</remarks>
      <param name="showWait">When this parameter is <c>True</c>, the application has started a long operation. When this parameter is <c>False</c>, the application has finished the long operation.</param>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.ReportError">
      <summary>Occurs when an error is reported. This event notifies the application of errors that occur while the user operates connected controls. This event is also called when the ApplicationMgr.RaiseError method is called.</summary>
      <remarks>Use this event to display an error message to the user of the user interface.</remarks>
      <param name="errorCode">Specifies the error code for the error that caused the event.</param>
      <param name="errorMessage">Specifies the descriptive error string.</param>
      <seealso cref="ApplicationMgr.RaiseError" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.QueryCloseExecution">
      <summary>Occurs when the Application Manager control is attempting to close an execution.</summary>
      <remarks>Calls to the ApplicationMgr.Shutdown, ApplicationMgr.CloseExecution, and ApplicationMgr.CloseAllExecutions methods result in closing executions and calling this event. 
You can use this event to inform the user that an execution is closing and to allow the user to confirm that this is the desired action.</remarks>
      <param name="exec">Specifies the execution about to be closed.</param>
      <param name="runState">Specifies the run state of the execution.</param>
      <param name="opt">Specifies to cancel the closing of the execution; automatically close, abort, or terminate the running execution; or prompt the user for action. Refer to the QueryCloseExecutionOptions enumeration for more information about options for closing executions.</param>
      <seealso cref="ApplicationMgr.CloseAllExecutions" />
      <seealso cref="ApplicationMgr.CloseExecution" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="QueryCloseExecutionOptions" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.ExecutionClosed">
      <summary>Occurs when the Application Manager control closes an execution.</summary>
      <param name="exec">Specifies the execution that has been closed.</param>
      <seealso cref="ApplicationMgr" />
      <seealso cref="ApplicationMgr.EndExecution" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.QueryCloseSequenceFile">
      <summary>Occurs before a sequence file is closed.</summary>
      <remarks>Use this event to prompt the user for confirmation on closing the sequence file or to stop the sequence file from closing.</remarks>
      <param name="file">Specifies the sequence file that is closing.</param>
      <param name="cancel">Set this parameter to <c>True</c> when you want to stop the sequence file from closing.</param>
      <seealso cref="ApplicationMgr.CloseAllSequenceFiles" />
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.QueryShutdown">
      <summary>Occurs before the Application Manager control initiates a shutdown.</summary>
      <param name="opt">Refer to the QueryShutdownOptions enumeration for more information about constants with this parameter.</param>
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="QueryShutdownOptions" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.DisplaySequenceFile">
      <summary>Occurs when a sequence file is opened directly or in response to a <c>UIMsg_OpenWindows</c> event TestStand sends.</summary>
      <remarks>Use this event to display the sequence file in a Sequence File window by setting the SequenceFileViewMgr.SequenceFile property on the SequenceFileView Manager control for the window.</remarks>
      <param name="file">Specifies the sequence file to display.</param>
      <param name="reason">Specifies the reason why the event was generated. Refer to the SequenceFileDisplayReasons enumeration for more information about reasons for sequence file actions.</param>
      <seealso cref="SequenceFileDisplayReasons" />
      <seealso cref="SequenceFileViewMgr.SequenceFile" />
      <seealso cref="&quot;UIMsg_OpenWindows&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.DisplayExecution">
      <summary>Occurs when a visible execution starts, when an execution breaks, or in response to a <c>UIMsg_OpenWindow</c> or a <c>UIMsg_GotoLocation</c> user interface message. Use the reason parameter to find out why this event was called.</summary>
      <remarks>Use this event to display the execution in a window by setting the ExecutionViewMgr.Execution property on the ExecutionView Manager control for the window.</remarks>
      <param name="exec">Specifies the execution to display.</param>
      <param name="reason">Specifies the reason why the event was generated. Refer to the ExecutionDisplayReasons enumeration for more information about reasons for execution actions.</param>
      <seealso cref="ApplicationMgr.CurrentUIMessage" />
      <seealso cref="ApplicationMgr.GetVisible" />
      <seealso cref="ApplicationMgr.SetVisible" />
      <seealso cref="ExecutionDisplayReasons" />
      <seealso cref="ExecutionViewMgr.Execution" />
      <seealso cref="&quot;UIMsg_OpenWindow&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.DisplayReport">
      <summary>Occurs when the <c>UIMsg_DisplayReport</c> user interface message is received.</summary>
      <remarks>Use this event to show the window that displays the report.</remarks>
      <param name="exec">Specifies the execution that contains the report to display.</param>
      <seealso cref="&quot;UIMessageCodes&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.ShutDownCompleted">
      <summary>Occurs when the TestStand Engine sends the <c>UIMsg_ShutDownComplete</c> message. Use the ApplicationMgr.Shutdown method to initiate the shutdown process.</summary>
      <seealso cref="ApplicationMgr.ExitApplication" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.ShutDownCancelled" />
      <seealso cref="&quot;UIMsg_ShutDownComplete&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.ShutDownCancelled">
      <summary>Occurs when the Engine.ShutDown method is cancelled.</summary>
      <seealso cref="ApplicationMgr.QueryShutdown" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.ShutDownCompleted" />
      <seealso cref="&quot;Engine.ShutDown&quot;javascript:APILink('/RefTopics/Engine_ShutDown_M.htm')" />
      <seealso cref="&quot;UIMsg_ShutDownCancelled&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.StartExecution">
      <summary>Occurs when an execution starts.</summary>
      <param name="exec">Specifies the newly started execution.</param>
      <param name="thrd">Specifies the thread of the execution.</param>
      <param name="initiallyHidden">Specifies whether the execution is initially hidden.</param>
      <seealso cref="ApplicationMgr.EndExecution" />
      <seealso cref="ApplicationMgr.ExecutionClosed" />
      <seealso cref="&quot;UIMsg_ExecutionCreated&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.EndExecution">
      <summary>Occurs when an execution ends and the TestStand Engine sends a <c>UIMsg_EndExecution</c> message.</summary>
      <param name="exec">Specifies the execution that has ended.</param>
      <seealso cref="ApplicationMgr.ExecutionClosed" />
      <seealso cref="ApplicationMgr.StartExecution" />
      <seealso cref="&quot;UIMsg_EndExecution&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.BreakOnRunTimeError">
      <summary>Occurs when TestStand sends the <c>UIMsg_BreakOnRunTimeErrorMessage</c> message.</summary>
      <remarks>Use this event to launch a custom run-time error dialog box or to specify whether the Application Manager control launches a Run-Time Error dialog box or suspends the execution. You can change the Execution.RTEOptionForThisExecution property for the execution in this event before the Application Manager control handles it.</remarks>
      <param name="exec">Specifies the execution to which the event applies.</param>
      <param name="initiatingThread">Specifies the thread that sent the run-time error notification.</param>
      <param name="showDialog">The Application Manager control launches a Run-Time Error dialog box when the <c>Execution.RTEOptionForThisExecution</c> property is set to <c>RTEOption_ShowDialog</c>. Set this parameter to <c>False</c> when you do not want the Application Manager control to launch the Run-Time Error dialog box. Do not set this parameter to <c>False</c> to replace the default run-time error dialog box. Instead, handle the ApplicationMgr.DisplayCustomRunTimeErrorDialog event.
By default, this parameter is <c>True</c>.</param>
      <param name="breakExecution">Set this parameter to <c>True</c> to pause the current execution.
By default, this parameter is <c>False</c>.</param>
      <seealso cref="&quot;Execution.RTEOptionForThisExecution&quot;javascript:APILink('/RefTopics/Execution_RTEOptionForThisExecution_P.htm')" />
      <seealso cref="&quot;Run-Time Error dialog box&quot;javascript:RefLink('/InfoTopics/DB_Run_Time_Error.htm')" />
      <seealso cref="&quot;StationOptions.RTEOption&quot;javascript:APILink('/RefTopics/StationOptions_RTEOption_P.htm')" />
      <seealso cref="&quot;UIMsg_BreakOnRunTimeError&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.UserMessage">
      <summary>Occurs when an application component posts a user-defined UIMessage. A user-defined user interface message has an event code value that is equal to or greater than <c>UIMsg_UserMessageBase (value: 10000)</c>.</summary>
      <remarks>The Application Manager control automatically acknowledges the user message when this event completes. Therefore, you do not have to directly call the UIMessage.Acknowledge method from within this event.
Messages the Engine.RegisterUIMessage method defines do not generate an <c>ApplicationMgr.UserMessage</c> event, but TestStand does send the message to ApplicationMgr.UIMessageEvent.</remarks>
      <param name="uiMsg">Specifies the user-defined UIMessage object.</param>
      <seealso cref="ApplicationMgr.UIMessageEvent" />
      <seealso cref="&quot;Engine.RegisterUIMessage&quot;javascript:APILink('/RefTopics/Engine_RegisterUIMessage_M.htm')" />
      <seealso cref="&quot;Engine.PostUIMessage&quot;javascript:APILink('/RefTopics/Engine_PostUIMessage_M.htm')" />
      <seealso cref="&quot;UIMessage&quot;javascript:APILink('/RefTopics/UIMessage.htm')" />
      <seealso cref="&quot;UIMessage.Acknowledge&quot;javascript:APILink('/RefTopics/UIMessage_Acknowledge_M.htm')" />
      <seealso cref="&quot;UIMsg_UserMessage&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.Break">
      <summary>Occurs when any execution breaks.</summary>
      <remarks>An ApplicationMgr.DisplayExecution event follows this event.</remarks>
      <param name="exec">Specifies a paused execution.</param>
      <seealso cref="ApplicationMgr.DisplayExecution" />
      <seealso cref="&quot;UIMsg_Break&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetImageName(NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Returns the current image name for an image source in the Application Manager control. Use the Images.FindImage method to acquire a reference to the image.</summary>
      <returns>The current image name for the image source you specify.</returns>
      <param name="imageSource">Specifies the type of image source from which to obtain an image name.</param>
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="ExecutionViewMgr.GetImageName" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
      <seealso cref="SequenceFileViewMgr.GetImageName" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetImageName(NationalInstruments.TestStand.Interop.UI.ImageSources)">
      <summary>Returns the current image name for an image source in the Application Manager control. Use the Images.FindImage method to acquire a reference to the image.</summary>
      <returns>The current image name for the image source you specify.</returns>
      <param name="imageSource">Specifies the type of image source from which to obtain an image name.</param>
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="ExecutionViewMgr.GetImageName" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
      <seealso cref="SequenceFileViewMgr.GetImageName" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.PostCommandExecute">
      <summary>Occurs when a caller invokes the Command.Execute method. The event occurs after the Command object performs an action.</summary>
      <param name="command">Specifies the command that executed.</param>
      <seealso cref="ApplicationMgr.PreCommandExecute" />
      <seealso cref="Command.Execute" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.PreCommandExecute">
      <summary>Occurs when a caller invokes the Command.Execute method. When you return <c>False</c> through the cancel parameter, the <c>Command.Execute</c> method does not perform an action and the ApplicationMgr.PostCommandExecute event does not occur.</summary>
      <param name="command">Specifies the command about to execute.</param>
      <param name="cancel">Set this parameter to <c>False</c> to prevent the command from executing. When you cancel the command execution, you do not receive an ApplicationMgr.PostCommandExecute event.</param>
      <seealso cref="ApplicationMgr.PostCommandExecute" />
      <seealso cref="Command.Execute" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.RefreshWindows">
      <summary>Occurs when a <c>UIMsg_RefreshWindows</c> UIMessage posts. Handle this event to refresh custom controls as needed.</summary>
      <remarks>A step or callback sequence typically posts the <c>UIMsg_RefreshWindows</c> UIMessage to force a refresh, such as updating the status of a step in the Execution view when TestStand does not normally update it.</remarks>
      <param name="activeXData">Specifies the ActiveXData of the UIMessage object. Specify <c>NULL</c> to refresh data for all files and executions. Specify a PropertyObjectFile to refresh the data of a specific file. Specify a SequenceContext to refresh the SequenceContext of an execution. You can also specify an Object Reference Array that contains multiple values.</param>
      <seealso cref="ExecutionViewMgr.RefreshWindow" />
      <seealso cref="&quot;PropertyObjectFile&quot;javascript:APILink('/RefTopics/PropertyObjectFile.htm')" />
      <seealso cref="&quot;SequenceContext&quot;javascript:APILink('/RefTopics/SequenceContext.htm')" />
      <seealso cref="SequenceFileViewMgr.RefreshWindow" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.RefreshAllViewMgrs">
      <summary>Refreshes all connected controls for all manager controls.</summary>
      <seealso cref="ApplicationMgr.Refresh" />
      <seealso cref="ExecutionViewMgr.Refresh" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.RefreshAllViewMgrs">
      <summary>Refreshes all connected controls for all manager controls.</summary>
      <seealso cref="ApplicationMgr.Refresh" />
      <seealso cref="ExecutionViewMgr.Refresh" />
      <seealso cref="SequenceFileViewMgr.Refresh" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.IsShuttingDown">
      <summary>Returns <c>True</c> when the Application Manager control is shutting down. The Application Manager control shuts down between the time when the ApplicationMgr.Shutdown method is called until the ApplicationMgr.ExitApplication or ApplicationMgr.ShutDownCancelled event is called.</summary>
      <seealso cref="ApplicationMgr.ExitApplication" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.ShutDownCancelled" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.IsShuttingDown">
      <summary>Returns <c>True</c> when the Application Manager control is shutting down. The Application Manager control shuts down between the time when the ApplicationMgr.Shutdown method is called until the ApplicationMgr.ExitApplication or ApplicationMgr.ShutDownCancelled event is called.</summary>
      <seealso cref="ApplicationMgr.ExitApplication" />
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.ShutDownCancelled" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.IsStarted">
      <summary>Returns <c>True</c> when the ApplicationMgr.Start method has been called. Returns <c>False</c> when the Application Manager control has been shutdown.</summary>
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.IsStarted">
      <summary>Returns <c>True</c> when the ApplicationMgr.Start method has been called. Returns <c>False</c> when the Application Manager control has been shutdown.</summary>
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.OpenSequenceFilesDialog">
      <summary>Launches an Open File dialog box, in which you can select more than one sequence file.</summary>
      <remarks>This method adds the opened sequence files to the SequenceFiles collection and generates the ApplicationMgr.SequenceFileOpened event for each opened file and generates the ApplicationMgr.DisplaySequenceFile event for the first file opened.</remarks>
      <returns>A collection of the opened sequence files.</returns>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.DisplaySequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFileDialog" />
      <seealso cref="ApplicationMgr.SequenceFileOpened" />
      <seealso cref="&quot;Open File dialog box&quot;javascript:RefLink('/InfoTopics/DB_Open_File.htm')" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.OpenSequenceFilesDialog">
      <summary>Launches an Open File dialog box, in which you can select more than one sequence file.</summary>
      <remarks>This method adds the opened sequence files to the SequenceFiles collection and generates the ApplicationMgr.SequenceFileOpened event for each opened file and generates the ApplicationMgr.DisplaySequenceFile event for the first file opened.</remarks>
      <returns>A collection of the opened sequence files.</returns>
      <seealso cref="ApplicationMgr.CloseSequenceFile" />
      <seealso cref="ApplicationMgr.DisplaySequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFile" />
      <seealso cref="ApplicationMgr.OpenSequenceFileDialog" />
      <seealso cref="ApplicationMgr.SequenceFileOpened" />
      <seealso cref="&quot;Open File dialog box&quot;javascript:RefLink('/InfoTopics/DB_Open_File.htm')" />
      <seealso cref="SequenceFiles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ApplicationWillExitOnStart">
      <summary>Returns <c>True</c> when the application exits on start as a result of using the command-line switch <c>/?</c> or <c>/useExisting</c>. Check this property before you call the ApplicationMgr.Start method. When this property is <c>True</c>, do not launch a splash screen or do any unnecessary time-consuming tasks.
</summary>
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ApplicationWillExitOnStart">
      <summary>Returns <c>True</c> when the application exits on start as a result of using the command-line switch <c>/?</c> or <c>/useExisting</c>. Check this property before you call the ApplicationMgr.Start method. When this property is <c>True</c>, do not launch a splash screen or do any unnecessary time-consuming tasks.
</summary>
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.QueryReloadSequenceFile">
      <summary>Occurs when the Application Manager control wants to reload a modified sequence file because you called the ApplicationMgr.ReloadModifiedSequenceFiles method or because the Application Manager control detected a modified sequence file.</summary>
      <remarks>Use this event to customize how the application prompts the user to reload the modified sequence file or to reload or ignore modified sequence files without prompting the user.</remarks>
      <param name="file">Specifies the sequence file to reload.</param>
      <param name="opt">Use QueryReloadSequenceFileOptions with this parameter. This parameter is initialized to <c>QueryReloadSequenceFile_Prompt</c>. You can change the value of this parameter to make the Application Manager control reload or discard the modified file without prompting the user.</param>
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.ReloadModifiedFilesInterval" />
      <seealso cref="ApplicationMgr.ReloadModifiedSequenceFilesEx" />
      <seealso cref="QueryReloadSequenceFileOptions" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.ProcessUserCommands">
      <summary><para>Note: This event is obsolete. Use the ApplicationMgr.ProcessUserCommandLineArguments event instead.</para></summary>
      <remarks>Use this event to process custom command-line arguments. This event occurs when the ApplicationMgr.Start method is called and when another instance of the application is executed with the <c>/useExisting</c> command-line switch. This event occurs before the Application Manager control processes any command-line arguments.</remarks>
      <param name="cmds">Specifies the user command-line arguments. This collection is created by splitting up the command line used to start the application using white space as a delimiter. When the ApplicationMgr.ProcessCommandLine property is <c>True</c>, the first argument the Application Manager control does not recognize marks the start of the user arguments. When the <c>ApplicationMgr.ProcessCommandLine</c> property is <c>False</c>, all arguments are user arguments.</param>
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
      <seealso cref="ApplicationMgr.ProcessUserCommandLineArguments" />
      <seealso cref="ApplicationMgr.Start" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ExecutionEntryPoints">
      <summary>Returns the set of Execution entry points that the station model sequence file defines. The collection includes only entry points that set the Sequence.ShowEntryPointForAllWindows property.</summary>
      <remarks>This collection can change when the station model sequence file changes.</remarks>
      <seealso cref=".ConfigurationEntryPoints" />
      <seealso cref="&quot;Engine.GetStationModelSequenceFile&quot;javascript:APILink('/RefTopics/Engine_GetStationModelSequenceFile_M.htm')" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr.ExecutionEntryPoints" />
      <seealso cref="&quot;Sequence.ShowEntryPointForAllWindows&quot;javascript:APILink('/RefTopics/Sequence_ShowEntryPointForAllWindows_P.htm')" />
      <seealso cref="SequenceFileViewMgr.ExecutionEntryPoints" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ExecutionEntryPoints">
      <summary>Returns the set of Execution entry points that the station model sequence file defines. The collection includes only entry points that set the Sequence.ShowEntryPointForAllWindows property.</summary>
      <remarks>This collection can change when the station model sequence file changes.</remarks>
      <seealso cref=".ConfigurationEntryPoints" />
      <seealso cref="&quot;Engine.GetStationModelSequenceFile&quot;javascript:APILink('/RefTopics/Engine_GetStationModelSequenceFile_M.htm')" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr.ExecutionEntryPoints" />
      <seealso cref="&quot;Sequence.ShowEntryPointForAllWindows&quot;javascript:APILink('/RefTopics/Sequence_ShowEntryPointForAllWindows_P.htm')" />
      <seealso cref="SequenceFileViewMgr.ExecutionEntryPoints" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ConfigurationEntryPoints">
      <summary>Returns the set of Configuration entry points that the station model sequence file defines.</summary>
      <remarks>This collection can change when the station model sequence file changes.</remarks>
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="&quot;Engine.GetStationModelSequenceFile&quot;javascript:APILink('/RefTopics/Engine_GetStationModelSequenceFile_M.htm')" />
      <seealso cref="&quot;EntryPoints&quot;EntryPoints.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ConfigurationEntryPoints">
      <summary>Returns the set of Configuration entry points that the station model sequence file defines.</summary>
      <remarks>This collection can change when the station model sequence file changes.</remarks>
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="&quot;Engine.GetStationModelSequenceFile&quot;javascript:APILink('/RefTopics/Engine_GetStationModelSequenceFile_M.htm')" />
      <seealso cref="&quot;EntryPoints&quot;EntryPoints.htm" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.AfterUIMessageEvent">
      <summary>Forwards TestStand Engine events after the manager controls process them.</summary>
      <remarks>Use this event to handle messages after the manager controls handle them.
The Application Manager control automatically calls the UIMessage.Acknowledge method when this event completes. Therefore, you do not have to directly call the <c>UIMessage.Acknowledge</c> method from within this event.</remarks>
      <param name="uiMsg">A TestStand user interface message.</param>
      <seealso cref="ApplicationMgr.UIMessageEvent" />
      <seealso cref="ApplicationMgr.UserMessage" />
      <seealso cref="&quot;UIMessage&quot;javascript:APILink('/RefTopics/UIMessage.htm')" />
      <seealso cref="&quot;UIMessage.Acknowledge&quot;javascript:APILink('/RefTopics/UIMessage_Acknowledge_M.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.AddCommandLineArgumentsHelp(System.String,System.String,System.String)">
      <summary>Use this method to document command-line arguments you define.</summary>
      <remarks>The Application Manager control displays help for command-line arguments when you pass the <c>/?</c> switch to the application.</remarks>
      <param name="usage">The Application Manager control adds this string to the usage section in the command-line help dialog box.</param>
      <param name="parameterHelp">Specifies a string for the Application Manager control to add to the section of the command-line help dialog box that explains parameters to command-line arguments.</param>
      <param name="notes">Specifies a string for the Application Manager control to add to the end of the command-line help dialog box.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.AddCommandLineArgumentsHelp(System.String,System.String,System.String)">
      <summary>Use this method to document command-line arguments you define.</summary>
      <remarks>The Application Manager control displays help for command-line arguments when you pass the <c>/?</c> switch to the application.</remarks>
      <param name="usage">The Application Manager control adds this string to the usage section in the command-line help dialog box.</param>
      <param name="parameterHelp">Specifies a string for the Application Manager control to add to the section of the command-line help dialog box that explains parameters to command-line arguments.</param>
      <param name="notes">Specifies a string for the Application Manager control to add to the end of the command-line help dialog box.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.EndEdit(NationalInstruments.TestStand.Interop.API.PropertyObjectFile,NationalInstruments.TestStand.Interop.API.EditKinds,System.Object[],System.Boolean)">
      <summary>Call this method to generate an ApplicationMgr.EndEdit event that notifies the application an edit operation has completed. Call this method once for each call you make to the ApplicationMgr.BeginEdit method.</summary>
      <param name="editedFile">Specifies the file you are editing.</param>
      <param name="editKind">Specifies the kind of edit. Pass the same value you pass to the <c>ApplicationMgr.BeginEdit</c> method.</param>
      <param name="editedObjects">Specifies the edited objects. Pass the same objects you pass to the <c>ApplicationMgr.BeginEdit</c> method.</param>
      <param name="cancelled">Specifies whether the edit was cancelled. Pass the value you receive from the <c>ApplicationMgr.BeginEdit</c> method.</param>
      <seealso cref="ApplicationMgr.BeginEdit" />
      <seealso cref="&quot;ApplicationMgr.EndEdit event&quot;ApplicationMgr_EndEdit_E.htm" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.EndEdit(NationalInstruments.TestStand.Interop.API.PropertyObjectFile,NationalInstruments.TestStand.Interop.API.EditKinds,System.Object[],System.Boolean)">
      <summary>Call this method to generate an ApplicationMgr.EndEdit event that notifies the application an edit operation has completed. Call this method once for each call you make to the ApplicationMgr.BeginEdit method.</summary>
      <param name="editedFile">Specifies the file you are editing.</param>
      <param name="editKind">Specifies the kind of edit. Pass the same value you pass to the <c>ApplicationMgr.BeginEdit</c> method.</param>
      <param name="editedObjects">Specifies the edited objects. Pass the same objects you pass to the <c>ApplicationMgr.BeginEdit</c> method.</param>
      <param name="cancelled">Specifies whether the edit was cancelled. Pass the value you receive from the <c>ApplicationMgr.BeginEdit</c> method.</param>
      <seealso cref="ApplicationMgr.BeginEdit" />
      <seealso cref="&quot;ApplicationMgr.EndEdit event&quot;ApplicationMgr_EndEdit_E.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.EditModeShortcutKey">
      <summary>Specifies a key users can press to toggle the ApplicationMgr.IsEditor property. To prevent users from toggling the edit mode with a keystroke, set this property to <c>ShortcutKey_VK_NOT_A_KEY</c>.</summary>
      <remarks>Requests to switch an application to Editor Mode might prompt a user to activate a license when the Application Manager control cannot acquire the appropriate license to edit and save sequence files.</remarks>
      <seealso cref="ApplicationMgr.CommandLineCanChangeEditMode" />
      <seealso cref="ApplicationMgr.EditModeShortcutModifier" />
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="ShortcutKeys" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.EditModeShortcutKey">
      <summary>Specifies a key users can press to toggle the ApplicationMgr.IsEditor property. To prevent users from toggling the edit mode with a keystroke, set this property to <c>ShortcutKey_VK_NOT_A_KEY</c>.</summary>
      <remarks>Requests to switch an application to Editor Mode might prompt a user to activate a license when the Application Manager control cannot acquire the appropriate license to edit and save sequence files.</remarks>
      <seealso cref="ApplicationMgr.CommandLineCanChangeEditMode" />
      <seealso cref="ApplicationMgr.EditModeShortcutModifier" />
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="ShortcutKeys" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.EditModeShortcutModifier">
      <summary>Specifies a modifier for the key users can press to toggle the ApplicationMgr.IsEditor property. Use any combination of the ShortcutModifiers constants. </summary>
      <seealso cref="ApplicationMgr.CommandLineCanChangeEditMode" />
      <seealso cref="ApplicationMgr.EditModeShortcutKey" />
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="ShortcutModifiers" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.EditModeShortcutModifier">
      <summary>Specifies a modifier for the key users can press to toggle the ApplicationMgr.IsEditor property. Use any combination of the ShortcutModifiers constants. </summary>
      <seealso cref="ApplicationMgr.CommandLineCanChangeEditMode" />
      <seealso cref="ApplicationMgr.EditModeShortcutKey" />
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="ShortcutModifiers" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CanEdit(NationalInstruments.TestStand.Interop.API.PropertyObjectFile,NationalInstruments.TestStand.Interop.API.EditKinds)">
      <summary>Call this method to query whether the application gives permission to use the TestStand API to edit the sequence file the Application Manager control displays. This method generates an ApplicationMgr.CanEdit event to notify the application about the edit.</summary>
      <remarks>When the application implements custom editing actions on the selected sequence file using the TestStand API, call this method to determine whether to enable or disable the user interface element such as a menu or button that invokes the editing action. The application might not grant permission to edit based on a number of factors, such as the read-only state of the file, whether the file is executing, or other conditions the application considers when it responds to the <c>ApplicationMgr.CanEdit</c> event. Do not call this method to determine whether to enable a user interface element that invokes a Command object. Instead, obtain the value from the Command.Enabled property, which checks conditions specific to the command in addition to calling this method. When you connect a command to a button or when you connect a command to a menu item using the appropriate TestStand utility methods, the connection automatically queries the <c>Command.Enabled</c> property to enable or disable the button or menu item.</remarks>
      <returns>Returns a Boolean value that indicates whether the application allows or denies permission to perform the edit.</returns>
      <param name="editedFile">Specifies the file you are editing.</param>
      <param name="editKind">Specifies the kind of edit you are making.</param>
      <seealso cref="ApplicationMgr.BeginEdit" />
      <seealso cref="&quot;ApplicationMgr.CanEdit event&quot;ApplicationMgr_CanEdit_E.htm" />
      <seealso cref="ApplicationMgr.EndEdit" />
      <seealso cref="Command.Enabled" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CanEdit(NationalInstruments.TestStand.Interop.API.PropertyObjectFile,NationalInstruments.TestStand.Interop.API.EditKinds)">
      <summary>Call this method to query whether the application gives permission to use the TestStand API to edit the sequence file the Application Manager control displays. This method generates an ApplicationMgr.CanEdit event to notify the application about the edit.</summary>
      <remarks>When the application implements custom editing actions on the selected sequence file using the TestStand API, call this method to determine whether to enable or disable the user interface element such as a menu or button that invokes the editing action. The application might not grant permission to edit based on a number of factors, such as the read-only state of the file, whether the file is executing, or other conditions the application considers when it responds to the <c>ApplicationMgr.CanEdit</c> event. Do not call this method to determine whether to enable a user interface element that invokes a Command object. Instead, obtain the value from the Command.Enabled property, which checks conditions specific to the command in addition to calling this method. When you connect a command to a button or when you connect a command to a menu item using the appropriate TestStand utility methods, the connection automatically queries the <c>Command.Enabled</c> property to enable or disable the button or menu item.</remarks>
      <returns>Returns a Boolean value that indicates whether the application allows or denies permission to perform the edit.</returns>
      <param name="editedFile">Specifies the file you are editing.</param>
      <param name="editKind">Specifies the kind of edit you are making.</param>
      <seealso cref="ApplicationMgr.BeginEdit" />
      <seealso cref="&quot;ApplicationMgr.CanEdit event&quot;ApplicationMgr_CanEdit_E.htm" />
      <seealso cref="ApplicationMgr.EndEdit" />
      <seealso cref="Command.Enabled" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.BeginEdit(NationalInstruments.TestStand.Interop.API.PropertyObjectFile,NationalInstruments.TestStand.Interop.API.EditKinds,System.Object[])">
      <summary>Call this method before using the TestStand API to edit files the Application Manager and SequenceFileView Manager controls display. This method generates an ApplicationMgr.BeginEdit event to notify the application about the edit.</summary>
      <remarks>Always make a corresponding call to the ApplicationMgr.EndEdit method after you modify the objectsToEdit parameter. Call the <c>ApplicationMgr.EndEdit</c> method even when the application cancels the edit. Do not call the <c>ApplicationMgr.BeginEdit</c> or <c>ApplicationMgr.EndEdit</c> methods when you execute a Command object to perform an edit. The Command object automatically calls the <c>ApplicationMgr.BeginEdit</c> and <c>ApplicationMgr.EndEdit</c> methods.</remarks>
      <returns>Returns <c>True</c> when the application cancels the edit operation. When the application cancels the edit operation, do not modify the objectsToEdit parameter.</returns>
      <param name="editedFile">Specifies the file you are editing.</param>
      <param name="editKind">Specifies the kind of edit you are making.</param>
      <param name="objectsToEdit">Specifies the objects you are modifying.</param>
      <seealso cref="ApplicationMgr" />
      <seealso cref="&quot;ApplicationMgr.BeginEdit event&quot;ApplicationMgr_BeginEdit_E.htm" />
      <seealso cref="ApplicationMgr.CanEdit" />
      <seealso cref="ApplicationMgr.EndEdit" />
      <seealso cref="Command" />
      <seealso cref="Command.Execute" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.BeginEdit(NationalInstruments.TestStand.Interop.API.PropertyObjectFile,NationalInstruments.TestStand.Interop.API.EditKinds,System.Object[])">
      <summary>Call this method before using the TestStand API to edit files the Application Manager and SequenceFileView Manager controls display. This method generates an ApplicationMgr.BeginEdit event to notify the application about the edit.</summary>
      <remarks>Always make a corresponding call to the ApplicationMgr.EndEdit method after you modify the objectsToEdit parameter. Call the <c>ApplicationMgr.EndEdit</c> method even when the application cancels the edit. Do not call the <c>ApplicationMgr.BeginEdit</c> or <c>ApplicationMgr.EndEdit</c> methods when you execute a Command object to perform an edit. The Command object automatically calls the <c>ApplicationMgr.BeginEdit</c> and <c>ApplicationMgr.EndEdit</c> methods.</remarks>
      <returns>Returns <c>True</c> when the application cancels the edit operation. When the application cancels the edit operation, do not modify the objectsToEdit parameter.</returns>
      <param name="editedFile">Specifies the file you are editing.</param>
      <param name="editKind">Specifies the kind of edit you are making.</param>
      <param name="objectsToEdit">Specifies the objects you are modifying.</param>
      <seealso cref="ApplicationMgr" />
      <seealso cref="&quot;ApplicationMgr.BeginEdit event&quot;ApplicationMgr_BeginEdit_E.htm" />
      <seealso cref="ApplicationMgr.CanEdit" />
      <seealso cref="ApplicationMgr.EndEdit" />
      <seealso cref="Command" />
      <seealso cref="Command.Execute" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.BeginEdit">
      <summary>Occurs before an editing action initiates or when you explicitly call the ApplicationMgr.BeginEdit method.</summary>
      <param name="editedFile">Specifies the file being edited.</param>
      <param name="editKind">Specifies the type of editing action.</param>
      <param name="objectsToEdit">Specifies the objects to edit. The objectsToEdit parameter is passed as a one-dimensional array of containers where each array element is an object to edit. You can call the PropertyObject.GetNumElements method to obtain the length of the array and the PropertyObject.GetPropertyObjectByOffset method to access array elements.</param>
      <param name="cancel">Pass <c>True</c> to prevent the edit from occurring.</param>
      <param name="editDenialReasons">Specifies a set of EditingDenialReasons flags. When this parameter is non-zero, the flags in this parameter specify reasons why the edit cannot proceed. The application can clear these flags to allow the edit to proceed. For example, when the application integrates with source control systems and the <c>EditingDenialReason_IsReadOnly</c> flag is set, you could attempt to check out the selected file from source control to make it writable and then clear the <c>EditingDenialReason_IsReadOnly</c> flag if the checkout succeeds. <para>Note: You cannot clear the <c>EditingDenialReason_IsNotEditor</c> flag.</para></param>
      <seealso cref="&quot;ApplicationMgr.BeginEdit method&quot;ApplicationMgr_BeginEdit_M.htm" />
      <seealso cref="&quot;ApplicationMgr.CanEdit event&quot;ApplicationMgr_CanEdit_E.htm" />
      <seealso cref="&quot;ApplicationMgr.EndEdit event&quot;ApplicationMgr_EndEdit_E.htm" />
      <seealso cref="EditingDenialReasons" />
      <seealso cref="&quot;PropertyObject.GetNumElements&quot;javascript:APILink('/RefTopics/PropertyObject_GetNumElements_M.htm')" />
      <seealso cref="&quot;PropertyObject.GetPropertyObjectByOffset&quot;javascript:APILink('/RefTopics/PropertyObject_GetPropertyObjectByOffset_M.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.CanEdit">
      <summary>Occurs when an editing action determines the enabled state or when you explicitly call the ApplicationMgr.CanEdit method.</summary>
      <remarks>The application can handle this event to modify the conditions that determine when to allow editing actions.</remarks>
      <param name="editedFile">Specifies the file being edited.</param>
      <param name="editKind">Specifies the type of editing action.</param>
      <param name="canEditValue">Pass <c>False</c> to disable the editing action.</param>
      <param name="editDenialReasons">Specifies a set of EditingDenialReasons flags. When this parameter is non-zero, the flags in this parameter specify reasons why the edit cannot proceed. The application can clear these flags to allow the edit to proceed. For example, when the application integrates with source control systems and the <c>EditingDenialReason_IsReadOnly</c> flag is set, you could attempt to check out the selected file from source control to make it writable and then clear the <c>EditingDenialReason_IsReadOnly</c> flag if the checkout succeeds. <para>Note: You cannot clear the <c>EditingDenialReason_IsNotEditor</c> flag.</para></param>
      <seealso cref="&quot;ApplicationMgr.BeginEdit event&quot;ApplicationMgr_BeginEdit_E.htm" />
      <seealso cref="&quot;ApplicationMgr.CanEdit method&quot;ApplicationMgr_CanEdit_M.htm" />
      <seealso cref="&quot;ApplicationMgr.EndEdit event&quot;ApplicationMgr_EndEdit_E.htm" />
      <seealso cref="EditingDenialReasons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.EditModeChanged">
      <summary>Occurs when the ApplicationMgr.IsEditor property changes when directly set or when processing command-line arguments.</summary>
      <seealso cref="ApplicationMgr.IsEditor" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.EndEdit">
      <summary>Occurs after an editing action completes or when you explicitly call the ApplicationMgr.EndEdit method.</summary>
      <remarks>For each ApplicationMgr.BeginEdit event the application receives, the application also receives a corresponding EndEdit event.</remarks>
      <param name="editedFile">Specifies the file being edited.</param>
      <param name="editKind">Specifies the type of editing action.</param>
      <param name="editedObjects">Specifies the edited objects.</param>
      <param name="cancelled">Specifies whether the editing action was cancelled.</param>
      <seealso cref="&quot;ApplicationMgr.BeginEdit event&quot;ApplicationMgr_BeginEdit_E.htm" />
      <seealso cref="&quot;ApplicationMgr.CanEdit event&quot;ApplicationMgr_CanEdit_E.htm" />
      <seealso cref="&quot;ApplicationMgr.EndEdit method&quot;ApplicationMgr_EndEdit_M.htm" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.ProcessUserCommandLineArguments">
      <summary>Use this event to validate and process command-line arguments you define.</summary>
      <remarks>The Application Manager control generates this event while validating and processing command-line arguments. When the Application Manager control validates the command line, the Application Manager control generates this event for command-line arguments that it does not recognize. For these events, you must validate the unrecognized command-line arguments. In addition, when the Application Manager control processes the command line, the Application Manager control generates this event again for command-line arguments that it does not recognize. For these events, you must perform the action that the arguments require. Use the processCommand parameter of this event to determine whether you must perform the action that the arguments requires.</remarks>
      <param name="processCommand">The Application Manager control passes <c>False</c> to this parameter when the control is only validating and not actually processing the command line. When this parameter is <c>False</c>, handle this event the same as when this parameter is <c>True</c>, without performing the action the command-line specifies.</param>
      <param name="arguments">Specifies the command-line arguments passed to the application.</param>
      <param name="currentArgument">Specifies the index into arguments of the command-line argument the Application Manager control does not recognize. Increment this parameter for every argument you process. The Application Manager control continues processing the command-line arguments at this parameter when this event returns.</param>
      <param name="errorMessage">When you set the errorProcessing parameter to <c>ProcessCommandLineError_CustomError</c>, set this parameter to a custom error message.</param>
      <param name="errorProcessing">The Application Manager control initializes this parameter to <c>ProcessCommandLineError_None</c>. Set this parameter to <c>ProcessCommandLineError_UnrecognizedArgumentError</c> when you do not recognize the command-line argument. Set this parameter to <c>ProcessCommandLineError_CustomError</c> when you encounter any other error processing the command line. The Application Manager control stops processing the command line and generates the ReportError event when an error occurs while processing the command line.</param>
      <seealso cref="ApplicationMgr.AddCommandLineArgumentsHelp" />
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
      <seealso cref="ApplicationMgr.ReportError" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CommandLineCanChangeEditMode">
      <summary>Set this property to <c>False</c> to prevent users from changing the edit mode of the application by passing <c>/operatorInterface</c> or <c>/editor</c> on the command line.</summary>
      <remarks>Requests to launch an application in Editor Mode might prompt a user to activate a license when the Application Manager control cannot acquire the appropriate license to edit and save sequence files.</remarks>
      <seealso cref="ApplicationMgr.EditModeShortcutKey" />
      <seealso cref="ApplicationMgr.EditModeShortcutModifier" />
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CommandLineCanChangeEditMode">
      <summary>Set this property to <c>False</c> to prevent users from changing the edit mode of the application by passing <c>/operatorInterface</c> or <c>/editor</c> on the command line.</summary>
      <remarks>Requests to launch an application in Editor Mode might prompt a user to activate a license when the Application Manager control cannot acquire the appropriate license to edit and save sequence files.</remarks>
      <seealso cref="ApplicationMgr.EditModeShortcutKey" />
      <seealso cref="ApplicationMgr.EditModeShortcutModifier" />
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="&quot;TestStand Licensing Options&quot;javascript:TSHelpLink('/InfoTopics/Licensing_Options.html')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.CreateEmptySequenceFileOnStart">
      <summary>Specifies that the Application Manager control creates a new, empty sequence file at startup when the application is in edit mode, no initially opened sequences files exist, and a user logs in with the privilege to edit sequence files. When users open or create another file before making any changes to the empty automatically created file, the automatically created file closes.</summary>
      <remarks>If you do not want the Application Manager control to create an empty file for the user, set this property to <c>False</c> in the designer or in the application before you call the ApplicationMgr.Start method.</remarks>
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.ReloadSequenceFilesOnStart" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="&quot;Priv_EditSequenceFiles&quot;javascript:APILink('/RefTopics/UserPrivileges.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.CreateEmptySequenceFileOnStart">
      <summary>Specifies that the Application Manager control creates a new, empty sequence file at startup when the application is in edit mode, no initially opened sequences files exist, and a user logs in with the privilege to edit sequence files. When users open or create another file before making any changes to the empty automatically created file, the automatically created file closes.</summary>
      <remarks>If you do not want the Application Manager control to create an empty file for the user, set this property to <c>False</c> in the designer or in the application before you call the ApplicationMgr.Start method.</remarks>
      <seealso cref="ApplicationMgr.IsEditor" />
      <seealso cref="ApplicationMgr.ReloadSequenceFilesOnStart" />
      <seealso cref="ApplicationMgr.Start" />
      <seealso cref="&quot;Priv_EditSequenceFiles&quot;javascript:APILink('/RefTopics/UserPrivileges.htm')" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.DropFile">
      <summary>Occurs when you drop a file onto a TestStand User Interface (UI) Control that supports drag and drop. When you drop multiple files at once, the Application Manager control generates this event once for each file dropped.</summary>
      <remarks>This event is useful for supporting drag and drop of files that are not sequence files and must be handled differently. You can customize TestStand to natively support opening custom file formats and translating them into sequence files.
When you drop a file onto a <c>SequenceView</c> control and the file is a valid TestStand code module file, the control inserts a step with its code module configured to call the file. Before the <c>SequenceView</c> control inserts the step, the Application Manager control generates the <c>DropFile</c> event for the dropped file. If your application handles the <c>DropFile</c> event, the <c>SequenceView</c> control does not insert the step.</remarks>
      <param name="file">Specifies the absolute pathname of the file you dropped.
</param>
      <param name="handled">Set this parameter to <c>True</c> when you programmatically open the file in the event handler and do not want the Application Manager to try to open the file. When you do not set this parameter to <c>True</c>, the Application Manager control opens the file as a sequence file or, if the file is a valid  code module file and the file was dropped on a <c>SequenceView</c> control, the <c>SequenceView</c> control inserts a step configured to call the code module file.</param>
      <seealso cref="&quot;Translating custom file format into sequence files&quot;javascript:TSFundLink('/InfoTopics/Translators.html')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ReloadFile(NationalInstruments.TestStand.Interop.API.PropertyObjectFile@,System.Int32)">
      <summary>Reloads the specified file.
When the file is reloaded, this method returns a reference to the newly loaded version of the file in the file parameter. This method supports only sequence files the Application Manager control opens. For all other files, this method returns <c>False</c>.</summary>
      <remarks>TestStand generates an ApplicationMgr.QueryReloadSequenceFile event to allow the application to cancel the reload operation or specify to prompt the user to reload the file. 
When you specify ReloadFileOption_NoOptions for the options parameter for this method and an <c>ApplicationMgr.QueryReloadSequenceFile</c> event does not alter the opt parameter of the event, TestStand does not prompt to reload the file. 
When you specify ReloadFileOption_OnlyIfModifiedInMemory or ReloadFileOption_OnlyIfModifiedOnDisk for the options parameter to this method and an <c>ApplicationMgr.QueryReloadSequenceFile</c> event does not alter the opt parameter of the event, TestStand prompts the user to reload the file.</remarks>
      <returns>Returns <c>True</c> when the file was reloaded. This method returns <c>False</c> when the TestStand Engine cannot unload the file, when an ApplicationMgr.QueryReloadSequenceFile event cancels the operation, or when TestStand prompts the user and the user cancels the operation.</returns>
      <param name="file">Specifies a reference to the file you want to reload. The reference changes to the reloaded version of the file when TestStand reloads the file.</param>
      <param name="options">Specifies one or more ReloadFileOptions constants. Use the bitwise-OR operator to specify multiple options. Pass <c>0</c> to reload the file unconditionally.</param>
      <seealso cref="&quot;ApplicationMgr.QueryReloadSequenceFile event&quot;ApplicationMgr_QueryReloadSequenceFile_E.htm" />
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.ReloadModifiedSequenceFilesEx" />
      <seealso cref="ReloadFileOptions" />
      <seealso cref="&quot;SequenceFile.CanUnload&quot;javascript:APILink('/RefTopics/SequenceFile_CanUnload_P.htm')" />
      <seealso cref="&quot;SequenceFile.IsExecuting&quot;javascript:APILink('/RefTopics/SequenceFile_IsExecuting_P.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ReloadFile(NationalInstruments.TestStand.Interop.API.PropertyObjectFile@,System.Int32)">
      <summary>Reloads the specified file.
When the file is reloaded, this method returns a reference to the newly loaded version of the file in the file parameter. This method supports only sequence files the Application Manager control opens. For all other files, this method returns <c>False</c>.</summary>
      <remarks>TestStand generates an ApplicationMgr.QueryReloadSequenceFile event to allow the application to cancel the reload operation or specify to prompt the user to reload the file. 
When you specify ReloadFileOption_NoOptions for the options parameter for this method and an <c>ApplicationMgr.QueryReloadSequenceFile</c> event does not alter the opt parameter of the event, TestStand does not prompt to reload the file. 
When you specify ReloadFileOption_OnlyIfModifiedInMemory or ReloadFileOption_OnlyIfModifiedOnDisk for the options parameter to this method and an <c>ApplicationMgr.QueryReloadSequenceFile</c> event does not alter the opt parameter of the event, TestStand prompts the user to reload the file.</remarks>
      <returns>Returns <c>True</c> when the file was reloaded. This method returns <c>False</c> when the TestStand Engine cannot unload the file, when an ApplicationMgr.QueryReloadSequenceFile event cancels the operation, or when TestStand prompts the user and the user cancels the operation.</returns>
      <param name="file">Specifies a reference to the file you want to reload. The reference changes to the reloaded version of the file when TestStand reloads the file.</param>
      <param name="options">Specifies one or more ReloadFileOptions constants. Use the bitwise-OR operator to specify multiple options. Pass <c>0</c> to reload the file unconditionally.</param>
      <seealso cref="&quot;ApplicationMgr.QueryReloadSequenceFile event&quot;ApplicationMgr_QueryReloadSequenceFile_E.htm" />
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.ReloadModifiedSequenceFilesEx" />
      <seealso cref="ReloadFileOptions" />
      <seealso cref="&quot;SequenceFile.CanUnload&quot;javascript:APILink('/RefTopics/SequenceFile_CanUnload_P.htm')" />
      <seealso cref="&quot;SequenceFile.IsExecuting&quot;javascript:APILink('/RefTopics/SequenceFile_IsExecuting_P.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetRunState(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Returns the run state of an execution.</summary>
      <remarks>The value obtained from this method does not necessarily correspond to the value obtained from the Execution.GetStates method. The <c>Execution.GetStates</c> method returns the instantaneous state of the execution. This method returns the current state the TestStand User Interface (UI) Controls display. 
<para>Note: When you write a user interface that uses TestStand UI Controls, National Instruments recommends using this method or the ExecutionViewMgr.RunState property instead of directly calling the <c>Execution.GetStates</c> method on the execution. A slight delay exists between when the instantaneous state of the execution changes and when TestStand updates the state this method returns to reflect the change. This occurs because the state this method returns does not change until TestStand processes the UIMessages involved, thus allowing for synchronization of the updates necessary for displaying an execution.</para></remarks>
      <param name="exec">Specifies the execution on which to operate.</param>
      <seealso cref="ApplicationMgr.GetTerminationState" />
      <seealso cref="&quot;Execution.GetStates&quot;javascript:APILink('/RefTopics/Execution_GetStates_M.htm')" />
      <seealso cref="ExecutionViewMgr.RunState" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetRunState(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Returns the run state of an execution.</summary>
      <remarks>The value obtained from this method does not necessarily correspond to the value obtained from the Execution.GetStates method. The <c>Execution.GetStates</c> method returns the instantaneous state of the execution. This method returns the current state the TestStand User Interface (UI) Controls display. 
<para>Note: When you write a user interface that uses TestStand UI Controls, National Instruments recommends using this method or the ExecutionViewMgr.RunState property instead of directly calling the <c>Execution.GetStates</c> method on the execution. A slight delay exists between when the instantaneous state of the execution changes and when TestStand updates the state this method returns to reflect the change. This occurs because the state this method returns does not change until TestStand processes the UIMessages involved, thus allowing for synchronization of the updates necessary for displaying an execution.</para></remarks>
      <param name="exec">Specifies the execution on which to operate.</param>
      <seealso cref="ApplicationMgr.GetTerminationState" />
      <seealso cref="&quot;Execution.GetStates&quot;javascript:APILink('/RefTopics/Execution_GetStates_M.htm')" />
      <seealso cref="ExecutionViewMgr.RunState" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.GetTerminationState(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Returns the termination state of an execution.</summary>
      <remarks>The value obtained from this method does not necessarily correspond to the value obtained from the Execution.GetStates method. The <c>Execution.GetStates</c> method returns the instantaneous state of the execution. This method returns the current state that the TestStand User Interface (UI) Controls display. 
<para>Note: When you write a user interface that uses TestStand UI Controls, National Instruments recommends using this method or the ExecutionViewMgr.TerminationState property instead of directly calling the <c>Execution.GetStates</c> method on the execution. A slight delay exists between when the instantaneous state of the execution changes and when TestStand updates the state this method returns to reflect the change. This occurs because the state this method returns does not change until TestStand processes the UIMessages involved, thus allowing for synchronization of the updates necessary for displaying an execution.</para></remarks>
      <param name="exec">Specifies the execution on which to operate.</param>
      <seealso cref="ApplicationMgr.GetRunState" />
      <seealso cref="&quot;Execution.GetStates&quot;javascript:APILink('/RefTopics/Execution_GetStates_M.htm')" />
      <seealso cref="ExecutionViewMgr.TerminationState" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.GetTerminationState(NationalInstruments.TestStand.Interop.API.Execution)">
      <summary>Returns the termination state of an execution.</summary>
      <remarks>The value obtained from this method does not necessarily correspond to the value obtained from the Execution.GetStates method. The <c>Execution.GetStates</c> method returns the instantaneous state of the execution. This method returns the current state that the TestStand User Interface (UI) Controls display. 
<para>Note: When you write a user interface that uses TestStand UI Controls, National Instruments recommends using this method or the ExecutionViewMgr.TerminationState property instead of directly calling the <c>Execution.GetStates</c> method on the execution. A slight delay exists between when the instantaneous state of the execution changes and when TestStand updates the state this method returns to reflect the change. This occurs because the state this method returns does not change until TestStand processes the UIMessages involved, thus allowing for synchronization of the updates necessary for displaying an execution.</para></remarks>
      <param name="exec">Specifies the execution on which to operate.</param>
      <seealso cref="ApplicationMgr.GetRunState" />
      <seealso cref="&quot;Execution.GetStates&quot;javascript:APILink('/RefTopics/Execution_GetStates_M.htm')" />
      <seealso cref="ExecutionViewMgr.TerminationState" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.UseStepListConfigurations">
      <summary>Specifies whether the Application Manager control uses the selected step list configurations specified in the Edit Step List Configurations dialog box that set the non-border properties of connected SequenceView controls.
When this property is <c>True</c>, the Application Manager control enables commands that select or configure step list configuration. In addition, the non-border SequenceView properties you specify at edit time on the SequenceView property pages apply only when no applicable step list configurations exist in the application configuration file.
When this property is <c>False</c>, the Application Manager control hides commands that select or configure step list configurations, and the Application Manager control uses the non-border SequenceView properties you specify at edit time on the SequenceView property pages.</summary>
      <seealso cref="&quot;Edit Step List Configurations dialog box&quot;javascript:RefLink('/InfoTopics/DB_Step_List_Config.htm')" />
      <seealso cref="&quot;SequenceView Appearance Property Page&quot;../InfoTopics/SeqView_PropPage_Appearance.htm" />
      <seealso cref="&quot;SequenceView Columns Property Page&quot;../InfoTopics/SeqView_PropPage_Column.htm" />
      <seealso cref="&quot;SequenceView Fonts and Colors Property Page&quot;../InfoTopics/SeqView_PropPage_Font_Color.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.UseStepListConfigurations">
      <summary>Specifies whether the Application Manager control uses the selected step list configurations specified in the Edit Step List Configurations dialog box that set the non-border properties of connected SequenceView controls.
When this property is <c>True</c>, the Application Manager control enables commands that select or configure step list configuration. In addition, the non-border SequenceView properties you specify at edit time on the SequenceView property pages apply only when no applicable step list configurations exist in the application configuration file.
When this property is <c>False</c>, the Application Manager control hides commands that select or configure step list configurations, and the Application Manager control uses the non-border SequenceView properties you specify at edit time on the SequenceView property pages.</summary>
      <seealso cref="&quot;Edit Step List Configurations dialog box&quot;javascript:RefLink('/InfoTopics/DB_Step_List_Config.htm')" />
      <seealso cref="&quot;SequenceView Appearance Property Page&quot;../InfoTopics/SeqView_PropPage_Appearance.htm" />
      <seealso cref="&quot;SequenceView Columns Property Page&quot;../InfoTopics/SeqView_PropPage_Column.htm" />
      <seealso cref="&quot;SequenceView Fonts and Colors Property Page&quot;../InfoTopics/SeqView_PropPage_Font_Color.htm" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.SequenceFileClosing">
      <summary>Use this event when you need to perform cleanup or otherwise require a notification when the Application Manager control closes a sequence file. This event is generated immediately before the Application Manager control closes the file. The event handler for this event cannot cancel closing the file. Use the ApplicationMgr.QueryCloseSequenceFile event when you want an opportunity to cancel the closing of sequence files.</summary>
      <param name="file">Specifies a reference to the sequence file about to be closed.</param>
      <seealso cref="ApplicationMgr.QueryCloseSequenceFile" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ReloadModifiedSequenceFilesEx">
      <summary>Determines whether loaded sequence files have been modified on disk and generates an ApplicationMgr.QueryReloadSequenceFile event to determine whether to prompt you to reload any modified files.</summary>
      <remarks>This method also refreshes the read-only state of open sequence files and updates the ApplicationMgr.ConfigurationEntryPoints and ApplicationMgr.ExecutionEntryPoints properties. Use the ApplicationMgr.ReloadFile method to reload a specific file.</remarks>
      <returns>Returns <c>True</c> if this method reloads a sequence file.</returns>
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.ConfigurationEntryPoints" />
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.QueryReloadSequenceFile" />
      <seealso cref="ApplicationMgr.ReloadFile" />
      <seealso cref="ApplicationMgr.ReloadModifiedFilesInterval" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ReloadModifiedSequenceFilesEx">
      <summary>Determines whether loaded sequence files have been modified on disk and generates an ApplicationMgr.QueryReloadSequenceFile event to determine whether to prompt you to reload any modified files.</summary>
      <remarks>This method also refreshes the read-only state of open sequence files and updates the ApplicationMgr.ConfigurationEntryPoints and ApplicationMgr.ExecutionEntryPoints properties. Use the ApplicationMgr.ReloadFile method to reload a specific file.</remarks>
      <returns>Returns <c>True</c> if this method reloads a sequence file.</returns>
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.ConfigurationEntryPoints" />
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.QueryReloadSequenceFile" />
      <seealso cref="ApplicationMgr.ReloadFile" />
      <seealso cref="ApplicationMgr.ReloadModifiedFilesInterval" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IApplicationMgr.ExitCode">
      <summary>Specifies the exit code of a user interface.</summary>
      <remarks>The Application Manager control sets the value of this property based on the status of executions and uses the following exit codes to indicate the specified status:@table(2,8,True,Status!Exit Code!Run-time Error!the error code of the run-time error!Normal Exit!0!Command-line Error!1!Sequence Failed!2!Sequence Terminated!3!Sequence Aborted!4!Killed Threads!5)
If a run-time error with a non-negative error code occurs, the exit code is -17009 (<c>TS_Err_ConvertedErrorCode</c>).
As a user interface developer, set the exit code of the application to this property. The development environment you use determines how you return an exit code in an application. LabVIEW does not support returning exit codes.
If you use a command line to run the user interface, you must use the <c>start /wait</c> command to obtain the exit code from a user interface, as follows:
<para><code>start /wait TestExec -Quit -Run MainSequence SequenceFile1.seq</code></para>
Use the <c>–OutputToStdIO</c> command-line flag to send additional status information for completed executions to standard output.</remarks>
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ApplicationMgrClass.ExitCode">
      <summary>Specifies the exit code of a user interface.</summary>
      <remarks>The Application Manager control sets the value of this property based on the status of executions and uses the following exit codes to indicate the specified status:@table(2,8,True,Status!Exit Code!Run-time Error!the error code of the run-time error!Normal Exit!0!Command-line Error!1!Sequence Failed!2!Sequence Terminated!3!Sequence Aborted!4!Killed Threads!5)
If a run-time error with a non-negative error code occurs, the exit code is -17009 (<c>TS_Err_ConvertedErrorCode</c>).
As a user interface developer, set the exit code of the application to this property. The development environment you use determines how you return an exit code in an application. LabVIEW does not support returning exit codes.
If you use a command line to run the user interface, you must use the <c>start /wait</c> command to obtain the exit code from a user interface, as follows:
<para><code>start /wait TestExec -Quit -Run MainSequence SequenceFile1.seq</code></para>
Use the <c>–OutputToStdIO</c> command-line flag to send additional status information for completed executions to standard output.</remarks>
      <seealso cref="ApplicationMgr.ProcessCommandLine" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._ApplicationMgrEvents_Event.DisplayCustomRunTimeErrorDialog">
      <summary>Occurs before TestStand launches the default run-time error dialog box. You can use this event to launch a custom run-time error dialog box.</summary>
      <param name="ctxt">Specifies the SequenceContext in which the run-time error occurred.</param>
      <param name="breakExec">Set this parameter to <c>True</c> to pause the current execution. </param>
      <param name="doNotShowAgainForExecution">Set this parameter to <c>True</c> to set the Execution.RTEOptionForThisExecution property to the value of the rteOption parameter.</param>
      <param name="doNotShowAgainForBatch">Set this parameter to <c>True</c> to set the Thread.SetBatchRTEOption method to the value of the rteOption parameter.</param>
      <param name="rteOption">Use the RTEOptions constants to specify how TestStand handles the run-time error.</param>
      <param name="showDefaultDialog">Set this parameter to <c>True</c> to launch the default run-time error dialog box.</param>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.Command">
      <summary>Use Command objects in applications to implement a user interface element that performs a standard action, such as opening a sequence file or executing a set of selected steps in a sequence. A Command object determines the dimming, visibility, shortcut key, and caption for the menu item, button, or checkbox that invokes the command. The Command object also provides the implementation of the action, which it performs when you call the <c>Command.Execute</c> method. 
In many cases you can use a TestStand Utility Library function, such as <c>InsertCommandsInMenu</c>, instead of Command objects to create menu items that invoke the  commands you specify. You can also call the <c>ConnectCommand</c> method on a TestStand manager control to connect a command to a TestStand button or checkbox control.
To create Command objects, call the ApplicationMgr.NewCommands method to create a Commands collection. You specify the commands to create with the CommandKinds enumeration constants. When you call the Commands.InsertKind method, you can also specify a TestStand manager control. A command you create uses the specified manager control to determine the currently selected sequence file, execution, sequence, or steps. According to the selection and the type of command, the command determines the state of its properties, such as enabled and visible, and determines which items the command operates on when it executes. Some commands do not require a manager control, while others require a specific manager control. Refer to the CommandKinds enumeration for more information about which manager controls work with specific commands.
You can also create commands using the following methods:<para><para>&#160;&#160;&#160;&#160;* ApplicationMgr.GetCommand</para><para>&#160;&#160;&#160;&#160;* ExecutionViewMgr.GetCommand</para><para>&#160;&#160;&#160;&#160;* SequenceFileViewMgr.GetCommand</para><para>&#160;&#160;&#160;&#160;* Commands.InsertKind</para></para></summary>
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="ApplicationMgr.GetCommand" />
      <seealso cref="ApplicationMgr.NewCommands" />
      <seealso cref="CommandKinds" />
      <seealso cref="Commands" />
      <seealso cref="Commands.InsertKind" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="ExecutionViewMgr.GetCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.GetCommand" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.Enabled">
      <summary>Specifies to enable or disable the menu item or user interface element that invokes the command.</summary>
      <remarks>The command computes the value of this property according to the kind of command and the current state of the items to which the command applies. However, when you set this property, the command returns only the property values that you set for the remainder of the life of the Command object.</remarks>
      <seealso cref="Command.Visible" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.Visible">
      <summary>Specifies whether to show or hide the menu item or user interface element that invokes the command.</summary>
      <remarks>The command computes the value of this property according to the kind of command and the current state of the items to which the command applies. However, when you set this property, the command returns only the property values you set for the remainder of the life of the Command object.</remarks>
      <seealso cref=".Enabled" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.IsSeparator">
      <summary>Specifies the menu item or user interface element that represents the command displays as a menu separator or other appropriate user interface divider element when this property is <c>True</c>.</summary>
      <remarks>The command computes the value of this property according to the kind of command. However, when you set this property, the command returns only the property values you set for the remainder of the life of the Command object.</remarks>
      <seealso cref="Commands" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.IsToggle">
      <summary>Specifies whether the menu item or user interface element that represents the command can toggle between the on and off states. When this property is <c>True</c>, a menu item that represents the command displays a checkmark the user can enable or disable.</summary>
      <remarks>The command computes the value of this property according to the kind of command and the current state of the items to which the command applies. However, when you set this property, the command returns only the property values you set for the remainder of the life of the Command object.</remarks>
      <seealso cref="Command.ToggleState" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.ToggleState">
      <summary>When the Command.IsToggle property is <c>True</c>, this property specifies the on or off state of the menu item or user interface element that represents the command. When a menu item represents the command, the state of the menu item indicates the value of this property.</summary>
      <remarks>The command computes the value of this property according to the kind of command and the current state of the items to which the command applies. However, when you set this property, the command returns only the property values you set for the remainder of the life of the Command object.</remarks>
      <seealso cref="Command.IsToggle" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.ShortcutKey">
      <summary>Specifies which shortcut key to assign to a user interface element that represents a command.</summary>
      <remarks>Use the Command.ShortcutModifier property to specify &lt;Shift&gt;, &lt;Ctrl&gt;, and  &lt;Alt&gt; modifiers for the shortcut key. For example, to assign the shortcut <c>Ctrl+F12</c> to the command, set this property to <c>ShortcutKey_VK_F12</c> and set the <c>Command.ShortcutModifier</c> property to <c>ShortcutModifier_Control</c>.
The command computes the value of this property according to the kind of command and the current state of the items to which the command applies. However, when you set this property, the command returns only the property values you set for the remainder of the life of the Command object.</remarks>
      <seealso cref="Command.ShortcutModifier" />
      <seealso cref="Command.LVShortcutKey" />
      <seealso cref="Commands" />
      <seealso cref="ShortCutKeys" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.ShortcutModifier">
      <summary>Specifies which shortcut key modifiers to assign to a user interface element that represents a command.</summary>
      <remarks>The command computes the value of this property according to the kind of command and the current state of the items to which the command applies. However, when you set this property, the command returns only the property values you set for the remainder of the life of the Command object.</remarks>
      <seealso cref="Command.ShortcutKey" />
      <seealso cref="Commands" />
      <seealso cref="ShortcutModifiers" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.UserData">
      <summary>Holds a data item you associate with the Command object.</summary>
      <remarks>Typically, you do not use this property unless you are implementing an event handler that requires specific data you define.</remarks>
      <seealso cref="ApplicationMgr.PostCommandExecute" />
      <seealso cref="ApplicationMgr.PreCommandExecute" />
      <seealso cref="Command.UserObject" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.UserObject">
      <summary>Holds an ActiveX object you associate with the Command object.</summary>
      <remarks>Typically, you do not use this property unless you are implementing an event handler that requires specific data you define.</remarks>
      <seealso cref="ApplicationMgr.PostCommandExecute" />
      <seealso cref="ApplicationMgr.PreCommandExecute" />
      <seealso cref="Command.UserData" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.SequenceFileViewMgr">
      <summary>Specifies the SequenceFileView Manager control to which the command applies. The enabled, visible, or other states of the command, as well as the entity on which the command operates, vary according to the type of command and the SequenceFileView Manager control selections for the sequence file, sequence, step group, and steps.</summary>
      <remarks>A value of <c>NULL</c> specifies that the command does not apply to an SequenceFileView Manager control.</remarks>
      <seealso cref="Command.ExecutionViewMgr" />
      <seealso cref="Commands.InsertKind" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.ExecutionViewMgr">
      <summary>Specifies the ExecutionView Manager control to which the command applies. The enabled, visible, or other states of the command, as well as the entity on which the command operates, vary according to the type of command and the ExecutionView Manager control selections for the execution, thread, call stack, and steps.</summary>
      <remarks>A value of <c>NULL</c> specifies that the command does not apply to an ExecutionView Manager control.</remarks>
      <seealso cref="Command.SequenceFileViewMgr" />
      <seealso cref="Commands.InsertKind" />
      <seealso cref="ExecutionViewMgr" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.Kind">
      <summary>Returns a code that identifies the action the command performs.</summary>
      <seealso cref="Commands.InsertKind" />
      <seealso cref="CommandKinds" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.SubsidiaryCommands">
      <summary>Specifies the subsidiary commands the command contains. When a menu contains an item for the command, the subsidiary commands appear as items in a submenu that attach to the item for the command. When the command has no subsidiary commands, the value can be <c>NULL</c> or the Commands collection is empty.</summary>
      <seealso cref="Commands" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Command.GetDisplayName(System.String,System.Boolean)">
      <summary>Returns text that describes the command to the end user. The default text value is localized for the currently selected language. Typically, this text labels the menu item or button that invokes the command.</summary>
      <param name="acceleratorPrefix">Specifies the character(s) you want to precede the accelerator character, when one exists, in the display name the method returns. The accelerator prefix for menu items and button labels varies according to the programming environment. For example, LabVIEW uses <c>&quot;_&quot;</c>, LabWindows/CVI uses <c>&quot;__&quot;</c>, and C#, Microsoft Visual C++, and Microsoft Visual Basic .NET use <c>&quot;&amp;&quot;</c>. When you are not assigning the display name to the label of a user interface element that supports accelerators, pass an empty string.</param>
      <param name="includeShortcutText">Pass <c>True</c> to append characters that represent the shortcut key for the command to the display name the method returns. When the command does not have a shortcut key, the display name remains unchanged.</param>
      <seealso cref="Command.SetDisplayName" />
      <seealso cref="&quot;StationOptions.Language&quot;javascript:APILink('/RefTopics/StationOptions_Language_P.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Command.SetDisplayName(System.String)">
      <summary>Specifies text that describes the command to the user.</summary>
      <param name="val">Pass the new value for the command display name. When the new display name has a character you want to designate as the accelerator character, precede the character with an ampersand (<c>&amp;</c>).</param>
      <seealso cref="Command.GetDisplayName" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Command.Execute(System.Boolean)">
      <summary>Executes the action that the command performs.</summary>
      <param name="applicationHandlesError">Specifies how the method reports an error that occurs when executing the command. When this parameter is <c>False</c>, the method returns the error to the caller. When this parameter is <c>True</c>, the method calls the ApplicationMgr.ReportError event to report the error.</param>
      <seealso cref="ApplicationMgr.PostCommandExecute" />
      <seealso cref="ApplicationMgr.PreCommandExecute" />
      <seealso cref="ApplicationMgr.ReportError" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.LVShortcutKey">
      <summary>Specifies the shortcut key that invokes the menu item or user interface element that represents the command. Use this value for the shortcut key element of the short cut cluster input to the LabVIEW Set Menu Item Info function when you create a menu item for the command. This property accounts for the set of shortcut keys LabVIEW run-time menus allow.</summary>
      <remarks>All LabVIEW shortcut key operations require the &lt;Ctrl&gt; key to be pressed. Examples of shortcut key values include <c>&quot;x&quot;</c>, <c>&quot;w&quot;</c>, and <c>&quot;F12&quot;</c>.
Set the Command.LVShortcutModifier property to <c>True</c> to specify that the shortcut key requires the &lt;Shift&gt; key to be pressed to invoke the command.
The command computes the value of this property according to the kind of command and the current state of the items to which the command applies. However, when you set this property, the command returns only the property values you set for the remainder of the life of the Command object.</remarks>
      <seealso cref="Command.LVShortcutModifier" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.LVShortcutModifier">
      <summary>Specifies whether to include the &lt;Shift&gt; key for the shortcut key that invokes the menu item or user interface element that represents the command. Use this value for the include Shift key? element of the short cut cluster input to the LabVIEW Set Menu Item Info function when you create a menu item for the command.</summary>
      <remarks>The command computes the value of this property according to the kind of command and the current state of the items to which the command applies. However, when you set this property, the command returns only the property values you set for the remainder of the life of the Command object.</remarks>
      <seealso cref="Command.LVShortcutKey" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.IconName">
      <summary>Specifies the name of the icon that represents the command. This property specifies an empty string when the command does not have an icon.</summary>
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.EntryPointIndex">
      <summary>Returns the index of an Execution or Configuration entry point for a CommandKind_RunEntryPoint command. </summary>
      <seealso cref="Command.EntryPoint" />
      <seealso cref="CommandKinds" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Command.EntryPoint">
      <summary>Returns an EntryPoint object that represents an Execution or Configuration entry point for a CommandKind_RunEntryPoint command.</summary>
      <seealso cref="Command.EntryPointIndex" />
      <seealso cref="EntryPoint" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.Commands">
      <summary>Contains a set of Command objects.
To create new commands within the collection, call the Commands.InsertKind method.</summary>
      <seealso cref="ApplicationMgr.NewCommands" />
      <seealso cref="Command" />
      <seealso cref="Commands.InsertKind" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Commands.Item(System.Int32)">
      <summary>Returns a reference to an item at the specified index in the collection.</summary>
      <param name="itemIdx">Specifies the zero-based index. Use a non-negative number less than the value of the Commands.Count property.</param>
      <seealso cref="Command" />
      <seealso cref="Commands.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Commands.Count">
      <summary>Returns the number of items in the collection.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Commands.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Commands.Remove(System.Int32)">
      <summary>Removes the specified item from this collection, if it exists.</summary>
      <param name="itemIdx">Specifies the zero-based index of the item to remove.</param>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Commands.Insert(NationalInstruments.TestStand.Interop.UI.Command,System.Int32)">
      <summary>Adds a new item to the collection.</summary>
      <param name="item">Specifies the command object to insert.</param>
      <param name="insertBefore">Specifies the index of the existing command before which to insert the new command. When you want the new command to insert at the end, pass <c>-1</c> to this parameter.</param>
      <seealso cref="ApplicationMgr.GetCommand" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Commands.InsertKind(NationalInstruments.TestStand.Interop.UI.CommandKinds,System.Object,System.Int32,System.String,System.String,System.Int32@)">
      <summary>Inserts a new Command object or objects into the collection.</summary>
      <remarks>This method uses the menu name the currentMenuName parameter specifies to determine whether to insert entry point items that specify a matching menu hint name when you pass the following values to the cmdKind parameter:
<c>CommandKind_ExecutionEntryPointInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointInsertionMarker</c><br/><c>CommandKind_ExecutionEntryPointDefaultMenuInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointDefaultMenuInsertionMarker</c>
When an entry point does not specify a menu hint name or the menu hint names do not match any of the menu names listed in the allMenuNames parameter, the method creates commands to insert the entry point menus when you pass the following values to the cmdKind parameter:
<c>CommandKind_ExecutionEntryPointDefaultMenuInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointDefaultMenuInsertionMarker</c></remarks>
      <param name="cmdKind">Specifies the type of command to insert. Depending on the value you pass and the state of the application, the method might insert one command, a set of commands, or no commands.</param>
      <param name="managerControl">Pass a SequenceFileView Manager or ExecutionView Manager control when the command you insert requires it.</param>
      <param name="insertBefore">Specifies the position in the collection at which to insert the new command. Pass <c>-1</c> to insert the new command at the end of the collection.</param>
      <param name="currentMenuName">Specifies the name of the menu when you create commands to insert into a menu in a top-level menu bar. Otherwise, pass an empty string.
This method ignores accelerator prefix characters when comparing menu hints to the menu name you pass.</param>
      <param name="allMenuNames">Specifies the name of all top-level menus in order, separated by commas, when you create commands to insert into a menu in a top-level menu bar. Otherwise, pass an empty string. The commands use this to decide into which menu to insert based on the menu hint name.
This method ignores accelerator prefix characters when comparing menu hints to the menu names you pass.</param>
      <param name="numInserted">Returns the number of commands the method inserted into the collection.</param>
      <seealso cref="Command" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Commands.InsertIntoWin32Menu(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Inserts a menu item into a menu for each command in the Commands collection. Use this method to build a context menu for a control that generates the SequenceView.CreateContextMenu or ListBar.CreateContextMenu event. </summary>
      <param name="menuHandle">Specifies the Microsoft Windows menu handle (HMENU) to insert the menu items into. The menu items invoke their corresponding Command objects when selected. You do not handle menu events for items this method inserts.</param>
      <param name="menuItemToInsertBefore">Specifies the position or menu item identifier (resource ID/command ID) of the menu item before which the method inserts the new menu items. To insert at the end of the menu, pass <c>-1</c> and pass <c>True</c> to the byPosition parameter.</param>
      <param name="byPosition">Pass <c>True</c> when the menuItemToInsertBefore parameter contains a zero-based menu item position. Pass <c>False</c> when the menuItemToInsertBefore parameter contains a menu item identifier (resource ID/command ID).</param>
      <param name="useShortcutKeys">Pass <c>True</c> to show shortcut key text for each item this method inserts that has a shortcut key. Typically, you use this method to build context menus which do not automatically implement shortcut key handling. Therefore, show shortcut keys only for items that also appear in the main menu bar, unless you explicitly provide shortcut key handling for items that appear only in the context menu.</param>
      <seealso cref="ListBar.CreateContextMenu" />
      <seealso cref="SequenceView.CreateContextMenu" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.CommandConnectionOptions">
      <summary>Use these constants with the CommandConnection.Options property.</summary>
      <seealso cref="&quot;CommandConnection.Options&quot;CommandConnection_Options_P.htm" />
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandConnectionOptions.CommandConnection_NoOptions">
      <summary>(Value: 0x0) No options.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandConnectionOptions.CommandConnection_IgnoreVisible">
      <summary>(Value: 0x1) The connection does not change the visibility of the connected control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandConnectionOptions.CommandConnection_IgnoreCaption">
      <summary>(Value: 0x2) The connection does not set the caption on the connected control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandConnectionOptions.CommandConnection_IgnoreEnable">
      <summary>(Value: 0x4) The connection does not enable or disable the connected control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandConnectionOptions.CommandConnection_EnableImage">
      <summary>(Value: 0x8) The connection sets the image on the connected control.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.CommandKinds">
      <summary>These constants specify types of standard commands. CommandKinds values specify a single command or a set of commands that can contain several commands or no commands, depending on the state of the application.
You can pass these constants to the ApplicationMgr.ConnectCommand, SequenceFileViewMgr.ConnectCommand, and ExecutionViewMgr.ConnectCommand methods to connect commands to buttons or checkboxes. You can also connect commands to menu items.
<para>Note: If you connect a command that applies to the control that has the input focus, such as <c>CommandKind_Edit_Cut</c> and <c>CommandKind_Edit_EditCode</c>, to a button control, the command does not function after the first time the user clicks the button because the button acquires the input focus. To avoid this issue, you must ensure the button does not acquire the input focus when clicked. For a TestStand Button, you can achieve this by setting the Button.Style property to <c>ButtonStyle_ToolBar</c>.</para>
You can pass these constants to the Commands.InsertKind method to directly create command objects.
Most commands, such as <c>OpenSequenceFile</c>, <c>Login</c>, and <c>Restart</c>, behave the same as the corresponding menu items in the TestStand Sequence Editor with regard to the action they take and the circumstances under which they are enabled. Refer to the NI TestStand Environment Reference Help for the corresponding sequence editor menu item for more information about how the item behaves.
TestStand assigns default images to some commands, which TestStand displays when you connect the command to a Button control and you enable images for the control.</summary>
      <seealso cref="&quot;Adapter Configuration dialog box&quot;javascript:RefLink('/InfoTopics/DB_AdapterConfig.htm')" />
      <seealso cref="ApplicationMgr" />
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="ApplicationMgr.PostCommandExecute" />
      <seealso cref="ApplicationMgr.PreCommandExecute" />
      <seealso cref="ApplicationMgr.UndoStack" />
      <seealso cref="Button" />
      <seealso cref="&quot;Breakpoint Settings dialog box&quot;javascript:RefLink('/InfoTopics/DB_Break_Settings.htm')" />
      <seealso cref="&quot;Configure menu&quot;javascript:RefLink('/InfoTopics/UI_Configure_Menu.htm')" />
      <seealso cref="Command" />
      <seealso cref="Command.Enabled" />
      <seealso cref="Command.UserData" />
      <seealso cref="Command.UserObject" />
      <seealso cref="Command.Visible" />
      <seealso cref="Commands.InsertKind" />
      <seealso cref="Commands" />
      <seealso cref="&quot;Configure External Viewers dialog box&quot;javascript:RefLink('/InfoTopics/DB_Config_Ex_View.htm')" />
      <seealso cref="&quot;Connecting Commands to Menu Items&quot;javascript:TSFundLink('/InfoTopics/Menus.html')" />
      <seealso cref="&quot;Customize Tools Menu dialog box&quot;javascript:RefLink('/InfoTopics/DB_Cust_Tool_Menu.htm')" />
      <seealso cref="&quot;Debug menu&quot;javascript:RefLink('/InfoTopics/UI_Debug_Menu.htm')" />
      <seealso cref="&quot;Edit Breakpoints/Watch Expressions dialog box&quot;javascript:RefLink('/InfoTopics/DB_Break_Watch.htm')" />
      <seealso cref="&quot;Edit Numeric Limit Test dialog box&quot;javascript:RefLink('/InfoTopics/DB_Num_Lim_Test.htm')" />
      <seealso cref="&#xD;&#xA;&quot;Edit menu&quot;javascript:RefLink('/InfoTopics/UI_Edit_Menu.htm')" />
      <seealso cref="&quot;Edit Paths in Files dialog box&quot;javascript:RefLink('/InfoTopics/DB_Edit_Paths_In_Files.htm')" />
      <seealso cref="&quot;Edit Search Directories dialog box&quot;javascript:RefLink('/InfoTopics/DB_Search_Dir.htm')" />
      <seealso cref="&quot;Edit Step List Configurations dialog box&quot;javascript:RefLink('/InfoTopics/DB_Step_List_Config.htm')" />
      <seealso cref="&quot;Execute menu&quot;javascript:RefLink('/InfoTopics/UI_Execute_Menu.htm')" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="ListBox" />
      <seealso cref="&quot;File menu&quot;javascript:RefLink('/InfoTopics/UI_File_Menu.htm')" />
      <seealso cref="&quot;Help menu&quot;javascript:RefLink('/InfoTopics/UI_Help_Menu.htm')" />
      <seealso cref="&quot;Lock File dialog box&quot;javascript:RefLink('/InfoTopics/DB_LockUnlock_File.htm')" />
      <seealso cref="&quot;Loop On Selected Steps dialog box&quot;javascript:RefLink('/InfoTopics/DB_Loop_On_Sel_Step.htm')" />
      <seealso cref="&quot;NI TestStand Environment Reference Help&quot;javascript:RefLink('/InfoTopics/TestStand_Ref.htm')" />
      <seealso cref="&quot;Open File dialog box&quot;javascript:RefLink('/InfoTopics/DB_Open_File.htm')" />
      <seealso cref="&quot;Open Multiple File dialog box&quot;javascript:RefLink('/InfoTopics/DB_Open_Multi_File.htm')" />
      <seealso cref="&quot;Preconditions dialog box&quot;javascript:RefLink('/InfoTopics/DB_Preconditions.htm')" />
      <seealso cref="&quot;Sequence File Callbacks dialog box&quot;javascript:RefLink('/InfoTopics/DB_Callbacks.htm')" />
      <seealso cref="&quot;Sequence File Properties dialog box&quot;javascript:RefLink('/InfoTopics/DB_Seq_File_Prop.htm')" />
      <seealso cref="&quot;Sequence Properties dialog box&quot;javascript:RefLink('/InfoTopics/DB_Seq_Prop.htm')" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
      <seealso cref="&quot;Sequence List context menu&quot;javascript:RefLink('/InfoTopics/UI_Seq_File_Tab_SeqCM.htm')" />
      <seealso cref="&quot;Sequence View context menu&quot;javascript:RefLink('/InfoTopics/UI_Seq_File_Tab_StepsCM.htm')" />
      <seealso cref="SequenceView" />
      <seealso cref="&quot;Specify Module dialog box&quot;javascript:RefLink('/InfoTopics/DB_EditAutoCall.htm')" />
      <seealso cref="&quot;Station Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Station_Opt.htm')" />
      <seealso cref="&quot;Step Properties dialog box&quot;javascript:RefLink('/InfoTopics/DB_Step_Prop.htm')" />
      <seealso cref="&quot;Step Type Menu Editor dialog box&quot;javascript:RefLink('/InfoTopics/DB_Step_Type_Menu_Editor.htm')" />
      <seealso cref="&quot;Unlock File dialog box&quot;javascript:RefLink('/InfoTopics/DB_LockUnlock_File.htm')" />
      <seealso cref="&quot;Workspace Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Wrksp_Browser.htm')" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_UnloadAllModules">
      <summary>(Value: 28) Removes all code modules from memory.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_MRUFile">
      <summary>(Value: 29) Opens a file in the most recently used (MRU) file list. Each command in the set opens one of the files from the most recently used file list. Do not directly create commands of this type. Instead, use <c>CommandKind_MRUFiles_Set</c> to create a set of commands of this type.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Exit">
      <summary>(Value: 30) Unloads all files and exits the application.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Restart">
      <summary>(Value: 40) Restarts the selected execution. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
      <seealso cref="ExecutionViewMgr" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunEntryPoint">
      <summary>(Value: 41) Runs a particular Process Model entry point sequence. Do not directly create commands of this type. Instead, use one of the following constants to create commands of this type as needed:
<c>CommandKind_ExecutionEntryPoints_Set</c><br/><c>CommandKind_ConfigurationEntryPoints_Set</c><br/><c>CommandKind_ExecutionEntryPointInsertionMarker</c><br/><c>CommandKind_ExecutionEntryPointDefaultMenuInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointDefaultInsertionMarker</c>
This command has a default image.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunEntryPointOnSelectedSteps">
      <summary>(Value: 42) Runs the selected steps using a specific Process Model entry point sequence. Do not directly create commands of this type. Instead, use one of the following constants to create commands of this type, as needed:
<c>CommandKind_RunSelectedStepsUsingEntryPoints_Set</c><br/><c>CommandKind_RunSelectedStepsUsingEntryPointSubmenu</c>
These commands apply only to the SequenceFileView Manager control.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_LoopEntryPointOnSelectedSteps">
      <summary>(Value: 43) Launches the Loop On Selected Steps dialog box, in which you can specify how many times the command loops on the selected steps using a specific Process Model entry point sequence. Do not directly create commands of this type. Instead, the following constants contain commands of this type as needed:
<c>CommandKind_LoopOnSelectedStepsUsingEntryPoints_Set</c><br/><c>CommandKind_LoopOnSelectedStepsUsingEntryPointsSubmenu</c>
This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunCurrentSequence">
      <summary>(Value: 44) Runs the selected sequence without using a process model. This command applies only to the SequenceFileView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunSpecificSequence">
      <summary>(Value: 45) Runs a specific sequence without using a process model. You do not directly create commands of this type. Instead, the <c>CommandKinds_RunSequences_Set</c> constant contains commands of this type as needed. This command applies only to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunSelectedSteps">
      <summary>(Value: 46) Runs the selected steps without using a process model. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunSelectedStepsUsingEntryPointsSubmenu">
      <summary>(Value: 47) For each applicable Process Model entry point, this command contains a subsidiary command that runs the selected steps with that entry point. When you insert this command into a menu, each subsidiary command appears as an item in a submenu. This command applies only to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_LoopOnSelectedSteps">
      <summary>(Value: 48) Launches the Loop On Selected Steps dialog box, in which you can specify how many times the command loops on the selected steps without using a process model. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_LoopOnSelectedStepsUsingEntryPointsSubmenu">
      <summary>(Value: 49) For each applicable Process Model entry point, this command contains a subsidiary command that launches the Loop On Selected Steps dialog box, in which you can specify how many times the subsidiary command loops on the selected steps using the entry point. When you insert this command into a menu, each subsidiary command is listed as a submenu item. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_BreakOnFirstStep">
      <summary>(Value: 50) Toggles whether executions suspend at the first step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_BreakOnStepFailure">
      <summary>(Value: 51) Toggles whether executions suspend when a step fails.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_BreakOnSequenceFailure">
      <summary>(Value: 52) Toggles whether executions suspend when a sequence fails.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_TracingEnabled">
      <summary>(Value: 53) Toggles whether the user interface application displays the steps in an execution as they execute.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ToggleBreakpoint">
      <summary>(Value: 60) Toggles the breakpoint state of the selected steps. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_SetRunModeSubmenu">
      <summary>(Value: 61) Contains the following subsidiary commands: 
<c>CommandKind_RunModeForcePass</c><br/><c>CommandKind_RunModeForceFail</c><br/><c>CommandKind_RunModeSkip</c><br/><c>CommandKind_RunModeForceNormal</c>
When you insert this command into a menu, each subsidiary command appears as an item in a submenu. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunModeForcePass">
      <summary>(Value: 62) Sets the run mode of the selected steps to <c>Force Pass</c>. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunModeForceFail">
      <summary>(Value: 63) Sets the run mode of the selected steps to <c>Force Fail</c>. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunModeSkip">
      <summary>(Value: 64) Sets the run mode of the selected steps to <c>Skip</c>. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunModeNormal">
      <summary>(Value: 65) Sets the run mode of the selected steps to <c>Normal</c>. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Resume">
      <summary>(Value: 66) Resumes the selected execution. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_StepInto">
      <summary>(Value: 67) Steps into the current step in the selected execution. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_StepOver">
      <summary>(Value: 68) Steps over the current step in the selected execution. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_StepOut">
      <summary>(Value: 69) Resumes execution through the end of the current sequence and suspends before the next step in the calling sequence. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_SetNextStep">
      <summary>(Value: 70) Moves the execution pointer to the selected step. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Break">
      <summary>(Value: 71) Suspends the selected execution. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_BreakResume">
      <summary>(Value: 72) Suspends the selected execution if it is executing. Resumes the selected execution if it is suspended. This command applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Terminate">
      <summary>(Value: 73) Terminates the selected execution. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_TerminateRestart">
      <summary>(Value: 74) Terminates the selected execution if it is executing or suspended and restarts the selected execution if it has completed. This command applies only to the ExecutionView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Abort">
      <summary>(Value: 75) Aborts the current execution. The execution does not run the Cleanup steps. This command applies to the ExecutionView Manager control only.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_BreakAll">
      <summary>(Value: 76) Suspends all executions. This command applies only to the Application Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_TerminateAll">
      <summary>(Value: 77) Terminates all executions. This command applies only to the Application Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_AbortAll">
      <summary>(Value: 78) Aborts all executions. This command applies only to the Application Manager control.</summary>
      <remarks>ExecutionView Manager control</remarks>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ResumeAll">
      <summary>(Value: 79) Resumes all executions. This command applies only to the Application Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DisplayBreakpointsAndWatchExpressions">
      <summary>(Value: 80) Launches the Edit Breakpoints/Watch Expressions dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DisplayBreakpointSettings">
      <summary>(Value: 81) Launches the Breakpoint Settings dialog box for the selected step. This command applies to the ExecutionView Manager or SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_BreakpointSubmenu">
      <summary>(Value: 85) Contains the <c>CommandKind_ToggleBreakpoint</c> and <c>CommandKind_DisplayBreakpointSettings</c> subsidiary commands. When you insert this command into a menu, each subsidiary command appears as a submenu item. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigureAdapters">
      <summary>(Value: 90) Launches the Adapter Configuration dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigureStationOptions">
      <summary>(Value: 91) Launches the Station Options dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigureSearchDirectories">
      <summary>(Value: 92) Launches the Edit Search Directories dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigureExternalViewers">
      <summary>(Value: 93) Launches the Configure External Viewers dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ToolItem">
      <summary>(Value: 100) Executes a particular tool item in the TestStand Tools menu. Do not directly create commands of this type. Instead, the <c>CommandKind_Tools_Set</c> constant contains a command of this type for each item in the TestStand Tools menu.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_CustomizeTools">
      <summary>(Value: 101) Launches the Customize Tools Menu dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ExecutionEntryPointInsertionMarker">
      <summary>(Value: 110) Specifies a set of commands that contains a <c>CommandKind_RunEntryPoint</c> command for each Execution entry point with a menu hint that selects the current menu.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ExecutionEntryPointDefaultMenuInsertionMarker">
      <summary>(Value: 111) Specifies a set of commands that contains a <c>CommandKind_RunEntryPoint</c> command for each Execution entry point with a menu hint that does not select a menu other than the current menu. Because most entry points do not have menu hints, this constant typically specifies all Execution entry points.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigurationEntryPointInsertionMarker">
      <summary>(Value: 112) Specifies a set of commands that contains a <c>CommandKind_RunEntryPoint</c> command for each Configuration entry point with a menu hint that selects the current menu.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigurationEntryPointDefaultMenuInsertionMarker">
      <summary>(Value: 113) Specifies a set of commands that contains a <c>CommandKind_RunEntryPoint</c> command for each Configuration entry point with a menu hint that does not select a menu other than the current menu. Because most entry points do not have menu hints, this constant typically specifies all Configuration entry points.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultFileMenu_Set">
      <summary>(Value: 120) Specifies a set of commands that correspond to the typical items in the File menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following is a representative set of commands:
<c>CommandKind_Login</c><br/><c>CommandKind_Logout</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_Edit_NewSequenceFile*</c><br/><c>CommandKind_OpenSequenceFiles</c><br/><c>CommandKind_Close</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_CloseAll</c><br/><c>CommandKind_CloseCompletedExecutions</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_OpenWorkspaceBrowser</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_Edit_Save*</c><br/><c>CommandKind_Edit_SaveAs*</c><br/><c>CommandKind_Edit_SaveAll*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_UnloadAllModules</c><br/><c>CommandKind_LockUnlock</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_ExecutionEntryPointInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointInsertionMarker</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_MRUFiles_Set</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_Exit</c>
* The command is present only when editing is enabled.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultExecuteMenu_Set">
      <summary>(Value: 121) Specifies a set of commands that correspond to the typical menu items in the Execute menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following is a representative set of commands:
<c>CommandKind_Restart</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_ExecutionEntryPointDefaultMenuInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointDefaultMenuInsertionMarker</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_RunCurrentSequence</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_RunSelectedSteps</c><br/><c>CommandKind_RunSelectedStepsUsingEntryPointSubmenu</c><br/><c>CommandKind_LoopOnSelectedSteps</c><br/><c>CommandKind_LoopOnSelectedStepsUsingEntryPointSubmenu</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_BreakOnFirstStep</c><br/><c>CommandKind_BreakOnStepFailure</c><br/><c>CommandKind_BreakOnSequenceFailure</c><br/><c>CommandKind_TracingEnabled</c>
This command applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultDebugMenu_Set">
      <summary>(Value: 123) Specifies a set of commands that correspond to the typical items in the Debug menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following is a representative set of commands:
<c>CommandKind_ExecutionEntryPointInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointInsertionMarker</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_ToggleBreakpoint</c><br/><c>CommandKind_SetRunModeSubmenu</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_Resume</c><br/><c>CommandKind_StepInto</c><br/><c>CommandKind_StepOver</c><br/><c>CommandKind_StepOut</c><br/><c>CommandKind_SetNextStep</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_Break</c><br/><c>CommandKind_Terminate</c><br/><c>CommandKind_Abort</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_BreakAll</c><br/><c>CommandKind_TerminateAll</c><br/><c>CommandKind_AbortAll</c><br/><c>CommandKind_ResumeAll</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_DisplayBreakAndWatchPoints</c></summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultConfigureMenu_Set">
      <summary>(Value: 124) Specifies a set of commands that correspond to the typical items in the Configure menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following is a representative set of commands:
<c>CommandKind_ConfigureStationOptions</c><br/><c>CommandKind_ConfigureSearchDirectories</c><br/><c>CommandKind_ConfigureExternalViewers</c><br/><c>CommandKind_ConfigureAdapters</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_ExecutionEntryPointInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointDefaultMenuInsertionMarker</c></summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultToolsMenu_Set">
      <summary>(Value: 125) Specifies a set of commands that correspond to the typical items found in the Tools menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following is a representative set of commands:
<c>CommandKind_Tools_Set</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_CustomizeTools</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_ExecutionEntryPointInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointInsertionMarker</c></summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultSequenceViewContextMenu_Set">
      <summary>(Value: 126) Specifies a set of commands that corresponds to the typical items in the sequence view context menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following are a representative set of commands:
SequenceFileView Manager Control:
<c>CommandKind_Edit_InsertStepsSubmenu*</c><br/><c>CommandKind_Edit_EncapsulateSelectedStepsSubmenu*</c><br/><c>CommandKind_Edit_SelectDefaultAdapters_Set*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_EditSteps_Set*</c><br/><c>CommandKind_Edit_SpecifyModule*</c><br/><c>CommandKind_Edit_EditCode*</c><br/><c>CommandKind_Edit_Preconditions*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_BreakpointSubmenu</c><br/><c>CommandKind_SetRunModeSubmenu</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_Edit_Cut*</c><br/><c>CommandKind_Edit_Copy*</c><br/><c>CommandKind_Edit_Paste*</c><br/><c>CommandKind_Edit_Delete*</c><br/><c>CommandKind_Edit_Rename*</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_RunSelectedSteps</c><br/><c>CommandKind_RunSelectedStepsUsingEntryPointsSubmenu</c><br/><c>CommandKind_LoopOnSelectedSteps</c><br/><c>CommandKind_LoopOnSelectedStepsUsingEntryPointsSubmenu</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_SequenceViewConfigurationsSubmenu</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_StepProperties*</c>
ExecutionView Manager Control:
<c>CommandKind_BreakpointSubmenu</c><br/><c>CommandKind_SetRunModeSubmenu</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_RunSelectedSteps</c><br/><c>CommandKind_LoopOnSelectedSteps</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_SetNextStep</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_SequenceViewConfigurationsSubmenu</c>
* The command is present only when editing is enabled.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_MRUFiles_Set">
      <summary>(Value: 140) Specifies a set of <c>CommandKind_MRUFile</c> commands. Each command opens one of the files in the MRU file list. This command applies only to the Application Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ExecutionEntryPoints_Set">
      <summary>(Value: 141) Specifies a set of commands that contains a <c>CommandKind_RunEntryPoint</c> command for each Execution entry point. When you specify commands to create menu items, use the <c>CommandKind_ExecutionEntryPointInsertionMarker</c> and <c>CommandKind_ExecutionEntryPointDefaultInsertionMarker</c> constants to honor any menu hints the entry points might specify.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunSequences_Set">
      <summary>(Value: 142) Specifies a set of <c>CommandKind_RunSpecificSequence</c> commands that contains commands to run each sequence in the selected file without using a process model. This command applies only to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_RunSelectedStepsUsingEntryPoints_Set">
      <summary>(Value: 143) Specifies a set of <c>CommandKind_RunEntryPointOnSelectedSteps</c> commands that contains a command to run the selected steps with each applicable Execution entry point.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_LoopOnSelectedStepsUsingEntryPoints_Set">
      <summary>(Value: 144) Specifies a set of <c>CommandKind_LoopEntryPointOnSelectedSteps</c> commands that contains a command to run the selected steps with each applicable Execution entry point.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigurationEntryPoints_Set">
      <summary>(Value: 145) Specifies a set of commands that contains a <c>CommandKind_RunEntryPoint</c> command for each Configuration entry point. When you specify commands to create menu items, use the <c>CommandKind_ConfigurationEntryPointInsertionMarker</c> and <c>CommandKind_ConfigurationEntryPointDefaultInsertionMarker</c> constants to honor menu hints entry points can specify.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Tools_Set">
      <summary>(Value: 146) Specifies a set of <c>CommandKind_ToolItem</c> commands that contains a command for each tool item in the Tools menu.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_NotACommand">
      <summary>(Value: 0) Guaranteed to never be a valid command kind specifier.</summary>
      <seealso cref="Command.Kind" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Container">
      <summary>(Value: 1) Contains only subsidiary commands.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Separator">
      <summary>(Value: 2) Denotes a visual separation between other commands. For example, when commands appear as items in a menu, commands of this type appear as menu item separator bars.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Custom">
      <summary>(Value: 3) Represents an action you define. You must set Command properties, such as the Command.Enabled and Command.Visible properties, to the values you require. Although this command does not perform an action when it executes, an application can perform an action when it receives the ApplicationMgr.PreCommandExecute or ApplicationMgr.PostCommandExecute event for the command. You can attach data you define to the command using the Command.UserObject and Command.UserData properties so the data is available to the application in the handlers for <c>PreCommandExecute</c> and <c>PostCommandExecute</c> events.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_OpenSequenceFile">
      <summary>(Value: 20) Launches the Open File dialog box. When the user selects a sequence file, the command loads and displays the file. This command has a default image.</summary>
      <remarks>Open File</remarks>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Close">
      <summary>(Value: 21) Closes the currently selected sequence file or execution. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_CloseAll">
      <summary>(Value: 22) Closes all executions and sequence files. This command applies only to the Application Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_CloseCompletedExecutions">
      <summary>(Value: 23) Closes all completed executions. This command applies only to the Application Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_OpenWorkspaceBrowser">
      <summary>(Value: 24) Launches the Workspace Browser dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Login">
      <summary>(Value: 25) Launches the user login dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Logout">
      <summary>(Value: 26) Logs out the current user.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_LoginLogout">
      <summary>(Value: 27) Launches the user login dialog box when no user is logged in. Otherwise, logs out the current user.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultListBarContextMenu_Set">
      <summary>(Value: 127) Specifies a set of commands that corresponds to the typical items in the list bar context menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following are a representative set of commands:
SequenceFileView Manager Control:
<c>CommandKind_ExecutionEntryPointDefaultMenuInsertionMarker</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_RunCurrentSequence</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_OpenSequenceFile</c><br/><c>CommandKind_Close</c>
ExecutionView Manager Control:
<c>CommandKind_Close</c><br/><c>CommandKind_CloseCompletedExecutions</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_TerminateRestart</c><br/><c>CommandKind_BreakResume</c><br/><c>CommandKind_Abort</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_BreakAll</c><br/><c>CommandKind_TerminateAll</c><br/><c>CommandKind_AbortAll</c><br/><c>CommandKind_ResumeAll</c></summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_LockUnlock">
      <summary>(Value: 148) When a sequence file is protected, this command launches the Lock File dialog box or the Unlock File dialog box, depending on whether the file is currently locked.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_OpenSequenceFiles">
      <summary>(Value: 147) Launches the Open Multiple File dialog box, in which the user can select any number of files to open. The command loads all selected sequence files and displays one of the selected sequence files. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Undo">
      <summary>(Value: 200) Calls Undo on the UndoStack of the connected manager control. This command applies to the SequenceFileView Manager and Application Manager controls. When connected to a SequenceFileView Manager control, this command reverts the most recent edit to the currently selected sequence file. Before connecting this command to the Application Manager control, you must assign an UndoStack to the <c>ApplicationMgr.UndoStack</c> property. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Redo">
      <summary>(Value: 201) Calls Redo on the UndoStack of the connected manager control. This command applies to the SequenceFileView Manager and Application Manager controls. When connected to a SequenceFileView Manager control, this command redoes the last edit to the currently selected sequence file an undo command reverted. Before connecting this command to the Application Manager control, you must assign an UndoStack to the ApplicationMgr.UndoStack property. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_SequenceViewConfiguration">
      <summary>(Value: 116) Do not directly create commands of this type. Instead the <c>CommandKind_SequenceViewConfigurations_Set</c> constant contains commands of this type as needed.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_SequenceViewConfigurations_Set ">
      <summary>(Value: 139) Specifies a set of <c>CommandKind_SequenceViewConfiguration</c> commands. Each command in the set applies a specific configuration to all SequenceView controls that connect to the specified manager control. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_SequenceViewConfigurationsSubmenu ">
      <summary>(Value: 118) Contains all the <c>CommandKind_SequenceViewConfiguration</c> commands the <c>CommandKind_SequenceViewConfigurations_Set</c> constant specifies, followed by a <c>CommandKind_Separator</c> and a <c>CommandKind_ConfigureSequenceViews</c> command. Insert this command into a menu to create a submenu with menu items to apply any existing SequenceView configuration or to edit the set of available configurations. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultEditMenu_Set">
      <summary>(Value: 128) Specifies a set of commands that correspond to the typical items in the Edit menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following is a representative set of commands:
<c>CommandKind_Edit_Undo*</c><br/><c>CommandKind_Edit_Redo*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_Cut*</c><br/><c>CommandKind_Edit_Copy</c><br/><c>CommandKind_Edit_Paste*</c><br/><c>CommandKind_Edit_Delete*</c><br/><c>CommandKind_Edit_Rename*</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_SelectAll</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_EditSteps_Set*</c><br/><c>CommandKind_Edit_SpecifyModule*</c><br/><c>CommandKind_Edit_EditCode*</c><br/><c>CommandKind_Edit_Preconditions*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_SequenceFileCallbacks*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_StepProperties*</c><br/><c>CommandKind_Edit_SequenceProperties*</c><br/><c>CommandKind_Edit_SequenceFileProperties*</c>
* The command is present only when editing is enabled.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultSequenceListContextMenu_Set">
      <summary>(Value: 129) Specifies a set of commands that corresponds to the typical items in the sequence list context menu of a TestStand application. This constant applies to the SequenceFileView Manager control. Although the specific commands this constant represents might vary according to the version of TestStand, the following are a representative set of commands:
<c>CommandKind_Edit_InsertSequence*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_Cut*</c><br/><c>CommandKind_Edit_Copy*</c><br/><c>CommandKind_Edit_Paste*</c><br/><c>CommandKind_Edit_Delete*</c><br/><c>CommandKind_Edit_Rename*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_SequenceFileCallbacks*</c><br/><c>CommandKind_Separator*</c><br/><c>CommandKind_Edit_SequenceProperties*</c>
* The command is present only when editing is enabled.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigureSequenceViews">
      <summary>(Value: 149) Launches the Edit Step List Configurations dialog box. This command applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Rename">
      <summary>(Value: 202) Enters name-editing mode for the step with focus or the sequence item in a SequenceView or ListBox control. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Cut">
      <summary>(Value: 203) Moves the selection onto the clipboard. This command applies to the SequenceFileView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Copy">
      <summary>(Value: 204) Copies the selection to the clipboard. This command applies to the SequenceFileView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Paste">
      <summary>(Value: 205) Pastes the contents of the clipboard into the selected file. This command applies to the SequenceFileView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Delete">
      <summary>(Value: 206) Deletes the selection. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_InsertStep">
      <summary>(Value: 207) Inserts a step into the selected file. You do not create commands of this type. Instead, the <c>CommandKind_Edit_InsertSteps_Set</c> and <c>CommandKind_Edit_InsertStepsSubmenu</c> constants contain commands of this type as needed. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Save">
      <summary>(Value: 208) Saves the selected sequence file. This command applies to the SequenceFileView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SaveAs">
      <summary>(Value: 209) Launches the Save As dialog box. The dialog box prompts you to choose a location in which to save the selected sequence file. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SaveAll">
      <summary>(Value: 210) Saves all modified sequences files. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_NewSequenceFile">
      <summary>(Value: 211) Creates a new, empty sequence file. This command applies to the SequenceFileView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_StepProperties">
      <summary>(Value: 212) Launches the Step Properties dialog box for the step with focus.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SequenceProperties">
      <summary>(Value: 213) Launches the Sequence Properties dialog box for the sequence with focus.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SequenceFileProperties">
      <summary>(Value: 214) Launches the Sequence File Properties dialog box for the selected sequence file.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SpecifyModule">
      <summary>(Value: 215) Launches the Specify Module dialog box for the step with focus. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_EditCode">
      <summary>(Value: 216) Displays the module source code for the step with focus. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_EditStep">
      <summary>(Value: 217) Performs a step type-dependent editing operation on the step with focus. Typically, the operation launches an editing dialog box. For example, this command might launch the Edit Numeric Limit Test dialog box for a Numeric Limit Test step. You do not create commands of this type. Instead, the <c>CommandKind_Edit_EditSteps_Set</c> and <c>CommandKind_Edit_EditStepsSubmenu</c> constants contain commands of this type as needed. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Preconditions">
      <summary>(Value: 218) Launches the Preconditions dialog box. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_SelectAll">
      <summary>(Value: 219) Selects all the items or text in the control with focus.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SelectDefaultAdapter">
      <summary>(Value: 220) Select a specific module adapter for new steps. You do not create commands of this type. Instead, the <c>CommandKind_Edit_SelectDefaultAdapters_Set</c> and <c>CommandKind_Edit_SelectDefaultAdaptersSubmenu</c> constants contain commands of this type as needed.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_InsertSequence">
      <summary>(Value: 221) Inserts a new empty sequence into the selected sequence file. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SequenceFileCallbacks">
      <summary>(Value: 222) Launches the Sequence File Callbacks dialog box. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_InsertStepsSubmenu">
      <summary>(Value: 300) Specifies a container command with subsidiary commands the <c>CommandKind_Edit_InsertSteps_Set</c> constant specifies. When you insert this command into a menu, each subsidiary command is visible as a submenu item. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_EditStepsSubmenu">
      <summary>(Value: 301) Specifies a container command with subsidiary commands the <c>CommandKind_Edit_ EditSteps_Set</c> constant specifies. When you insert this command into a menu, the subsidiary commands appear within a submenu item. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SelectDefaultAdaptersSubmenu">
      <summary>(Value: 302) Specifies a container command with subsidiary commands the <c>CommandKind_Edit_SelectDefaultAdapters_Set</c> constant specifies. When you insert this command into a menu, each subsidiary command is visible as a submenu item.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_InsertSteps_Set">
      <summary>(Value: 340) Specifies a set of commands that contains a <c>CommandKind_Edit_InsertStep</c> command for each available step type. The commands are organized hierarchically as specified for the step types in the Step Type Menu Editor dialog box. Insert this command into a menu to create the contents of the Insert Step context menu. This command applies to the SequenceFileView Manager control. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_EditSteps_Set">
      <summary>(Value: 341) Specifies a set of commands that contains a <c>CommandKind_Edit_EditStep</c> command for each step type specific editing operation that applies to the step with focus. A step type can define the available editing operations for instances of the type by specifying Edit substeps, which typically call a module to launch an editing dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_SelectDefaultAdapters_Set">
      <summary>(Value: 342) Specifies a set of commands that contains a <c>CommandKind_Edit_SelectDefaultAdapter</c> command for each module adapter.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowTestStandHelp">
      <summary>(Value: 420) Launches the NI TestStand Help file. This command is visible only when editing is enabled.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowGuideToDocumentation">
      <summary>(Value: 421) Launches a topic that is a guide to the TestStand documentation. This command is visible only when editing is enabled.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowHelpTopic">
      <summary>(Value: 422) Launches the help for the currently active TestStand User Interface Control. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowTestStandWebResources">
      <summary>(Value: 423) Opens the TestStand support web page in a browser. This command is visible only when editing is enabled.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowTestStandDiscussionForum">
      <summary>(Value: 424) Opens the TestStand discussion forum on <c>ni.com</c> in a web browser. This command is visible only when editing is enabled.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowPatents">
      <summary>(Value: 425) Displays a list of National Instruments patents.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_DefaultHelpMenu_Set">
      <summary>(Value: 440) Specifies a set of commands that corresponds to the typical items in the Help menu of a TestStand application. Although the specific commands this constant represents might vary according to the version of TestStand, the following is a representative set of commands:
<c>CommandKind_ShowTestStandHelp</c><br/><c>CommandKind_ShowGuideToDocumentation</c><br/><c>CommandKind_ShowHelpTopic</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_ShowTestStandWebResources</c><br/><c>CommandKind_ShowTestStandDiscussionForum</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_ShowPatents</c><br/><c>CommandKind_Separator</c><br/><c>CommandKind_ExecutionEntryPointInsertionMarker</c><br/><c>CommandKind_ConfigurationEntryPointInsertionMarker</c></summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_EditPaths">
      <summary>(Value: 223) Launches the Edit Paths in Files dialog box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowInList">
      <summary>(Value: 400) Takes the selected step for an ExecutionView Manager control and selects the step in a SequenceFileView Manager control. This command is used in the context menu of a SequenceView control connected to an ExecutionView Manager control, and the command displays the step in the SequenceView control connected to a SequenceFileView Manager control.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceView" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowInVariables">
      <summary>(Value: 401) Takes the selected step for an ExecutionView Manager control and selects the step in a VariablesView control connected to the ExecutionView Manager control. This command is used in the context menu of a SequenceView control connected to an ExecutionView Manager control.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceView" />
      <seealso cref="VariablesView" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_Attributes">
      <summary>(Value: 450) Displays the Attributes dialog box. TestStand supports this command only for a sequence connection. This command applies to the SequenceFileView Manager control. This command has a default image.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_AdvancedSequenceListSubmenu">
      <summary>(Value: 451) Contains the <c>CommandKind_Edit_Attributes</c> subsidiary command. When you insert this command into a menu, the subsidiary commands appear within a submenu item. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowUpdateService">
      <summary>(Value: 452) Launches the NI Update Service. This option is available only when you have installed the NI Update Service.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowExamples">
      <summary>(Value: 453) Launches the help for the NI TestStand example programs.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_EncapsulateSelectedSteps">
      <summary>(Value: 224) Surrounds the selected steps with the specified step and a corresponding end step. You do not create commands of this type. Instead, the <c>CommandKind_Edit_EncapsulateSelectedSteps_Set</c> and <c>CommandKind_Edit_EncapsulateSelectedStepsSubmenu</c> constants contain commands of this type as needed. This command applies to the SequenceFileView Manager control. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_EncapsulateSelectedSteps_Set">
      <summary>(Value: 343) Specifies a set of commands that contains a <c>CommandKind_Edit_EncapsulateSelectedSteps</c> command for each available step type with the StepType.CanEncapsulate property set to <c>True</c> and that starts a block structure in a sequence. Insert this command into a menu to create the contents of the Encapsulate With context menu. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_Edit_EncapsulateSelectedStepsSubmenu">
      <summary>(Value: 303) Specifies a container command whose subsidiary commands the <c>CommandKind_Edit_EncapsulateSelectedSteps_Set</c> constant specifies. When you insert this command into a menu, each subsidiary command is visible as a submenu item. This command applies to the SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ShowGettingStarted">
      <summary>(Value: 454) Launches the Getting Started with TestStand manual.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_UnloadStepModule">
      <summary>(Value: 455) Displays the module source code for the step with focus. This command is similar to CommandKind_Edit_EditCode, but does not increment the change count of the current sequence file. Unlike CommandKind_Edit_EditCode, this command is available when a sequence file is not editable, such as while the sequence is executing. CommandKind_UnloadStepModule is not available while any executions are actively running; the user must suspend all executions to use this command. This command applies to the SequenceFileView Manager and ExecutionView Manager control.</summary>
      <seealso cref="CommandKind_Edit_EditCode" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CommandKinds.CommandKind_ConfigureEngineEnvironment">
      <summary>(Value: 94) Launches the Configure Environment dialog box.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.CaptionSources">
      <summary>These constants specify types of caption sources. Each caption source provides text that describes an aspect of the current application state. You can use these constants to connect a caption to a Label or StatusBarPane using the ApplicationMgr.ConnectCaption, ExecutionViewMgr.ConnectCaption, or SequenceFileViewMgr.ConnectCaption method.
To obtain the text of a caption without connecting it to a control, call the ApplicationMgr.GetCaptionText, ExecutionViewMgr.GetCaptionText, or SequenceFileViewMgr.GetCaptionText method.
A caption source applies to all manager controls unless the help for the enumeration element specifies the particular manager control or controls with which it applies.</summary>
      <seealso cref="ApplicationMgr.ConnectCaption" />
      <seealso cref="ApplicationMgr.GetCaptionText" />
      <seealso cref="ExecutionViewMgr.ConnectCaption" />
      <seealso cref="ExecutionViewMgr.GetCaptionText" />
      <seealso cref="Label" />
      <seealso cref="&quot;Report.Location&quot;javascript:APILink('/RefTopics/Report_Location_P.htm')" />
      <seealso cref="SequenceFileViewMgr.ConnectCaption" />
      <seealso cref="SequenceFileViewMgr.GetCaptionText" />
      <seealso cref="StatusBarPane" />
      <seealso cref="&quot;UIMessageCodes&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_NotASource">
      <summary>(Value: 0) Guaranteed to never be a valid caption source specifier.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_UUTSerialNumber">
      <summary>(Value: 2) Displays the serial number of the UUT for the current execution. A process model sends the UUT serial number through the <c>UIMsg_ModelState_Identified</c> UIMessageCode. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_UUTStatus">
      <summary>(Value: 3) Displays the result status of the UUT for the current execution. A process model sends the UUT status through the <c>UIMsg_ModelState_TestingComplete</c> UIMessageCode. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_BatchSerialNumber">
      <summary>(Value: 4) Displays the batch serial number for the batch that contains the current execution. A process model sends the batch serial number through the <c>UIMsg_ModelState_Identified</c> UIMessageCode. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_BatchStatus">
      <summary>(Value: 5) Displays the batch result status for the batch that contains the current execution. A process model sends the batch status through the <c>UIMsg_ModelState_TestingComplete</c> UIMessageCode. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_BatchState">
      <summary>(Value: 6) Displays a description of the execution state of the batch that contains the current execution. For example, this caption might display <c>Initializing</c>, <c>Testing</c>, <c>Waiting</c>, or <c>Completed [Passed]</c>. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_ModelState">
      <summary>(Value: 7) Displays a description of the execution state of the current execution. For example, this caption might display <c>Initializing</c>, <c>Testing</c>, <c>Waiting</c>, or <c>Completed [Passed]</c>. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_UserName">
      <summary>(Value: 8) Displays the name of the current user. When you pass <c>True</c> to the long name option for the caption, the caption displays the full user name. Otherwise, the caption displays the user login name.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_ProgressText">
      <summary>(Value: 9) Displays the progress message for the current execution. A process model sends the progress text through the <c>UIMsg_ProgressText</c> UIMessageCode. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_ProgressPercent">
      <summary>(Value: 10) Displays the progress percentage information for the current execution. This caption indicates the progress of operations for which the execution chooses to report the amount of progress. The caption does not necessarily reflect the progress of the execution as a whole. A process model sends the progress percent through the <c>UIMsg_ProgressPercent</c> UIMessageCode. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentSequenceFile">
      <summary>(Value: 11) Displays the path name of the currently executing or currently selected sequence file with a read-only, locked, executing, or modified file state suffix. When you pass <c>True</c> to the long name option for the caption, the caption displays the full path name. Otherwise, the caption displays the base filename. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentSequence">
      <summary>(Value: 13) Displays the name of the currently executing or currently selected sequence. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentStepGroup">
      <summary>(Value: 15) Displays the name of the currently executing or currently selected step group. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentStep">
      <summary>(Value: 16) Displays the name of the current step in the current execution. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentStepIndex_ZeroBased">
      <summary>(Value: 18) Displays the zero-based index of the current step in the current execution. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentTestIndex_OneBased">
      <summary>(Value: 19) Displays the one-based index of the current step in the current execution. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_SelectedSteps_ZeroBased">
      <summary>(Value: 20) Displays a description of which steps are selected. The description uses zero-based indexes. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_SelectedTests_OneBased">
      <summary>(Value: 21) Displays a description of which steps are selected. The description uses one-based indexes and the word test in place of the word step. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_NumberOfSteps">
      <summary>(Value: 22) Displays the number of steps in the currently executing or currently selected step group. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_NumberOfTests">
      <summary>(Value: 23) Displays the number of steps in the currently executing or currently selected step group. The description uses the word test in place of the word step. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentExecution">
      <summary>(Value: 24) Displays a name that identifies the current execution. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentThread">
      <summary>(Value: 25) Displays a name that identifies the foreground thread in the current execution. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentCallStackEntry">
      <summary>(Value: 26) Displays a name that identifies the current call stack item in the foreground thread in the current execution. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentProcessModelFile">
      <summary>(Value: 27) Displays the path name of the process model file for the currently executing or currently selected sequence file. When you pass <c>True</c> to the long name option for the caption, the caption displays the full path name. Otherwise, the caption displays the base filename.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_ReportLocation">
      <summary>(Value: 28) Displays the location of the report for the current execution. The Report.Location property specifies the display value for a report. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentSequenceFileComment">
      <summary>(Value: 12) Displays the comment for the currently executing or currently selected sequence file. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentSequenceComment">
      <summary>(Value: 14) Displays the comment for the currently executing or currently selected sequence. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentStepComment">
      <summary>(Value: 17) Displays the comment for the current step in the current execution. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_MacroExpression">
      <summary>(Value: 1) Displays the evaluated result of a format expression that can contain macros that specify text from other caption sources. You can use this caption source to combine text from multiple caption sources. Place the macros that specify other caption sources within string constants in the format expression for the caption text or caption connection you create with this caption source. The following are the available macros:
Macro, Caption Source, Specifies caption source long name
<c>%UUTSerialNumber%, CaptionSource_UUTSerialNumber, no</c><br/><c>%UUTStatus%, CaptionSource_UUTStatus, no</c><br/><c>%BatchSerialNumber%, CaptionSource_BatchSerialNumber, no</c><br/><c>%BatchStatus%, CaptionSource_BatchStatus, no</c><br/><c>%BatchState%, CaptionSource_BatchState, no</c><br/><c>%ModelState%, CaptionSource_ModelState, no</c><br/><c>%UserName%, CaptionSource_UserName, no</c><br/><c>%ProgressText%, CaptionSource_ProgressText, no</c><br/><c>%ProgressPercent%, CaptionSource_ProgressPercent, no</c><br/><c>%CurrentSequenceFile%, CaptionSource_CurrentSequenceFile, no</c><br/><c>%CurrentSequence%, CaptionSource_CurrentSequence, no</c><br/><c>%CurrentStepGroup%, CaptionSource_CurrentStepGroup, no</c><br/><c>%CurrentStep%, CaptionSource_CurrentStep, no</c><br/><c>%CurrentStepIndex_ZeroBased%, CaptionSource_CurrentStepIndex_ZeroBased, no</c><br/><c>%CurrentTestIndex_OneBased%, CaptionSource_CurrentTestIndex_OneBased, no</c><br/><c>%NumberOfSteps%, CaptionSource_NumberOfSteps, no</c><br/><c>%CurrentExecution%, CaptionSource_CurrentExecution, no</c><br/><c>%CurrentThread%, CaptionSource_CurrentThread, no</c><br/><c>%CurrentCallStackEntry%, CaptionSource_CurrentCallStackEntry, no</c><br/><c>%CurrentProcessModelFile%, CaptionSource_CurrentProcessModelFile, no</c><br/><c>%UUTSerialNumberLongName%, CaptionSource_UUTSerialNumber, yes</c><br/><c>%UUTStatusLongName%, CaptionSource_UUTStatus, yes</c><br/><c>%BatchSerialNumberLongName%, CaptionSource_BatchSerialNumber, yes</c><br/><c>%BatchStatusLongName%, CaptionSource_BatchStatus, yes</c><br/><c>%BatchStateLongName%, CaptionSource_BatchState, yes</c><br/><c>%ModelStateLongName%,CaptionSource_ModelState,yes</c><br/><c>%UserNameLongName%,CaptionSource_UserName,yes</c><br/><c>%ProgressTextLongName%,CaptionSource_ProgressText,yes</c><br/><c>%ProgressPercentLongName%,CaptionSource_ProgressPercent,yes</c><br/><c>%CurrentSequenceFileLongName%,CaptionSource_CurrentSequenceFile,yes</c><br/><c>%CurrentSequenceLongName%,CaptionSource_CurrentSequence,yes</c><br/><c>%CurrentStepGroupLongName%,CaptionSource_CurrentStepGroup,yes</c><br/><c>%CurrentStepLongName%,CaptionSource_CurrentStep,yes</c><br/><c>%CurrentStepIndex_ZeroBasedLongName%,CaptionSource_CurrentStepIndex_ZeroBased,yes</c><br/><c>%CurrentTestIndex_OneBasedLongName%, CaptionSource_CurrentTestIndex_OneBased, yes</c><br/><c>%NumberOfStepsLongName%, CaptionSource_NumberOfSteps, yes</c><br/><c>%CurrentExecutionLongName%, CaptionSource_CurrentExecution, yes</c><br/><c>%CurrentThreadLongName%, CaptionSource_CurrentThread, yes</c><br/><c>%CurrentCallStackEntryLongName%, CaptionSource_CurrentCallStackEntry, yes</c><br/><c>%CurrentProcessModelFileLongName%, CaptionSource_CurrentProcessModelFile, yes</c></summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_TestSocketIndex">
      <summary>(Value: 29) Displays the zero-based index of the test socket for the current execution. Displays nothing when the execution is not participating in a multi-socket test process. A process model sends the text socket index through the <c>UIMsg_ModelState_BeginTesting</c> and <c>UIMsg_ModelState_Waiting</c> UIMessageCodes. This caption source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_Date">
      <summary>(Value: 31) Displays the current date. When you pass <c>True</c> to the long name option for the caption, the caption displays the system long date format. Otherwise, the caption displays the system short date format.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_Time">
      <summary>(Value: 30) Displays the current time using the system time format.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentSequenceFile_WithoutFileState">
      <summary>(Value: 32) Displays the path name of the currently executing or currently selected sequence file without a file state suffix. When you pass <c>True</c> to the long name option for the caption, the caption displays the full path name. Otherwise, the caption displays the base filename. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_CurrentSequenceFile_FileStateOnly">
      <summary>(Value: 33) Displays only the read-only, locked, executing, or modified file state of the currently executing or currently selected sequence file. This caption source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CaptionSources.CaptionSource_EngineEnvironment">
      <summary>(Value: 34) Displays the path name of the current TestStand environment. When you pass <c>True</c> to the long name option for the caption, the caption displays the full path name. Otherwise, the caption displays the base filename.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ImageSources">
      <summary>These constants specify types of image sources. Each image source provides an icon that indicates an aspect of the current application state. You can use these constants to connect an image to a StatusBar pane or button using the ExecutionViewMgr.ConnectImage or SequenceFileViewMgr.ConnectImage methods.
To obtain an image name without connecting it to a control, call the ApplicationMgr.GetImageName, ExecutionViewMgr.GetImageName, or SequenceFileViewMgr.GetImageName method. An image name is an icon name you can use to retrieve an icon from the TestStand Engine.
An image source applies to all manager controls unless the help for the enumeration element specifies particular manager controls to which it applies.</summary>
      <seealso cref="ApplicationMgr.GetImageName" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectImage" />
      <seealso cref="ExecutionViewMgr.GetImageName" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConnectImage" />
      <seealso cref="SequenceFileViewMgr.GetImageName" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_NotASource">
      <summary>(Value: 0) Guaranteed to never be a valid image source specifier.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_UUTStatus">
      <summary>(Value: 3) Displays an image that indicates the result status of the unit under test for the current execution. This image source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_BatchStatus">
      <summary>(Value: 5) Displays an image that indicates the batch result status for the batch that contains the current execution. This image source applies only to the ExecutionView Manager control.</summary>
      <seealso cref="ExecutionViewMgr" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_BatchState">
      <summary>(Value: 6) Displays an image that indicates the execution state of the batch that contains the current execution. This image source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_ModelState">
      <summary>(Value: 7) Displays an image that indicates the state of the current execution. This image source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_CurrentSequenceFile">
      <summary>(Value: 11) Displays a sequence file icon when a currently executing or currently selected file exists. Otherwise, the image source displays an empty image. This image source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_CurrentSequence">
      <summary>(Value: 12) Displays a sequence icon when a currently executing or currently selected sequence exists. Otherwise, the image source displays an empty image. This image source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_CurrentStepGroup">
      <summary>(Value: 13) Displays an image that indicates the currently executing or currently selected step group. This image source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_CurrentStep">
      <summary>(Value: 14) Displays the icon for the current step in the current execution. This image source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_CurrentExecution">
      <summary>(Value: 21) Displays an execution icon when a current execution exists. Otherwise, the image source displays an empty image. This image source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_CurrentThread">
      <summary>(Value: 22) Displays a thread icon when a current thread for the current execution exists. When no current thread exists, the image source displays an empty image. This image source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_CurrentCallStackEntry">
      <summary>(Value: 23) Displays a call stack icon for the selected stack frame in the current execution thread. When no current thread exists, the image source displays an empty image. This image source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ImageSources.ImageSource_CurrentProcessModelFile">
      <summary>(Value: 24) Displays a sequence file icon when a process model exists for the currently executing or currently selected file. Otherwise, the image source displays an empty image. This image source applies to the ExecutionView Manager and SequenceFileView Manager controls.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.NumericSources">
      <summary>These constants specify types of numeric sources. Each numeric source provides numeric values that describe an aspect of the current application state. You can use these constants to connect the execution progress state to a StatusBarPane progress indicator with the ExecutionViewMgr.ConnectNumeric method.
To obtain a numeric value without connecting it to a control, call the ExecutionViewMgr.GetNumericValue method. 
A numeric source applies to all manager controls unless the help for the enumeration element specifies a particular manager control or controls with which it applies.</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConnectNumeric" />
      <seealso cref="ExecutionViewMgr.GetNumericValue" />
      <seealso cref="StatusBarPane" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.NumericSources.NumericSources_NotASource">
      <summary>(Value: 0) Guaranteed to never be a valid numeric source specifier.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.NumericSources.NumericSources_ProgressPercent">
      <summary>(Value: 10) A value from <c>0.0</c> to <c>100.0</c> that indicates the percentage of progress the current execution reports. This value indicates the progress of operations for which the execution chooses to report the amount of progress. The value does not necessarily reflect the progress of the execution as a whole. This numeric source applies only to the ExecutionView Manager control.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.BooleanOrPreference">
      <summary>Use these constants with the ExpressionEdit.WantReturn and ExpressionEdit.WordWrap properties.</summary>
      <seealso cref="&quot;Expression Editing Options dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Edit_Options.htm')" />
      <seealso cref="ExpressionEdit.WantReturn" />
      <seealso cref="ExpressionEdit.WordWrap" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BooleanOrPreference.BooleanOrPreference_True">
      <summary>(Value: 1) Specifies a value of <c>True</c>.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BooleanOrPreference.BooleanOrPreference_False">
      <summary>(Value: 0) Specifies a value of <c>False</c>.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BooleanOrPreference.BooleanOrPreference_UsePreference">
      <summary>(Value: 3) Use the corresponding preference option in the Expression Editing Options dialog box.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBarPageItem">
      <summary>Represents an item in the ListBarPage.</summary>
      <seealso cref="ListBarPage" />
      <seealso cref="ListBarPage.Cursor" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPageItem.Index">
      <summary>Returns the zero-based index of an item.</summary>
      <seealso cref="ListBarPageItems.Item" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPageItem.IconName">
      <summary>Specifies the icon name for an item.</summary>
      <remarks>TestStand User Interface Controls use the icon files in the <c>&lt;TestStand&gt;\Components\Icons</c> and <c>&lt;TestStand&#160;Public&gt;\Components\Icons</c> directories. To change an icon for any item, specify the name of the .ico file.
<para>Note: When you connect a ListBarPage to a manager control, the ListBarPage becomes read-only. Attempting to change the icon name results in an error.</para></remarks>
      <seealso cref="ListBarPage" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPageItem.Caption">
      <summary>Specifies the caption for an item.</summary>
      <remarks><para>Note: When you connect a ListBarPage to a manager control, the ListBarPage becomes read-only. Attempting to change the caption of an item in the page results in an error.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPageItem.ToolTipText">
      <summary>Specifies the tooltip for an item. When this property is an empty string, the item uses the ListBarPageItem.Caption property for the tooltip.</summary>
      <seealso cref="ListBarPageItem.Caption" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBarPageItems">
      <summary>A collection of ListBarPageItem objects.
Use the ListBarPage.Items property to retrieve a ListBarPageItems object. Use the ListBarPage.Cursor property to determine the selected item in the page.</summary>
      <seealso cref="ListBarPage.Cursor" />
      <seealso cref="ListBarPage.Items" />
      <seealso cref="ListBarPageItem" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPageItems.Item(System.Object)">
      <summary>Returns a reference to an item with the specified name or at the specified index in the collection.</summary>
      <param name="itemIdx">You can pass a number to obtain a page item by its index value. You can also pass a string to obtain the page item using its name.</param>
      <seealso cref="ListBarPageItem" />
      <seealso cref="ListBarPageItems.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBarPageItems.Count">
      <summary>Returns the number of items in the collection.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBarPageItems.Insert(System.String,System.String,System.Int32)">
      <summary>Inserts a new item into the ListBarPage.</summary>
      <remarks><para>Note: When you connect a ListBarPage to a manager control, the ListBarPage becomes read-only. Attempting to change the content by calling this method results in an error.</para></remarks>
      <param name="itemCaption">Specifies the caption for the new item.</param>
      <param name="iconName">Specifies the name of the icon for the new item. Refer to the ListBarPageItem.IconName property for more information about naming icons for an item. Icon files are located in the <c>&lt;TestStand&gt;\Components\Icons</c> and <c>&lt;TestStand&#160;Public&gt;\Components\Icons</c> directories.</param>
      <param name="insertBefore">Specifies the index of the existing item before which the new item is inserted. Pass <c>-1</c> to insert the item at the end.</param>
      <seealso cref="ListBarPageItem.IconName" />
      <seealso cref="ListBarPageItems.Clear" />
      <seealso cref="ListBarPageItems.Remove" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBarPageItems.Remove(System.Int32)">
      <summary>Use this method to delete an item on the page.</summary>
      <remarks>This method takes the numeric index of an item.
<para>Note: When the ListBarPage is connected to a manager control, you cannot remove any items from the page.</para></remarks>
      <param name="itemIdx">Specifies the zero-based index of the item to remove.</param>
      <seealso cref="ListBarPage" />
      <seealso cref="ListBarPageItems.Clear" />
      <seealso cref="ListBarPageItems.Insert" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ListBarPageItems.Clear">
      <summary>Removes all items from the collection.</summary>
      <remarks><para>Note: When the ListBarPage object is connected to a manager control, you cannot remove any items from the page.</para></remarks>
      <seealso cref="ListBarPage" />
      <seealso cref="ListBarPageItems.Insert" />
      <seealso cref="ListBarPageItems.Remove" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.EntryPoint">
      <summary>An EntryPoint object represents an Execution or Configuration entry point. You can execute the entry point sequence using the EntryPoint.LoopOnSelectedSteps, EntryPoint.Run, or EntryPoint.RunSelectedSteps methods.
Use the ExecutionViewMgr.ConfigurationEntryPoints, ExecutionViewMgr.ExecutionEntryPoints, SequenceFileViewMgr.ConfigurationEntryPoints, and SequenceFileViewMgr.ExecutionEntryPoints properties to retrieve an EntryPoints object that is a collection of entry points.</summary>
      <seealso cref="Commands.InsertKind" />
      <seealso cref="EntryPoints" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="ExecutionViewMgr.ConfigurationEntryPoints" />
      <seealso cref="ExecutionViewMgr.ExecutionEntryPoints" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceFileViewMgr.ConfigurationEntryPoints" />
      <seealso cref="SequenceFileViewMgr.ExecutionEntryPoints" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.EntryPoint.Run(System.Object)">
      <summary>Runs the entry point.</summary>
      <returns>The new execution.</returns>
      <param name="editArgsVal">Specifies the EditArgs object for the new execution. Use this parameter only to override the <c>EditArgs</c> object the SequenceFileView Manager control creates.</param>
      <seealso cref="&quot;CommandKind_RunEntryPoint&quot;CommandKinds.htm" />
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="EntryPoint.LoopOnSelectedSteps" />
      <seealso cref="EntryPoint.RunSelectedSteps" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.EntryPoint.RunSelectedSteps(System.Object,System.Object)">
      <summary>Starts an interactive execution that runs the selected steps using the entry point of the process model.</summary>
      <remarks>Use the EntryPoint.InteractiveExecutionAllowed property to determine whether you can call this method.</remarks>
      <returns>The new interactive execution</returns>
      <param name="interactiveArgsVal">Specifies the InteractiveArgs objects for the new interactive execution. Use this parameter only to override the <c>InteractiveArgs</c> objects the SequenceFileView Manager control creates.</param>
      <param name="editArgsVal">Specifies the EditArgs object for the new interactive execution. Use this parameter only to override the <c>EditArgs</c> object the SequenceFileView Manager control creates.</param>
      <seealso cref="&quot;CommandKind_RunEntryPointOnSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="EntryPoint.InteractiveExecutionAllowed" />
      <seealso cref="EntryPoint.LoopOnSelectedSteps" />
      <seealso cref="EntryPoint.Run" />
      <seealso cref="&quot;InteractiveArgs&quot;javascript:APILink('/RefTopics/InteractiveArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.EntryPoint.LoopOnSelectedSteps(System.Object,System.Object)">
      <summary>Starts an interactive execution that loops on the selected steps using the entry point of the process model.</summary>
      <remarks>Use the EntryPoint.InteractiveExecutionAllowed property to determine whether you can call this method.</remarks>
      <returns>The new interactive execution.</returns>
      <param name="interactiveArgsVal">Specifies an InteractiveArgs object for the new interactive execution. Use this parameter only to override the <c>InteractiveArgs</c> object the SequenceFileView Manager control creates.</param>
      <param name="editArgsVal">Specifies the EditArgs object for the new interactive execution. Use this parameter only to override the <c>EditArgs</c> object the SequenceFileView Manager control creates.</param>
      <seealso cref="&quot;CommandKind_LoopEntryPointOnSelectedSteps&quot;CommandKinds.htm" />
      <seealso cref="&quot;EditArgs&quot;javascript:APILink('/RefTopics/EditArgs.htm')" />
      <seealso cref="EntryPoint.InteractiveExecutionAllowed" />
      <seealso cref="EntryPoint.Run" />
      <seealso cref="EntryPoint.RunSelectedSteps" />
      <seealso cref="&quot;InteractiveArgs&quot;javascript:APILink('/RefTopics/InteractiveArgs.htm')" />
      <seealso cref="&quot;Omitting Optional Parameters&quot;javascript:APILink('/InfoTopics/Optional_Parameters.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.EntryPoint.Name">
      <summary>Returns the display name of the entry point.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.EntryPoint.Enabled">
      <summary>Returns a Boolean value that indicates whether the entry point can be used to create an execution.</summary>
      <remarks>Use this value to update the enabled state of the control that might call the entry point. When you use a Button control connected to an entry point command source, the enabled state of the button updates automatically.</remarks>
      <seealso cref="Button" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.EntryPoint.InteractiveExecutionAllowed">
      <summary>Returns <c>True</c> if interactive executions are permitted using this entry point.</summary>
      <remarks>When this property is <c>True</c>, you can call the EntryPoint.RunSelectedSteps or EntryPoint.LoopOnSelectedSteps methods.</remarks>
      <seealso cref="EntryPoint.LoopOnSelectedSteps" />
      <seealso cref="EntryPoint.RunSelectedSteps" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.EntryPoint.Sequence">
      <summary>Returns the sequence that defines this entry point.</summary>
      <remarks>Use this property to access additional information about the entry point you cannot obtain from properties or methods of the entry point. For example, use this property to determine whether the entry point is an Execution or a Configuration entry point.</remarks>
      <seealso cref="&quot;Sequence&quot;javascript:APILink('/RefTopics/Sequence.htm')" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.QueryShutdownOptions">
      <summary>Use these constants with the opts parameter of the ApplicationMgr.QueryShutdown event.</summary>
      <seealso cref="ApplicationMgr.Shutdown" />
      <seealso cref="ApplicationMgr.QueryShutdown" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryShutdownOptions.QueryShutdown_ShowDialog">
      <summary>(Value: 0) The <c>ApplicationMgr.Shutdown</c> method continues shutdown and launches a dialog box if the method needs to terminate a running execution.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryShutdownOptions.QueryShutdown_Continue">
      <summary>(Value: 1) The <c>ApplicationMgr.Shutdown</c> method continues shutdown. If the shutdown process cannot continue because of a running execution, the application generates an error.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryShutdownOptions.QueryShutdown_Cancel">
      <summary>(Value: 2) The ApplicationMgr.Shutdown method does nothing.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.MouseButtons">
      <summary>Use these constants to indicate which mouse button has been clicked for <c>MouseDown</c>, <c>MouseMove</c>, and <c>MouseUp</c> events.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MouseButtons.MouseButton_Left">
      <summary>(Value: 1) The left mouse button.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MouseButtons.MouseButton_Right">
      <summary>(Value: 2) The right mouse button.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.MouseButtons.MouseButton_Middle">
      <summary>(Value: 4) The middle mouse button.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.QueryCloseExecutionOptions">
      <summary>Use these constants with the opt parameter of the ApplicationMgr.QueryCloseExecution event.</summary>
      <seealso cref="ApplicationMgr.QueryCloseExecution" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryCloseExecutionOptions.QueryCloseExecution_ShowDialog">
      <summary>(Value: 0) Launches a dialog box if the execution is not terminated. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryCloseExecutionOptions.QueryCloseExecution_Terminate">
      <summary>(Value: 1) Terminates the execution if it is running.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryCloseExecutionOptions.QueryCloseExecution_Cancel">
      <summary>(Value: 4) Cancels the closing of an execution. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryCloseExecutionOptions.QueryCloseExecution_AutoCloseWhenDone">
      <summary>(Value: 3) Marks the execution to close automatically when it completes. The dialog box prompts the user to abort, auto-close, terminate, or cancel.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryCloseExecutionOptions.QueryCloseExecution_Abort">
      <summary>(Value: 2) Aborts the execution if it is running.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryCloseExecutionOptions.QueryCloseExecution_Hide">
      <summary>(Value: 5) Turns off tracing and hides the execution. The execution continues to run. If the execution hits a breakpoint, tracepoint, or run-time error, the execution displays again.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExecutionViewOptions">
      <summary>Use these constants with the opts parameter of the ExecutionViewMgr.ConnectExecutionView method.</summary>
      <seealso cref="ExecutionViewMgr.ConnectExecutionView" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExecutionViewOptions.ExecutionViewConnection_NoOptions">
      <summary>(Value: 0) No options.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExecutionViewOptions.ExecutionViewConnection_IgnoreColors">
      <summary>(Value: 1) The control connected to the ExecutionView Manager control does not change colors based on the execution state when this option is used.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.FontSources">
      <summary>Use these constants with controls that have a <c>FontSource</c> property.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseFontProperty">
      <summary>(Value: 0) A corresponding <c>Font</c> property of the control determines the font.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseGUIFont">
      <summary>(Value: 1) The default system font for user interface objects.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseContainerFont">
      <summary>(Value: 2) The font the container supplies.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseTitlebarFont">
      <summary>(Value: 3) The system font for a title bar.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseInactiveTitlebarFont">
      <summary>(Value: 4) The system font for an inactive titlebar.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseIconFont">
      <summary>(Value: 5) The system font for an icon title.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseMenuFont">
      <summary>(Value: 6) The system font for a menu.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseMessageBoxFont">
      <summary>(Value: 7) The system font for a message box.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UsePaletteTitleFont">
      <summary>(Value: 8) The system font for the title of a Tools window.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseSelectedItemsFont">
      <summary>(Value: 9) The system font for the selected menu items.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseToolTipFont">
      <summary>(Value: 10) The system font for tooltips and status bars.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseSystemFixedWidthFont">
      <summary>(Value: 11) The system font for monospaced text. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.FontSources.FontSource_UseUIStyleFont">
      <summary>(Value: 12) The font the <c>UIStyle</c> object supplies.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SequenceFileDisplayReasons">
      <summary>These values are passed as a parameter to the ApplicationMgr.DisplaySequenceFile event to provide the reason for why the event was generated.</summary>
      <seealso cref="ApplicationMgr.DisplaySequenceFile" />
      <seealso cref="&quot;UIMessageCodes&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SequenceFileDisplayReasons.SequenceFileDisplayReason_UIMessage">
      <summary>(Value: 0) The event was generated because the TestStand Engine sent the <c>UIMsg_OpenWindows</c> message for the sequence file.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SequenceFileDisplayReasons.SequenceFileDisplayReason_OpenSequenceFile">
      <summary>(Value: 1) The event was generated because the sequence file was opened.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SequenceFileDisplayReasons.SequenceFileDisplayReason_GotoLocation">
      <summary>(Value: 3) The event was generated because of a request to display a location that resides in the file. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SequenceFileDisplayReasons.SequenceFileDisplayReason_NewSequenceFile">
      <summary>(Value: 2) The event was generated because a new sequence file was created. </summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExecutionDisplayReasons">
      <summary>These constants are passed as a parameter in the ApplicationMgr.DisplayExecution event to provide the reason for why the event was generated.</summary>
      <seealso cref="ApplicationMgr.DisplayExecution" />
      <seealso cref="&quot;UIMessageCodes&quot;javascript:APILink('/RefTopics/UIMessageCodes.htm')" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExecutionDisplayReasons.ExecutionDisplayReason_GotoLocation">
      <summary>(Value: 5) Event occurred because of a request to display a location that resides in the execution.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExecutionDisplayReasons.ExecutionDisplayReason_UIMessage">
      <summary>(Value: 0) Event occurred because the TestStand Engine sent the <c>UIMsg_OpenWindows</c> message for the execution.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExecutionDisplayReasons.ExecutionDisplayReason_StartExecution">
      <summary>(Value: 1) Event occurred because the execution was started.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExecutionDisplayReasons.ExecutionDisplayReason_Breakpoint">
      <summary>(Value: 2) Event occurred because the execution hit a breakpoint.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExecutionDisplayReasons.ExecutionDisplayReason_BreakOnUserRequest">
      <summary>(Value: 3) Event occurred because the user paused the execution.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExecutionDisplayReasons.ExecutionDisplayReason_BreakOnRunTimeError">
      <summary>(Value: 4) Event occurred because the execution was paused as a result of a run-time error.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.TextTypes">
      <summary>Use these constants with the ExpressionEdit.TextType property.</summary>
      <seealso cref="ExpressionEdit" />
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.TextType" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.TextTypes.TextType_PlainText">
      <summary>(Value: 0) Indicates the text in an ExpressionEdit control is not an expression. The value of the ExpressionEdit.Text property is equivalent to the value of the ExpressionEdit.DisplayText property. This value makes an ExpressionEdit control behave like an edit or text box control. The ExpressionEdit control does not use syntax highlighting, perform error checking, perform autocompletion, or display function tips. The ExpressionEdit control context menu contains only menu items for text editing.</summary>
      <seealso cref="ExpressionEdit.DisplayText" />
      <seealso cref="ExpressionEdit.Text" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.TextTypes.TextType_Expression">
      <summary>(Value: 1) Indicates the text in an ExpressionEdit control is an expression.</summary>
      <seealso cref="ExpressionEdit" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.TextTypes.TextType_ExpressionWithCppIdentifiers">
      <summary>(Value: 2) Indicates the text in an ExpressionEdit control is an expression that might contain C++ scope resolution and template operators.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.DisplayErrorOptions">
      <summary>Use these constants with the ExpressionEdit.DisplayError method.</summary>
      <seealso cref="ExpressionEdit" />
      <seealso cref="ExpressionEdit.DisplayError" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.DisplayErrorOptions.DisplayError_NoOptions">
      <summary>(Value: 0x0) No options.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.DisplayErrorOptions.DisplayError_ForAll">
      <summary>(Value: 0x1) Use this option to show or hide the error for all ExpressionEdit controls. This is useful when you modify a PropertyObject used as the context for several ExpressionEdit controls and you want those ExpressionEdit controls to re-evaluate their expressions for errors.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.Borders">
      <summary>A Borders object specifies the frame and draggable borders that surround a control. A frame is a thin rectangle that surrounds a control on all sides. A draggable border is a rectangular strip of configurable thickness you can place on any combination of the edges of a control. When the application handles the <c>BorderDragged</c> event for the control, users can drag the borders to resize or move the control.
When a control fills a rectangular view area of an application window, you can enable the draggable borders to implement splitter bars that resize the view. Although you can implement splitter bars in some environments without using draggable borders, some environments do not provide any other way to create a splitter bar. For other environments, creating a resizable view using draggable borders is sometimes simpler than using a separate splitter bar. You can also disable the <c>BorderDragged</c> event for a control to use borders for their cosmetic effect only.</summary>
      <seealso cref="ExpressionEdit.Borders" />
      <seealso cref="ListBar.Borders" />
      <seealso cref="ListBox.Borders" />
      <seealso cref="ReportView.Borders" />
      <seealso cref="SequenceView.Borders" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Borders.VisibleBorders">
      <summary>Specifies which draggable borders the control displays.</summary>
      <remarks>Use any combination of the WhichBorders constants. Use the bitwise-OR operator to specify more than one value.</remarks>
      <seealso cref="WhichBorders" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Borders.BorderWidth">
      <summary>Specifies the width of the draggable borders the control displays.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Borders.BorderEdgeStyle">
      <summary>Specifies the appearance of the draggable borders the control displays.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Borders.FrameEdgeStyle">
      <summary>Specifies the appearance of the frame the control displays.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Borders.FrameVisible">
      <summary>When this property is <c>True</c>, the control displays a thin rectangular frame that surrounds the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Borders.FrameInsideBorders">
      <summary>When this property is <c>True</c>, the control displays the frame within the draggable borders. When this property is <c>False</c>, the control displays the frame around the draggable borders.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Borders.BorderDraggedEventEnabled">
      <summary>When this property is <c>True</c>, the control displays a resizing cursor over the draggable borders, and the control generates <c>BorderDragged</c> events when the user drags a draggable border with the mouse.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.Borders.GetFrameThickness(System.Int32@,System.Int32@)">
      <summary>Returns the vertical and horizontal thickness of the frame around the control. The values returned are based on the frame visibility and style.</summary>
      <param name="verticalThickness">Returns the thickness, in pixels, of the vertical portion of the frame.</param>
      <param name="horizontalThickness">Returns the thickness, in pixels, of the horizontal portion of the frame.</param>
      <seealso cref="Borders.FrameEdgeStyle" />
      <seealso cref="Borders.FrameVisible" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.Borders.FrameEdgeUIStyleColor">
      <summary>Specifies the color to use for the frame and draggable borders when using the option <c>EdgeStyles.EdgeStyle_UI</c>. The default color is <c>COLOR_3DFACE</c>.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.EdgeStyles">
      <summary>The following constants specify the appearance of the edge of a control or a control element:</summary>
      <seealso cref="Borders.BorderEdgeStyle" />
      <seealso cref="Borders.FrameEdgeStyle" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EdgeStyles.EdgeStyle_Flat">
      <summary>(Value: 1) The edge appears flat.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EdgeStyles.EdgeStyle_FixedSingle">
      <summary>(Value: 2) The edge is a black line, one pixel thick.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EdgeStyles.EdgeStyle_ControlEdge">
      <summary>(Value: 3) The edge has the appearance of a control edge. The appearance can vary depending on the Microsoft Windows appearance settings and on the specific property to which you apply this value.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EdgeStyles.EdgeStyle_Raised">
      <summary>(Value: 4) The edge has a raised three-dimensional appearance.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EdgeStyles.EdgeStyle_Inset">
      <summary>(Value: 5) The edge has a sunken three-dimensional appearance.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EdgeStyles.EdgeStyle_UI">
      <summary>(Value: 6) The edge uses the color from the property <c>Borders.FrameEdgeUIStyleColor</c>.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.WhichBorders">
      <summary>These constants specify the draggable borders of a control. The control can have borders on any combination of edges or it can have no borders at all. To specify multiple borders, combine these constants with a bitwise-OR operator.</summary>
      <seealso cref="Borders.VisibleBorders" />
      <seealso cref="ExpressionEdit.BorderDragged" />
      <seealso cref="InsertionPalette.BorderDragged" />
      <seealso cref="ListBar.BorderDragged" />
      <seealso cref="ListBox.BorderDragged" />
      <seealso cref="ReportView.BorderDragged" />
      <seealso cref="SequenceView.BorderDragged" />
      <seealso cref="VariablesView.BorderDragged" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.WhichBorders.WhichBorder_None">
      <summary>(Value: 0x0) Specifies no borders.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.WhichBorders.WhichBorder_Top">
      <summary>(Value: 0x1) Specifies a border at the top edge of the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.WhichBorders.WhichBorder_Bottom">
      <summary>(Value: 0x2) Specifies a border at the bottom edge of the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.WhichBorders.WhichBorder_Left">
      <summary>(Value: 0x4) Specifies a border at the left edge of the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.WhichBorders.WhichBorder_Right">
      <summary>(Value: 0x8) Specifies a border at the right edge of the control.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.KeyModifiers">
      <summary>These constants specify the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys for the <c>KeyDown</c>, <c>KeyUp</c>, <c>MouseDown</c>, <c>MouseUp</c>, and <c>MouseMove</c> events.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyModifiers.KeyModifier_Shift">
      <summary>(Value: 0x1) The &lt;Shift&gt; key is pressed.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyModifiers.KeyModifier_Control">
      <summary>(Value: 0x2) The &lt;Ctrl&gt; key is pressed.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyModifiers.KeyModifier_Alt">
      <summary>(Value: 0x4) The &lt;Alt&gt; key is pressed.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyModifiers.KeyModifier_None">
      <summary>(Value: 0x0) The &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys are not pressed.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.KeyCodes">
      <summary>These constants specify the virtual key codes for the <c>KeyDown</c> and <c>KeyUp</c> events.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_CLEAR">
      <summary>(Value: 0x0C) The Clear key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_TAB">
      <summary>(Value: 0x09) The Tab key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_BACK">
      <summary>(Value: 0x08) The Backspace key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_CANCEL">
      <summary>(Value: 0x03) The Cancel key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_SCROLL">
      <summary>(Value: 0x91) The Scroll Lock key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMLOCK">
      <summary>(Value: 0x90) The Num Lock key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F24">
      <summary>(Value: 0x87) The F24 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F23">
      <summary>(Value: 0x86) The F23 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F22">
      <summary>(Value: 0x85) The F22 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F21">
      <summary>(Value: 0x84) The F21 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F20">
      <summary>(Value: 0x83) The F20 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F19">
      <summary>(Value: 0x82) The F19 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F18">
      <summary>(Value: 0x81) The F18 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F17">
      <summary>(Value: 0x80) The F17 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F16">
      <summary>(Value: 0x7F) The F16 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F15">
      <summary>(Value: 0x7E) The F15 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F14">
      <summary>(Value: 0x7D) The F14 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F13">
      <summary>(Value: 0x7C) The F13 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F12">
      <summary>(Value: 0x7B) The F12 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F11">
      <summary>(Value: 0x7A) The F11 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F10">
      <summary>(Value: 0x79) The F10 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F9">
      <summary>(Value: 0x78) The F9 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F8">
      <summary>(Value: 0x77) The F8 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F7">
      <summary>(Value: 0x76) The F7 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F6">
      <summary>(Value: 0x75) The F6 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F5">
      <summary>(Value: 0x74) The F5 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F4">
      <summary>(Value: 0x73) The F4 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F3">
      <summary>(Value: 0x72) The F3 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F2">
      <summary>(Value: 0x71) The F2 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F1">
      <summary>(Value: 0x70) The F1 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_DIVIDE">
      <summary>(Value: 0x6F) The Divide key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_DECIMAL">
      <summary>(Value: 0x6E) The Decimal key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_SUBTRACT">
      <summary>(Value: 0x6D) The Subtract key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_SEPARATOR">
      <summary>(Value: 0x6C) The Separator key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_ADD">
      <summary>(Value: 0x6B) The Add key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_MULTIPLY">
      <summary>(Value: 0x6A) The Multiply key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD9">
      <summary>(Value: 0x69) The numeric keypad 9 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD8">
      <summary>(Value: 0x68) The numeric keypad 8 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD7">
      <summary>(Value: 0x67) The numeric keypad 7 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD6">
      <summary>(Value: 0x66) The numeric keypad 6 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD5">
      <summary>(Value: 0x65) The numeric keypad 5 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD4">
      <summary>(Value: 0x64) The numeric keypad 4 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD3">
      <summary>(Value: 0x63) The numeric keypad 3 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD2">
      <summary>(Value: 0x62) The numeric keypad 2 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD1">
      <summary>(Value: 0x61) The numeric keypad 1 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NUMPAD0">
      <summary>(Value: 0x60) The numeric keypad 0 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_APPS">
      <summary>(Value: 0x5D) The Applications key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_RWIN">
      <summary>(Value: 0x5C) The Right Microsoft Windows key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_LWIN">
      <summary>(Value: 0x5B) The Left Microsoft Windows key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_Z">
      <summary>(Value: 0x5A) The Z key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_Y">
      <summary>(Value: 0x59) The Y key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_X">
      <summary>(Value: 0x58) The X key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_W">
      <summary>(Value: 0x57) The W key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_V">
      <summary>(Value: 0x56) The V key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_U">
      <summary>(Value: 0x55) The U key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_T">
      <summary>(Value: 0x54) The T key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_S">
      <summary>(Value: 0x53) The S key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_R">
      <summary>(Value: 0x52) The R key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_Q">
      <summary>(Value: 0x51) The Q key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_P">
      <summary>(Value: 0x50) The P key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_O">
      <summary>(Value: 0x4F) The O key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_N">
      <summary>(Value: 0x4E) The N key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_M">
      <summary>(Value: 0x4D) The M key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_L">
      <summary>(Value: 0x4C) The L key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_K">
      <summary>(Value: 0x4B) The K key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_J">
      <summary>(Value: 0x4A) The J key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_I">
      <summary>(Value: 0x49) The I key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_H">
      <summary>(Value: 0x48) The H key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_G">
      <summary>(Value: 0x47) The G key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_F">
      <summary>(Value: 0x46) The F key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_E">
      <summary>(Value: 0x45) The E key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_D">
      <summary>(Value: 0x44) The D key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_C">
      <summary>(Value: 0x43) The C key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_B">
      <summary>(Value: 0x42) The B key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_A">
      <summary>(Value: 0x41) The A key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_9">
      <summary>(Value: 0x39) The 9 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_8">
      <summary>(Value: 0x38) The 8 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_7">
      <summary>(Value: 0x37) The 7 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_6">
      <summary>(Value: 0x36) The 6 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_5">
      <summary>(Value: 0x35) The 5 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_4">
      <summary>(Value: 0x34) The 4 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_3">
      <summary>(Value: 0x33) The 3 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_2">
      <summary>(Value: 0x32) The 2 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_1">
      <summary>(Value: 0x31) The 1 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_0">
      <summary>(Value: 0x30) The 0 key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_HELP">
      <summary>(Value: 0x2F) The Help key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_DELETE">
      <summary>(Value: 0x2E) The Delete key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_INSERT">
      <summary>(Value: 0x2D) The Insert key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_SNAPSHOT">
      <summary>(Value: 0x2C) The Snapshot key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_EXECUTE">
      <summary>(Value: 0x2B) The Execute key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_PRINT">
      <summary>(Value: 0x2A) The Print key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_SELECT">
      <summary>(Value: 0x29) The Select key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_DOWN">
      <summary>(Value: 0x28) The Down Arrow key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_RIGHT">
      <summary>(Value: 0x27) The Right Arrow key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_UP">
      <summary>(Value: 0x26) The Up Arrow key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_LEFT">
      <summary>(Value: 0x25) The Left Arrow key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_HOME">
      <summary>(Value: 0x24) The Home key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_END">
      <summary>(Value: 0x23) The End key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NEXT">
      <summary>(Value: 0x22) The Page Down key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_PRIOR">
      <summary>(Value: 0x21) The Page Up key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_SPACE">
      <summary>(Value: 0x20) The Space key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_MODECHANGE">
      <summary>(Value: 0x1F) The IME Mode Change Request key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_ACCEPT">
      <summary>(Value: 0x1E) The Input Method Editor (IME) Accept key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_NONCONVERT">
      <summary>(Value: 0x1D) The IME Nonconvert key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_CONVERT">
      <summary>(Value: 0x1C) The IME Convert key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_ESCAPE">
      <summary>(Value: 0x1B) The Escape key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_KANJI">
      <summary>(Value: 0x19) The Kanji key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_HANJA">
      <summary>(Value: 0x19) The Hanja key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_FINAL">
      <summary>(Value: 0x18) The Final key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_JUNJA">
      <summary>(Value: 0x17) The Junja key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_HANGUL">
      <summary>(Value: 0x15) The Hangul key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_HANGEUL">
      <summary>(Value: 0x15) The Hangeul key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_KANA">
      <summary>(Value: 0x15) The Kana key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_CAPITAL">
      <summary>(Value: 0x14) The Caps Lock key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_PAUSE">
      <summary>(Value: 0x13) The Pause key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_MENU">
      <summary>(Value: 0x12) The Alt key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_CONTROL">
      <summary>(Value: 0x11) The Ctrl key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_SHIFT">
      <summary>(Value: 0x10) The Shift key.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.KeyCodes.KeyCode_VK_RETURN">
      <summary>(Value: 0x0D) The Enter key.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions">
      <summary>Use these constants with the SequenceView.BlockDisplayOptions property.</summary>
      <seealso cref="SequenceView.BlockDisplayOptions" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions.BlockDisplayOption_None">
      <summary>(Value: 0x0) No options.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions.BlockDisplayOption_Indent">
      <summary>(Value: 0x1) Indents the steps within a block.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions.BlockDisplayOption_ShowLines">
      <summary>(Value: 0x2) Draws a vertical bar to the left of the steps in a block.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions.BlockDisplayOption_DottedLines">
      <summary>(Value: 0x4) Draws the vertical bar to the left of the block with a dotted line.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions.BlockDisplayOption_ShowStepIcons">
      <summary>(Value: 0x8) Displays icons for steps that define or operate according to the block structure of the sequence.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions.BlockDisplayOption_BoldStepFont">
      <summary>(Value: 0x10) Displays the step name in bold for steps that define or operate according to the block structure of the sequence.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions.BlockDisplayOption_HighlightMismatchErrors">
      <summary>(Value: 0x20) Draws the step name in red for steps that start blocks that do not have an End step and for block ending steps that do not match with a block starting step. Also draws the vertical block bar red for blocks that do not have an ending step.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.BlockDisplayOptions.BlockDisplayOption_ShowGroupLines">
      <summary>(Value: 0x40) Draws a vertical bar to the left of the steps in a step group. </summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.CheckBox">
      <summary>Connect a manager control to a CheckBox control so users can toggle the state of a common user interface command, such as <c>Break on Step Failure</c>. When you connect to a command, the CheckBox control automatically updates the caption text, visibility, and enabled state. When you enable the checkbox, the checkbox executes the command, which toggles the state of the command.
The CheckBox control supports the following commands:<para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonFirstStep</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonSequenceFailure</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonStepFailure</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_ToggleBreakPoint</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_TracingEnabled</c></para></para></summary>
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ICheckBox">
      <summary>Connect a manager control to a CheckBox control so users can toggle the state of a common user interface command, such as <c>Break on Step Failure</c>. When you connect to a command, the CheckBox control automatically updates the caption text, visibility, and enabled state. When you enable the checkbox, the checkbox executes the command, which toggles the state of the command.
The CheckBox control supports the following commands:<para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonFirstStep</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonSequenceFailure</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonStepFailure</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_ToggleBreakPoint</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_TracingEnabled</c></para></para></summary>
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.CheckBoxClass">
      <summary>Connect a manager control to a CheckBox control so users can toggle the state of a common user interface command, such as <c>Break on Step Failure</c>. When you connect to a command, the CheckBox control automatically updates the caption text, visibility, and enabled state. When you enable the checkbox, the checkbox executes the command, which toggles the state of the command.
The CheckBox control supports the following commands:<para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonFirstStep</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonSequenceFailure</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_BreakonStepFailure</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_ToggleBreakPoint</c></para><para>&#160;&#160;&#160;&#160;* <c>CommandKind_TracingEnabled</c></para></para></summary>
      <seealso cref="ApplicationMgr.ConnectCommand" />
      <seealso cref="CommandKinds" />
      <seealso cref="ExecutionViewMgr.ConnectCommand" />
      <seealso cref="SequenceFileViewMgr.ConnectCommand" />
      <seealso cref="&#xD;&#xA;" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.Enabled">
      <summary>The control responds to user input only when this property is <c>True</c>.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.Enabled">
      <summary>The control responds to user input only when this property is <c>True</c>.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.Font">
      <summary>Specifies the font for the control when the value of the CheckBox.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="CheckBox.FontSource" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.Font">
      <summary>Specifies the font for the control when the value of the CheckBox.FontSource property is <c>FontSource_UseFontProperty</c>.</summary>
      <seealso cref="CheckBox.FontSource" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.BackColor">
      <summary>Specifies the background color for the control. This property does not change the appearance of a control when you set the CheckBox.Style property to <c>CheckBoxStyle_Button</c>.</summary>
      <seealso cref="CheckBox.ForeColor" />
      <seealso cref="CheckBox.Style" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.BackColor">
      <summary>Specifies the background color for the control. This property does not change the appearance of a control when you set the CheckBox.Style property to <c>CheckBoxStyle_Button</c>.</summary>
      <seealso cref="CheckBox.ForeColor" />
      <seealso cref="CheckBox.Style" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.ForeColor">
      <summary>Specifies the foreground color for the CheckBox control. This property does not change the appearance of a control when you set the CheckBox.Style property to <c>CheckBoxStyle_Button</c>.</summary>
      <seealso cref="CheckBox.BackColor" />
      <seealso cref="CheckBox.Style" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.ForeColor">
      <summary>Specifies the foreground color for the CheckBox control. This property does not change the appearance of a control when you set the CheckBox.Style property to <c>CheckBoxStyle_Button</c>.</summary>
      <seealso cref="CheckBox.BackColor" />
      <seealso cref="CheckBox.Style" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.Caption">
      <summary>Specifies the text the control displays.</summary>
      <remarks>In the caption, include an ampersand (<c>&amp;</c>) immediately before the character, if any, you want to designate as an accelerator character. The character displays as underlined. Press &lt;Alt&gt; and click the underlined character to move the focus to the control. To include an ampersand character in a caption without creating an accelerator character, include two consecutive ampersands. A single ampersand displays in the caption and no characters display as underlined.
When you connect this control to a manager control, the manager control sets this property automatically.</remarks>
      <seealso cref="CheckBox.TextAlign" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.Caption">
      <summary>Specifies the text the control displays.</summary>
      <remarks>In the caption, include an ampersand (<c>&amp;</c>) immediately before the character, if any, you want to designate as an accelerator character. The character displays as underlined. Press &lt;Alt&gt; and click the underlined character to move the focus to the control. To include an ampersand character in a caption without creating an accelerator character, include two consecutive ampersands. A single ampersand displays in the caption and no characters display as underlined.
When you connect this control to a manager control, the manager control sets this property automatically.</remarks>
      <seealso cref="CheckBox.TextAlign" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.hWnd">
      <summary>Returns a Window handle for the CheckBox control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.hWnd">
      <summary>Returns a Window handle for the CheckBox control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.Image">
      <summary>Specifies a custom graphic for the CheckBox control.</summary>
      <remarks>This property is used only when the style of the control is <c>CheckBoxStyle_Button</c>.
Use the Engine.Images property to obtain the TestStand images collection, and use the Images.FindImage method to obtain a particular image reference. Icon files are located in the <c>&lt;TestStand&gt;\Components\Icons</c> and <c>&lt;TestStand&#160;Public&gt;\Components\Icons</c> directories.</remarks>
      <seealso cref="CheckBox.Style" />
      <seealso cref="CheckBoxStyles" />
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.Image">
      <summary>Specifies a custom graphic for the CheckBox control.</summary>
      <remarks>This property is used only when the style of the control is <c>CheckBoxStyle_Button</c>.
Use the Engine.Images property to obtain the TestStand images collection, and use the Images.FindImage method to obtain a particular image reference. Icon files are located in the <c>&lt;TestStand&gt;\Components\Icons</c> and <c>&lt;TestStand&#160;Public&gt;\Components\Icons</c> directories.</remarks>
      <seealso cref="CheckBox.Style" />
      <seealso cref="CheckBoxStyles" />
      <seealso cref="&quot;Engine.Images&quot;javascript:APILink('/RefTopics/Engine_Images_P.htm')" />
      <seealso cref="&quot;Images.FindImage&quot;javascript:APILink('/RefTopics/Images_FindImage_M.htm')" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.TextAlign">
      <summary>Specifies the horizontal and vertical alignment of text on a CheckBox control.</summary>
      <remarks>When the style of the control is <c>CheckBoxStyle_Normal</c>, the control supports only the <c>ContentAlignmentStyle_MiddleLeft</c> and <c>ContentAlignmentStyle_MiddleRight</c> values.</remarks>
      <seealso cref="CheckBox.Style" />
      <seealso cref="CheckBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.TextAlign">
      <summary>Specifies the horizontal and vertical alignment of text on a CheckBox control.</summary>
      <remarks>When the style of the control is <c>CheckBoxStyle_Normal</c>, the control supports only the <c>ContentAlignmentStyle_MiddleLeft</c> and <c>ContentAlignmentStyle_MiddleRight</c> values.</remarks>
      <seealso cref="CheckBox.Style" />
      <seealso cref="CheckBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.Checked">
      <summary>Specifies a value that indicates whether the CheckBox control is in the checked state.</summary>
      <returns>Returns <c>True</c> when the CheckBox control is in the checked state. Otherwise, returns <c>False</c>.</returns>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.Checked">
      <summary>Specifies a value that indicates whether the CheckBox control is in the checked state.</summary>
      <returns>Returns <c>True</c> when the CheckBox control is in the checked state. Otherwise, returns <c>False</c>.</returns>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.UseMaskColor">
      <summary>The control uses the color the CheckBox.MaskColor property specifies as a mask color when this property is <c>True</c>. You can use the mask color to create transparent regions.</summary>
      <remarks>This property is used only when the style of the control is <c>CheckBoxStyle_Button</c>.
</remarks>
      <seealso cref="CheckBox.MaskColor" />
      <seealso cref="CheckBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.UseMaskColor">
      <summary>The control uses the color the CheckBox.MaskColor property specifies as a mask color when this property is <c>True</c>. You can use the mask color to create transparent regions.</summary>
      <remarks>This property is used only when the style of the control is <c>CheckBoxStyle_Button</c>.
</remarks>
      <seealso cref="CheckBox.MaskColor" />
      <seealso cref="CheckBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.MaskColor">
      <summary>Specifies a color in the picture of the control as a mask color. You can use the mask color to create transparent regions.</summary>
      <remarks>The color specified is used as a mask color when the CheckBox.UseMaskColor property is <c>True</c>.
This property is used only when the style of the control is <c>CheckBoxStyle_Button</c>.</remarks>
      <seealso cref="CheckBox.UseMaskColor" />
      <seealso cref="CheckBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.MaskColor">
      <summary>Specifies a color in the picture of the control as a mask color. You can use the mask color to create transparent regions.</summary>
      <remarks>The color specified is used as a mask color when the CheckBox.UseMaskColor property is <c>True</c>.
This property is used only when the style of the control is <c>CheckBoxStyle_Button</c>.</remarks>
      <seealso cref="CheckBox.UseMaskColor" />
      <seealso cref="CheckBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.Style">
      <summary>Specifies the appearance of the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.Style">
      <summary>Specifies the appearance of the control.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources. 
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the CheckBox.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="CheckBox.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.FontSource">
      <summary>Specifies the font the control uses. The default value for this property is <c>FontSource_UseGUIFont</c>.</summary>
      <remarks>When the value of this property is <c>FontSource_UseFontProperty</c>, the corresponding <c>Font</c> property specifies the particular font the control uses. Otherwise, the control uses the font from the source this property specifies. Refer to the FontSources enumeration for the list of valid font sources. 
Set this property to a value other than <c>FontSource_UseFontProperty</c> if you expect the font the CheckBox.Font property specifies to not be present on a computer at run time. For example, a font present on an English version of the Microsoft Windows operating system might not be present on a Japanese version of the Windows operating system.</remarks>
      <seealso cref="CheckBox.Font" />
      <seealso cref="FontSources" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting.</summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
The following are the recommended settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ICheckBox.ImageAlign">
      <summary>Specifies the horizontal and vertical alignment of an Image on a CheckBox control.</summary>
      <remarks>This property is used only when the style of the control is <c>CheckBoxStyle_Button</c>.</remarks>
      <seealso cref="CheckBox.Image" />
      <seealso cref="CheckBox.Style" />
      <seealso cref="CheckBoxStyles" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.ImageAlign">
      <summary>Specifies the horizontal and vertical alignment of an Image on a CheckBox control.</summary>
      <remarks>This property is used only when the style of the control is <c>CheckBoxStyle_Button</c>.</remarks>
      <seealso cref="CheckBox.Image" />
      <seealso cref="CheckBox.Style" />
      <seealso cref="CheckBoxStyles" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ICheckBox.Localize(System.String)">
      <summary>Localizes the text caption on the button in this control.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the caption for the control. 
When you call this method, the control replaces the caption with the string from the <c>.ini</c> file. If the caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect this control to a manager control, the manager control automatically sets a localized caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.CheckBoxClass.Localize(System.String)">
      <summary>Localizes the text caption on the button in this control.</summary>
      <remarks>First, update a <c>.ini</c> file located in the TestStand <c>Language</c> directory with the required string. Second, use the string tag in the <c>.ini</c> file as the caption for the control. 
When you call this method, the control replaces the caption with the string from the <c>.ini</c> file. If the caption is not a tag in the <c>.ini</c> file, the caption does not change.
<para>Note: When you connect this control to a manager control, the manager control automatically sets a localized caption.</para></remarks>
      <param name="sectionName">Specifies the name of the section in the language files that contains the localized text.</param>
      <seealso cref="ApplicationMgr.LocalizeAllControls" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._CheckBoxEvents_Event.Click">
      <summary>Occurs when you press and release the mouse on the control or when the checked state of the control changes.</summary>
      <seealso cref="CheckBox.Checked" />
      <seealso cref="CheckBox.MouseDown" />
      <seealso cref="CheckBox.MouseMove" />
      <seealso cref="CheckBox.MouseUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._CheckBoxEvents_Event.KeyDown">
      <summary>Occurs when the user presses a key while the control has the input focus. This event occurs before the CheckBox.KeyPress event.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="CheckBox.KeyPress" />
      <seealso cref="CheckBox.KeyUp" />
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._CheckBoxEvents_Event.KeyPress">
      <summary>Occurs when the user presses a key while a control is active. This event occurs after the CheckBox.KeyDown event.</summary>
      <param name="keyAscii">Specifies the ASCII value of the pressed key.</param>
      <seealso cref="CheckBox.KeyDown" />
      <seealso cref="CheckBox.KeyUp" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._CheckBoxEvents_Event.KeyUp">
      <summary>Occurs when the user releases a key while the control has the input focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="CheckBox.KeyDown" />
      <seealso cref="CheckBox.KeyPress" />
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._CheckBoxEvents_Event.MouseDown">
      <summary>Occurs when the user clicks the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="Checkbox.Click" />
      <seealso cref="Checkbox.MouseMove" />
      <seealso cref="Checkbox.MouseUp" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._CheckBoxEvents_Event.MouseMove">
      <summary>Occurs when the user moves the mouse over the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="Checkbox.Click" />
      <seealso cref="Checkbox.MouseDown" />
      <seealso cref="Checkbox.MouseUp" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._CheckBoxEvents_Event.MouseUp">
      <summary>Occurs when the user releases the mouse on the control.</summary>
      <param name="btn">Specifies the mouse button pressed to cause this event. You can use any one of the MouseButtons constants.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <param name="x">Specifies the x-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <param name="y">Specifies the y-coordinate of the mouse pointer, relative to the control, at the moment when the event occurs.</param>
      <seealso cref="Checkbox.Click" />
      <seealso cref="Checkbox.MouseDown" />
      <seealso cref="Checkbox.MouseMove" />
      <seealso cref="KeyModifiers" />
      <seealso cref="MouseButtons" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._CheckBoxEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton">
      <summary>An ExpressionEditButton can be a non-custom button, such as an Expression Browser button, which the ExpressionEdit control manages automatically. An ExpressionEditButton can also be a custom button. You can manage the custom button using the properties of an ExpressionEditButton.</summary>
      <seealso cref="ExpressionEdit" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.Enabled">
      <summary>The control responds to user-generated events only when this property is <c>True</c>.</summary>
      <remarks>The ExpressionEdit button is disabled when this property is <c>False</c> or the ExpressionEdit.Enabled property is <c>False</c>.</remarks>
      <seealso cref="ExpressionEdit.Enabled" />
      <seealso cref="ExpressionEditButton.Visible" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.hWnd">
      <summary>Returns the Window handle of the ExpressionEdit button.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.Icon">
      <summary>Specifies the picture the ExpressionEdit button displays.</summary>
      <remarks>To programmatically add an icon to a custom button, store the icon in the <c>&lt;TestStand Public&gt;\Components\Icons</c> directory and use the following pseudocode to set the image to use:
<para><code>ExpressionEditButton.Icon = (stdole.IPictureDisp)Engine.Images.FindImage(&quot;MyIcon.ico&quot;, 16, 16)</code></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.Kind">
      <summary>Specifies the type of ExpressionEdit button. Use the ExpressionEditButtonKinds constants with this property.</summary>
      <seealso cref="ExpressionEditButtonKinds" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.ToolTipText">
      <summary>Specifies the tooltip for the ExpressionEdit button.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.ContextMenuItemCaption">
      <summary>Set this property to a non-empty string to create a menu item in the ExpressionEdit control context menu for the ExpressionEdit button. Selecting the context menu item is equivalent to clicking the ExpressionEdit button.</summary>
      <remarks><para>Note: The Browse and Check for Errors context menu items do not correspond to the Browse Expression and Check Expression buttons on the ExpressionEdit control. The default <c>ContextMenuItemCaption</c> property for the Browse Expression and Check Expression buttons is empty.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.ShortcutKey">
      <summary>Specifies a keyboard shortcut for clicking the ExpressionEdit button when the ExpressionEdit control is active.</summary>
      <seealso cref="ExpressionEditButton.ShortcutModifier" />
      <seealso cref="ExpressionEditButtons" />
      <seealso cref="ShortcutKeys" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.ShortcutModifier">
      <summary>Specifies modifiers for a keyboard shortcut for clicking the ExpressionEdit button. Use any combination of the ShortcutModifiers constants.</summary>
      <seealso cref="ExpressionEditButton.ShortcutKey" />
      <seealso cref="ExpressionEditButtons" />
      <seealso cref="ShortcutModifiers" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.Visible">
      <summary>Specifies whether the button is visible.</summary>
      <seealso cref="ExpressionEditButton.Enabled" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.BackColor">
      <summary>Specifies the background color for the ExpressionEdit button.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.Style">
      <summary>Specifies the appearance of the button.</summary>
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditButton.DoClick">
      <summary>Call this method to simulate a button click.</summary>
      <remarks>You can call this method to simulate a button click when the button is disabled or invisible.</remarks>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtons">
      <summary>A collection of ExpressionEditButton objects. Use the ExpressionEdit.Buttons property to retrieve the ExpressionEditButtons object for an ExpressionEdit control.</summary>
      <seealso cref="ExpressionEdit" />
      <seealso cref="ExpressionEdit.Buttons" />
      <seealso cref="ExpressionEditButton" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtons.GetItem(System.Int32,NationalInstruments.TestStand.Interop.UI.SpecifyExpressionEditButton)">
      <summary>Returns the ExpressionEdit button at the specified index or of the specified kind.</summary>
      <param name="indexOrKind">When you pass <c>SpecifyButton_ByIndex</c> as the specify parameter, indexOrKind is the zero-based index of the button to return. When you pass <c>SpecifyButton_ByKind</c>, the first button in the collection with a kind of indexOrKind is returned or <c>NULL</c> is returned when no button with a kind of indexOrKind exists.</param>
      <param name="specify">Specifies whether indexOrKind is a button index or a button kind.</param>
      <seealso cref="ExpressionEditButtonKinds" />
      <seealso cref="ExpressionEditButtons.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtons.Count">
      <summary>Returns the number of items in the collection.</summary>
      <seealso cref="ExpressionEditButtons.GetItem" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtons.Clear">
      <summary>Removes all items from the collection.</summary>
      <seealso cref="ExpressionEditButtons.Remove" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtons.Insert(System.Int32,System.Int32)">
      <summary>Adds a new item to the collection.</summary>
      <returns>The button added to the collection.</returns>
      <param name="itemIndexParam">Specifies the zero-based index where the new button is inserted. Pass <c>-1</c> to insert the ExpressionEdit button at the end of the collection.</param>
      <param name="kind">Use the ExpressionEditButtonKinds constants to specify what kind of ExpressionEdit button is created.</param>
      <seealso cref="ExpressionEditButtonKinds" />
      <seealso cref="ExpressionEditButtons.Remove" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtons.Remove(System.Int32,NationalInstruments.TestStand.Interop.UI.SpecifyExpressionEditButton)">
      <summary>Removes the specified item from this collection, if it exists.</summary>
      <param name="indexOrKind">When you pass <c>SpecifyButton_ByIndex</c> as the specify parameter, indexOrKind is the zero-based index of the button to remove from the collection. When you pass <c>SpecifyButton_ByKind</c>, all buttons with a kind of indexOrKind are removed from the collection.</param>
      <param name="specify">Specifies whether indexOrKind is a button index or a button kind.</param>
      <seealso cref="ExpressionEditButtonKinds" />
      <seealso cref="ExpressionEditButtons.Clear" />
      <seealso cref="ExpressionEditButtons.Insert" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItem">
      <summary>An ExpressionEditComboBoxItem is an item that appears in the drop-down list when the ExpressionEdit control is a combo box.</summary>
      <seealso cref="ExpressionEdit" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItem.Icon">
      <summary>Specifies the picture that appears in the drop-down list for this item.</summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItem.Value">
      <summary>Specifies an expression that replaces the text in the ExpressionEdit control when the user selects this item in the drop-down list. The value appears in the drop-down list when the ExpressionEditComboBoxItem.DisplayName property is empty.</summary>
      <seealso cref="ExpressionEditComboBoxItem.DisplayName" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItem.DisplayName">
      <summary>When this property is not empty, the display name is shown in the drop-down list instead of the ExpressionEditComboBoxItem.Value property. When you choose this item in the drop-down list, the <c>ExpressionEditComboBoxItem.Value</c> property, not the display name, replaces the existing text. This property is useful for displaying a simple name for a complex expression in the drop-down list.</summary>
      <seealso cref="ExpressionEditComboBoxItem.Value" />
      <seealso cref="ExpressionEdit.ShowDisplayNameWhenInactive" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItems">
      <summary>A collection of ExpressionEditComboBoxItem objects. Use the ExpressionEdit.ComboBoxItems property to retrieve the ExpressionEditComboBoxItems for an ExpressionEdit control.</summary>
      <seealso cref="ExpressionEdit" />
      <seealso cref="ExpressionEdit.ComboBoxItems" />
      <seealso cref="ExpressionEditComboBoxItem" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItems.Item(System.Int32)">
      <summary>Returns a reference to an item at the specified index in the collection.</summary>
      <param name="itemIndexParam">Specifies the zero-based index of the item to return.</param>
      <seealso cref="ExpressionEditComboBoxItem" />
      <seealso cref="ExpressionEditComboBoxItems.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItems.Count">
      <summary>Returns the number of items in the collection.</summary>
      <seealso cref="ExpressionEditComboBoxItems.Item" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItems.Clear">
      <summary>Removes all items from the drop-down list.</summary>
      <seealso cref="ExpressionEditComboBoxItems.Insert" />
      <seealso cref="ExpressionEditComboBoxItems.Remove" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItems.Insert(System.Int32,System.String,System.String,System.Object@)">
      <summary>Adds a new ExpressionEditComboBoxItem in the drop-down list.</summary>
      <returns>The item added to the drop-down list.</returns>
      <param name="itemIndexParam">Specifies the zero-based index where the new item is inserted. Pass <c>-1</c> to insert the item at the end of the drop-down list.</param>
      <param name="val">Specifies the ExpressionEditComboBoxItem.Value property of the new item. This value appears in the drop-down list when the displayName parameter is empty.</param>
      <param name="displayName">Specifies the ExpressionEditComboBoxItem.DisplayName property of the new item. When this value is not empty, the display name is shown in the drop-down list for the item instead of the val parameter. Display names are useful for displaying a simple name for a complex expression in the drop-down list.</param>
      <param name="icon">Specifies the ExpressionEditComboBoxItem.Icon property of the new item. This method makes a copy of the picture you pass. You can use the <c>ExpressionEditComboBoxItem.Icon</c> property to either use a picture directly or make a copy of a picture.</param>
      <seealso cref="ExpressionEditComboBoxItem" />
      <seealso cref="ExpressionEditComboBoxitem.DisplayName" />
      <seealso cref="ExpressionEditComboBoxItem.Icon" />
      <seealso cref="ExpressionEditComboBoxItem.Value" />
      <seealso cref="ExpressionEditComboBoxItems.Remove" />
    </member>
    <member name="M:NationalInstruments.TestStand.Interop.UI.ExpressionEditComboBoxItems.Remove(System.Int32)">
      <summary>Removes an item from the drop-down list.</summary>
      <param name="itemIndexParam">Specifies the zero-based index of the item to remove from the drop-down list.</param>
      <seealso cref="ExpressionEditComboBoxItems.Clear" />
      <seealso cref="ExpressionEditComboBoxItems.Insert" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles">
      <summary>Use these constants to specify the alignment of content on the drawing surface.</summary>
      <seealso cref="Button.ImageAlignment" />
      <seealso cref="Button.TextAlignment" />
      <seealso cref="CheckBox.ImageAlign" />
      <seealso cref="CheckBox.TextAlign" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_MiddleLeft">
      <summary>(Value: 0) Content is vertically aligned in the middle and horizontally aligned on the left.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_MiddleRight">
      <summary>(Value: 1) Content is vertically aligned in the middle and horizontally aligned on the right.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_MiddleCenter">
      <summary>(Value: 2) Content is vertically aligned in the middle and horizontally aligned in the center.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_TopLeft">
      <summary>(Value: 3) Content is vertically aligned at the top and horizontally aligned on the left.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_TopRight">
      <summary>(Value: 4) Content is vertically aligned at the top and horizontally aligned on the right.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_TopCenter">
      <summary>(Value: 5) Content is vertically aligned at the top and horizontally aligned in the center.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_BottomLeft">
      <summary>(Value: 6) Content is vertically aligned at the bottom and horizontally aligned on the left.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_BottomCenter">
      <summary>(Value: 8) Content is vertically aligned at the bottom and horizontally aligned in the center.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContentAlignmentStyles.ContentAlignmentStyle_BottomRight">
      <summary>(Value: 7) Content is vertically aligned at the bottom and horizontally aligned on the right.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.CheckBoxStyles">
      <summary>Use these constants with CheckBox.Style to specify the style of the CheckBox control.</summary>
      <seealso cref="CheckBox.Style" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CheckBoxStyles.CheckBoxStyle_Normal">
      <summary>(Value: 0) Specifies that the CheckBox control is normal in appearance.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.CheckBoxStyles.CheckBoxStyle_Button">
      <summary>(Value: 1) Specifies that the CheckBox control is a toggle button that you can toggle to an up or down state.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonKinds">
      <summary>Use these constants with the ExpressionEditButtons.Insert method and the ExpressionEditButton.Kind property.</summary>
      <seealso cref="ExpressionEdit.ButtonClick" />
      <seealso cref="ExpressionEdit.CheckExpression" />
      <seealso cref="ExpressionEdit.DisplayBrowseExprDialog" />
      <seealso cref="ExpressionEditButtons.Insert" />
      <seealso cref="ExpressionEditButton.Kind" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonKinds.ExpressionEditButtonKind_BrowseExpression">
      <summary>(Value: 1) This kind of button calls the ExpressionEdit.DisplayBrowseExprDialog method. The ExpressionEditButton.Enabled, ExpressionEditButton.Icon, ExpressionEditButton.ToolTipText, and ExpressionEditButton.Visible properties are managed automatically for this kind of button.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonKinds.ExpressionEditButtonKind_CheckExpression">
      <summary>(Value: 2) This kind of button calls the ExpressionEdit.CheckExpression method and displays the result in a dialog box. The <c>ExpressionEditButton.Enabled</c>, <c>ExpressionEditButton.Icon</c>, <c>ExpressionEditButton.ToolTipText</c>, and <c>ExpressionEditButton.Visible</c> properties are managed automatically for this kind of button.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonKinds.ExpressionEditButtonKind_CustomBase">
      <summary>(Value: 1000) Use constants starting at <c>ExpressionEditButtonKind_CustomBase</c> to define custom buttons. You define the behavior and appearance of custom buttons yourself. Use the ExpressionEdit.ButtonClick event to respond to button clicks.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEditStyles">
      <summary>Use these constants with the ExpressionEdit.Style property to specify the appearance of the control and how the control operates.</summary>
      <seealso cref="ExpressionEdit.Style" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditStyles.ExpressionEditStyle_Edit">
      <summary>(Value: 0) Specifies that the ExpressionEdit control is an edit control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditStyles.ExpressionEditStyle_DropDownCombo">
      <summary>(Value: 1) Specifies that the ExpressionEdit control is a combo box control.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.QueryReloadSequenceFileOptions">
      <summary>Use these constants with the opt parameter of the ApplicationMgr.QueryReloadSequenceFile event.</summary>
      <seealso cref="ApplicationMgr.QueryReloadSequenceFile" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryReloadSequenceFileOptions.QueryReloadSequenceFile_Prompt">
      <summary>(Value: 0) The Application Manager control prompts the user to reload the sequence file.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryReloadSequenceFileOptions.QueryReloadSequenceFile_Reload">
      <summary>(Value: 1) The Application Manager control reloads the sequence file.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.QueryReloadSequenceFileOptions.QueryReloadSequenceFile_Cancel">
      <summary>(Value: 2) The Application Manager control does not reload the sequence file.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.SpecifyExpressionEditButton">
      <summary>Use these constants with the ExpressionEditButtons.GetItem and ExpressionEditButtons.Remove methods.</summary>
      <seealso cref="ExpressionEditButtonKinds" />
      <seealso cref="ExpressionEditButtons.GetItem" />
      <seealso cref="ExpressionEditButtons.Remove" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SpecifyExpressionEditButton.SpecifyButton_ByIndex">
      <summary>(Value: 0) The indexOrKind parameter is a zero-based index of a button.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.SpecifyExpressionEditButton.SpecifyButton_ByKind">
      <summary>(Value: 1) The indexOrKind parameter is an ExpressionEditButtonKinds constant.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.VariablesView">
      <summary>Connect a SequenceFileView Manager or an ExecutionView Manager control to a VariablesView control to display the variables and properties in the selected file or execution. You can modify values of existing properties and variables, and you can insert and delete variables when editing a sequence file.
</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="VariablesView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IVariablesView">
      <summary>Connect a SequenceFileView Manager or an ExecutionView Manager control to a VariablesView control to display the variables and properties in the selected file or execution. You can modify values of existing properties and variables, and you can insert and delete variables when editing a sequence file.
</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="VariablesView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.VariablesViewClass">
      <summary>Connect a SequenceFileView Manager or an ExecutionView Manager control to a VariablesView control to display the variables and properties in the selected file or execution. You can modify values of existing properties and variables, and you can insert and delete variables when editing a sequence file.
</summary>
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="VariablesView" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._VariablesViewEvents_Event.BorderDragged">
      <summary>Occurs when you drag a draggable border of a control. This event provides the location and size to which you must set the control for the draggable borders to track the mouse cursor. However, you can choose to modify the location or size to which you set the control. For example, you can limit the width of the control so the left edge of the control cannot be dragged off of the visible portion of the window. 

In addition to changing the size and position of the control, you can also update the sizes and positions of the other controls on the window to account for the change.</summary>
      <remarks>If you are using LabVIEW, you must add the Horizontal and Vertical components of the origin of the LabVIEW front panel to the newX and newY event parameter values before you can use the newX and newY event parameters to set the ActiveX Container (AxCont) Left and Top properties for the control. To obtain the origin of a LabVIEW front panel, place an ActiveX property node on the block diagram of the VI, right-click the node, and select Link to&#0187;Pane from the context menu. Right-click the node again and select Select Property&#0187;Origin.</remarks>
      <param name="bordersChanged">Specifies which borders you dragged. Refer to the WhichBorders constants for more information about draggable borders.</param>
      <param name="newX">Specifies the new x-coordinate for the control</param>
      <param name="newY">Specifies the new y-coordinate for the control.</param>
      <param name="newWidth">Specifies the new width for the control.</param>
      <param name="newHeight">Specifies the new height for the control.</param>
      <param name="finalResize">Specifies whether the event is the final event for the drag operation the user performs.</param>
      <seealso cref="VariablesView.Borders" />
      <seealso cref="WhichBorders" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._VariablesViewEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IVariablesView.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting. </summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
National Instruments recommends the following settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.VariablesViewClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting. </summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
National Instruments recommends the following settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IVariablesView.Enabled">
      <summary>The control responds to user-generated events only when this property is <c>True</c>.</summary>
      <remarks>When you connect this control to a manager control, the manager control automatically sets this property.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.VariablesViewClass.Enabled">
      <summary>The control responds to user-generated events only when this property is <c>True</c>.</summary>
      <remarks>When you connect this control to a manager control, the manager control automatically sets this property.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IVariablesView.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions. 
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para>
</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.VariablesViewClass.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions. 
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para>
</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IVariablesView.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="VariablesView.BorderDragged" />
      <seealso cref="VariablesView.Borders" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.VariablesViewClass.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="VariablesView.BorderDragged" />
      <seealso cref="VariablesView.Borders" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._VariablesViewEvents_Event.KeyDown">
      <summary>Occurs when the user presses any key while the control has the input focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">Specifies a combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="KeyCodes" />
      <seealso cref="KeyModifiers" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.InsertionPalette">
      <summary>Connect a SequenceFileView Manager control to an InsertionPalette control so users can insert steps and template items into a sequence file by dragging or double-clicking.

Select Customize from the context menu of the Step Types list to launch the Step Type Menu Editor dialog box, in which you can customize the structure of the menu.

You can add sequences, steps, or variables to the Templates list by dragging sequences, steps, or variables to the InsertionPalette control from a ListBox, ListBar, SequenceView, or VariablesView control. You can rename, copy, paste, delete, import, and export the items in the Templates list using the context menu, and you can rearrange the items using drag and drop.

You can use one of the following operations to insert a step from the Step Types list or a sequence, step, or variable from the Templates list to a user interface control that displays a list of the corresponding object type:<para><para>&#160;&#160;&#160;&#160;* Double-click an item in the InsertionPalette control. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Select an item in the InsertionPalette control and press &lt;Enter&gt;. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Right-click an item in the InsertionPalette control and select Insert from the context menu. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Drag an item from the InsertionPalette control and drop the item in the corresponding user interface control that contains a list of the type of items.</para></para></summary>
      <seealso cref="ListBar" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceView" />
      <seealso cref="&quot;Step Type Menu Editor dialog box&quot;javascript:RefLink('/InfoTopics/DB_Step_Type_Menu_Editor.htm')" />
      <seealso cref="VariablesView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.IInsertionPalette">
      <summary>Connect a SequenceFileView Manager control to an InsertionPalette control so users can insert steps and template items into a sequence file by dragging or double-clicking.

Select Customize from the context menu of the Step Types list to launch the Step Type Menu Editor dialog box, in which you can customize the structure of the menu.

You can add sequences, steps, or variables to the Templates list by dragging sequences, steps, or variables to the InsertionPalette control from a ListBox, ListBar, SequenceView, or VariablesView control. You can rename, copy, paste, delete, import, and export the items in the Templates list using the context menu, and you can rearrange the items using drag and drop.

You can use one of the following operations to insert a step from the Step Types list or a sequence, step, or variable from the Templates list to a user interface control that displays a list of the corresponding object type:<para><para>&#160;&#160;&#160;&#160;* Double-click an item in the InsertionPalette control. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Select an item in the InsertionPalette control and press &lt;Enter&gt;. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Right-click an item in the InsertionPalette control and select Insert from the context menu. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Drag an item from the InsertionPalette control and drop the item in the corresponding user interface control that contains a list of the type of items.</para></para></summary>
      <seealso cref="ListBar" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceView" />
      <seealso cref="&quot;Step Type Menu Editor dialog box&quot;javascript:RefLink('/InfoTopics/DB_Step_Type_Menu_Editor.htm')" />
      <seealso cref="VariablesView" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.InsertionPaletteClass">
      <summary>Connect a SequenceFileView Manager control to an InsertionPalette control so users can insert steps and template items into a sequence file by dragging or double-clicking.

Select Customize from the context menu of the Step Types list to launch the Step Type Menu Editor dialog box, in which you can customize the structure of the menu.

You can add sequences, steps, or variables to the Templates list by dragging sequences, steps, or variables to the InsertionPalette control from a ListBox, ListBar, SequenceView, or VariablesView control. You can rename, copy, paste, delete, import, and export the items in the Templates list using the context menu, and you can rearrange the items using drag and drop.

You can use one of the following operations to insert a step from the Step Types list or a sequence, step, or variable from the Templates list to a user interface control that displays a list of the corresponding object type:<para><para>&#160;&#160;&#160;&#160;* Double-click an item in the InsertionPalette control. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Select an item in the InsertionPalette control and press &lt;Enter&gt;. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Right-click an item in the InsertionPalette control and select Insert from the context menu. TestStand inserts the item below the current step, sequence, or variable depending on the type of the item.</para><para>&#160;&#160;&#160;&#160;* Drag an item from the InsertionPalette control and drop the item in the corresponding user interface control that contains a list of the type of items.</para></para></summary>
      <seealso cref="ListBar" />
      <seealso cref="ListBox" />
      <seealso cref="SequenceFileViewMgr" />
      <seealso cref="SequenceView" />
      <seealso cref="&quot;Step Type Menu Editor dialog box&quot;javascript:RefLink('/InfoTopics/DB_Step_Type_Menu_Editor.htm')" />
      <seealso cref="VariablesView" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IInsertionPalette.Enabled">
      <summary>The control responds to user-generated events only when this property is <c>True</c>.</summary>
      <remarks>When you connect this control to a manager control, the manager control automatically sets this property.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPaletteClass.Enabled">
      <summary>The control responds to user-generated events only when this property is <c>True</c>.</summary>
      <remarks>When you connect this control to a manager control, the manager control automatically sets this property.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IInsertionPalette.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPaletteClass.hWnd">
      <summary>Returns a Window handle for the control.</summary>
      <remarks>You can use the returned Window handle with the Microsoft Windows API functions.
<para>Note: Using Windows API functions with this property can cause undefined behavior.</para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IInsertionPalette.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="InsertionPalette.BorderDragged" />
      <seealso cref="InsertionPalette.Borders" />
      <seealso cref="&#xD;&#xA;&#xD;&#xA;" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPaletteClass.Borders">
      <summary>Returns the frame and draggable borders that surround the control.</summary>
      <seealso cref="Borders" />
      <seealso cref="InsertionPalette.BorderDragged" />
      <seealso cref="InsertionPalette.Borders" />
      <seealso cref="&#xD;&#xA;&#xD;&#xA;" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IInsertionPalette.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting. </summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
National Instruments recommends the following settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPaletteClass.ScaleWithDPI">
      <summary>Specifies how the control scales based on the dots per inch (DPI) setting. </summary>
      <remarks>Some environments scale native controls based on the DPI settings of their display, while other environments do not. The TestStand User Interface Controls are designed to work in all environments.
National Instruments recommends the following settings for various platforms:<para><para>&#160;&#160;&#160;&#160;* LabVIEW, LabWindows/CVI, C#, and Microsoft Visual Basic .NET&#8212;Set this property to <c>False</c>.</para><para>&#160;&#160;&#160;&#160;* Active Template Library (ATL)/Microsoft Foundation Class (MFC)&#8212;Set this property to <c>True</c>.</para></para></remarks>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._InsertionPaletteEvents_Event.BorderDragged">
      <summary>Occurs when you drag a draggable border of a control. This event provides the location and size to which you must set the control for the draggable borders to track the mouse cursor. However, you can choose to modify the location or size to which you set the control. For example, you can limit the width of the control so the left edge of the control cannot be dragged off of the visible portion of the window. 

In addition to changing the size and position of the control, you can also update the sizes and positions of the other controls on the window to account for the change.</summary>
      <remarks>If you are using LabVIEW, you must add the Horizontal and Vertical components of the origin of the LabVIEW front panel to the newX and newY event parameter values before you can use the newX and newY event parameters to set the ActiveX Container (AxCont) Left and Top properties for the control. To obtain the origin of a LabVIEW front panel, place an ActiveX property node on the block diagram of the VI, right-click the node, and select Link to&#0187;Pane from the context menu. Right-click the node again and select Select Property&#0187;Origin.</remarks>
      <param name="bordersChanged">Specifies which borders you dragged. Refer to the WhichBorders constants for more information about draggable borders.</param>
      <param name="newX">Specifies the new x-coordinate for the control.</param>
      <param name="newY">Specifies the new y-coordinate for the control.</param>
      <param name="newWidth">Specifies the new width for the control.</param>
      <param name="newHeight">Specifies the new height for the control.</param>
      <param name="finalResize">Specifies whether the event is the final event for the drag operation the user performs.</param>
      <seealso cref="InsertionPalette.Borders" />
      <seealso cref="WhichBorders" />
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._InsertionPaletteEvents_Event.ConnectionActivity">
      <summary>Occurs after the connection to a manager control makes a change to a user interface control.</summary>
      <param name="activity">Specifies the type of change.</param>
    </member>
    <member name="E:NationalInstruments.TestStand.Interop.UI._InsertionPaletteEvents_Event.KeyDown">
      <summary>Occurs when the user presses any key while the control has the input focus.</summary>
      <param name="keyCode">Specifies the KeyCodes constant of the key the user pressed.</param>
      <param name="shift">A combination of the KeyModifiers constants that specifies the state of the &lt;Shift&gt;, &lt;Ctrl&gt;, and &lt;Alt&gt; keys.</param>
      <seealso cref="KeyCodes" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IInsertionPalette.AllowEditing">
      <summary>Specifies whether you can modify the templates list and step types list panels of the control. </summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPaletteClass.AllowEditing">
      <summary>Specifies whether you can modify the templates list and step types list panels of the control. </summary>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IInsertionPalette.PaletteLayout">
      <summary>Specifies a serialized string you use to persist the layout of the control. Use the serialized string to later restore the layout of the control.</summary>
      <remarks>The layout information is composed of the state of the nodes in the Step Types list and the Templates list on the Insertion Palette pane, including information about the selected nodes and whether the nodes are expanded or collapsed.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPaletteClass.PaletteLayout">
      <summary>Specifies a serialized string you use to persist the layout of the control. Use the serialized string to later restore the layout of the control.</summary>
      <remarks>The layout information is composed of the state of the nodes in the Step Types list and the Templates list on the Insertion Palette pane, including information about the selected nodes and whether the nodes are expanded or collapsed.</remarks>
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.IInsertionPalette.Pages">
      <summary>Returns a collection of the InsertionPalette pages.</summary>
      <seealso cref="InsertionPalette" />
      <seealso cref="InsertionPalettePages" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPaletteClass.Pages">
      <summary>Returns a collection of the InsertionPalette pages.</summary>
      <seealso cref="InsertionPalette" />
      <seealso cref="InsertionPalettePages" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.AutomaticallyReloadModifiedFilesOptions">
      <summary>Use these constants with the ApplicationMgr.AutomaticallyReloadModifiedFiles property.</summary>
      <seealso cref="ApplicationMgr.AutomaticallyReloadModifiedFiles" />
      <seealso cref="ApplicationMgr.ReloadModifiedFilesInterval" />
      <seealso cref="ApplicationMgr.ReloadModifiedSequenceFilesEx" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.AutomaticallyReloadModifiedFilesOptions.AutomaticallyReloadModifiedFilesOption_DoNotReload">
      <summary>(Value: 1) Specifies that the Application Manager control never calls the ApplicationMgr.ReloadModifiedSequenceFilesEx method. You must call the <c>ApplicationMgr.ReloadModifiedSequenceFilesEx</c> method to reload modified sequence files.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.AutomaticallyReloadModifiedFilesOptions.AutomaticallyReloadModifiedFilesOption_OnTimer">
      <summary>(Value: 2) Specifies that the Application Manager control calls the <c>ApplicationMgr.ReloadModifiedSequenceFilesEx</c> method at the interval you specify with the ApplicationMgr.ReloadModifiedFilesInterval property.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.AutomaticallyReloadModifiedFilesOptions.AutomaticallyReloadModifiedFilesOption_OnActivateApplication">
      <summary>(Value: 3) Specifies that the Application Manager control calls the <c>ApplicationMgr.ReloadModifiedSequenceFilesEx</c> method when you activate the application.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ContextChangedReasons">
      <summary>The ExpressionEdit control passes one of these constants as the reason parameter to the ExpressionEdit.ContextChanged event to specify why the ExpressionEdit control generated the <c>ExpressionEdit.ContextChanged</c> event.</summary>
      <seealso cref="&quot;Expression Browser dialog box&quot;javascript:RefLink('/InfoTopics/DB_Exp_Browser.htm')" />
      <seealso cref="ExpressionEdit" />
      <seealso cref="ExpressionEdit.Context" />
      <seealso cref="ExpressionEdit.ContextChanged" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContextChangedReasons.ContextChangedReason_SetContext">
      <summary>(Value: 1) Specifies that the application programmatically set the <c>ExpressionEdit.Context</c> property to a new value.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContextChangedReasons.ContextChangedReason_VariableCreatedFromContextMenu">
      <summary>(Value: 2) Specifies that the user modified the context the <c>ExpressionEdit.Context</c> property specifies when creating a variable through the context menu in the ExpressionEdit control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ContextChangedReasons.ContextChangedReason_ExpressionBrowserDialogBox">
      <summary>(Value: 3) Specifies that the user modified the context the ExpressionEdit.Context property specifies through the context menu in the Expression Browser dialog box.  A user can rename, insert, or delete properties. This constant is not set when the user modifies only the value of a variable or property.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes">
      <summary>This data type contains values that specify the type of change or refresh the connection to a manager control makes to a user interface control. Use these values with a <c>ConnectionActivity</c> event.</summary>
      <seealso cref="ComboBox" />
      <seealso cref="ListBarPage" />
      <seealso cref="Listbox" />
      <seealso cref="ReportView" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes.ConnectionActivityType_TextChange">
      <summary>(Value: 1) The connection changed or refreshed the text of the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes.ConnectionActivityType_NumberChange">
      <summary>(Value: 2) The connection changed or refreshed the numerical value of the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes.ConnectionActivityType_BooleanChange">
      <summary>(Value: 3) The connection changed or refreshed the Boolean value of the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes.ConnectionActivityType_ImageChange">
      <summary>(Value: 4) The connection changed or refreshed an image the control displays.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes.ConnectionActivityType_ContentChange">
      <summary>(Value: 5) The connection changed or refreshed the contents of the control, such as the available items in a Listbox, Combobox, ReportView, or ListBarPage.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes.ConnectionActivityType_CursorOrSelectionChange">
      <summary>(Value: 6) The connection changed or refreshed the cursor or selection in the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes.ConnectionActivityType_EnabledChange">
      <summary>(Value: 7) The connection changed or refreshed the enabled state of the control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ConnectionActivityTypes.ConnectionActivityType_VisibleChange">
      <summary>(Value: 8) The connection changed or refreshed the visibility of the control.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.EditingDenialReasons">
      <summary>This data type contains values that indicate reasons why an editing action cannot take place. Use these constants with the ApplicationMgr.BeginEdit and ApplicationMgr.CanEdit events.</summary>
      <seealso cref="&quot;ApplicationMgr.BeginEdit&quot;ApplicationMgr_BeginEdit_E.htm" />
      <seealso cref="&quot;ApplicationMgr.CanEdit&quot;ApplicationMgr_CanEdit_E.htm" />
      <seealso cref="ApplicationMgr.IsEditor" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingDenialReasons.EditingDenialReason_IsReadOnly">
      <summary>(Value: 0x1) Editing is blocked because the file to edit is read-only.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingDenialReasons.EditingDenialReason_IsNotEditor">
      <summary>(Value: 0x2) Editing is blocked because the value of the ApplicationMgr.IsEditor property is <c>False</c>. </summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingDenialReasons.EditingDenialReason_IsExecuting">
      <summary>(Value: 0x4) Editing is blocked because the file to edit is executing.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingDenialReasons.EditingDenialReason_IsLocked">
      <summary>(Value: 0x8) Editing is blocked because the file to edit is locked.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingDenialReasons.EditingDenialReason_NoFileEditingPrivilege">
      <summary>(Value: 0x10) Editing is blocked because the current user does not have privileges to edit the file.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.RefreshOptions">
      <summary>Use these constants with the ApplicationMgr.Refresh method.</summary>
      <seealso cref="ApplicationMgr" />
      <seealso cref="ApplicationMgr.ConfigurationEntryPoints" />
      <seealso cref="ApplicationMgr.ExecutionEntryPoints" />
      <seealso cref="ApplicationMgr.Refresh" />
      <seealso cref="ExecutionViewMgr" />
      <seealso cref="SequenceFileViewMgr" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_All">
      <summary>(Value: 0xFFFFFFFF) Refresh all controls connected to any manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_AllSequenceFileViewMgrs">
      <summary>(Value: 0x1) Refresh all controls connected to any SequenceFileView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_AllExecutionViewMgrs">
      <summary>(Value: 0x2) Refresh all controls connected to any ExecutionView Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_Commands">
      <summary>(Value: 0x4) Refresh all commands connected to the Application Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_Captions">
      <summary>(Value: 0x8) Refresh all captions connected to the Application Manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_AllCommands">
      <summary>(Value: 0x10) Refresh all commands connected to any manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_AllCaptions">
      <summary>(Value: 0x20) Refresh all captions connected to any manager control.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_AdapterList">
      <summary>(Value: 0x40) Refresh the connected adapter list.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.RefreshOptions.RefreshOption_EntryPoints">
      <summary>(Value: 0x80) Refresh the ApplicationMgr.ExecutionEntryPoints and ApplicationMgr.ConfigurationEntryPoints properties.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonStyles">
      <summary>Use these constants with the ExpressionEditButton.Style property.</summary>
      <seealso cref="ExpressionEditButton.Style" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonStyles.ExpressionEditButtonStyle_System">
      <summary>(Value: 1) The button looks like a standard button for the operating system of the user.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonStyles.ExpressionEditButtonStyle_Standard">
      <summary>(Value: 2) The button is three-dimensional.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonStyles.ExpressionEditButtonStyle_Flat">
      <summary>(Value: 3) The button is flat.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ExpressionEditButtonStyles.ExpressionEditButtonStyle_ToolBarButton">
      <summary>(Value: 4) This style is the same as <c>ExpressionEditButtonStyle_System</c> except when the application supports Microsoft Windows XP themes, the button has no border when you hover over the button.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.StepGroupModes">
      <summary>Use these constants with ExecutionViewMgr.StepGroupMode to specify how to display step groups.</summary>
      <seealso cref="ExecutionViewMgr.StepGroupMode" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.StepGroupModes.StepGroupMode_OneGroup">
      <summary>(Value: 1) Displays only one step group.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.StepGroupModes.StepGroupMode_AllGroups">
      <summary>(Value: 2) Displays the Setup, Main, and Cleanup step groups.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.EditingFlags">
      <summary>This data type contains values that specify general editing capabilities you can selectively enable for certain controls.</summary>
      <seealso cref="ListBox.EditingFlags" />
      <seealso cref="SequenceView.EditingFlags" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingFlags.EditingFlag_CutPasteDelete">
      <summary>(Value: 0x7) Cut, Paste, and Delete operations are allowed, when applicable.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingFlags.EditingFlag_DragDrop">
      <summary>(Value: 16) Drag and Drop operations are allowed, when applicable.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingFlags.EditingFlag_Rename">
      <summary>(Value: 32) You can rename items, when applicable.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.EditingFlags.EditingFlag_Copy">
      <summary>(Value: 8) Copy operation is allowed, when applicable.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ButtonStyles">
      <summary>Use these constants with the Button.Style property to specify the appearance of the button and how the button operates.</summary>
      <seealso cref="ButtonActionStyles" />
      <seealso cref="Button.Style" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ButtonStyles.ButtonStyle_Standard">
      <summary>(Value: 1) The button displays a three-dimensional border.</summary>
      <remarks>
</remarks>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ButtonStyles.ButtonStyle_ToolBar">
      <summary>(Value: 2) You cannot tab to the button. When the application supports Microsoft Windows XP themes, the button displays a border only when you hover over it.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.TextImageRelations">
      <summary>Use these constants with Button.TextImageRelation to specify how to display the image in relation to the text.</summary>
      <seealso cref="Button.TextImageRelation" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.TextImageRelations.TextImageRelation_Overlay">
      <summary>(Value: 0) Displays the image behind the text.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.TextImageRelations.TextImageRelation_ImageBelowText">
      <summary>(Value: 1) Displays the image below the text.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.TextImageRelations.TextImageRelation_ImageAboveText">
      <summary>(Value: 2) Displays the image above the text.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.TextImageRelations.TextImageRelation_ImageBeforeText">
      <summary>(Value: 3) Displays the image to the left of the text.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.TextImageRelations.TextImageRelation_ImageAfterText">
      <summary>(Value: 4) Displays the image to the right of the text.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ButtonActionStyles">
      <summary>Use these constants with Button.ActionStyle to specify how the button behaves when you click it.</summary>
      <seealso cref="Button.ActionStyle" />
      <seealso cref="Button.Value" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ButtonActionStyles.ButtonActionStyle_PushButton">
      <summary>(Value: 0) Specifies that the button changes to a pressed state only when you click it.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ButtonActionStyles.ButtonActionStyle_ToggleButton">
      <summary>(Value: 1) Specifies that the button changes to a pressed state when you set the Button.Value property to <c>True</c> and changes to a normal state when you set the value to <c>False</c>.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBoxColumn">
      <summary>The ListBoxColumn object represents a visible column in the ListBox control. Use the ListBox.ColumnSet property to obtain a list of columns for the control.
When using a SequenceListConnection, use the SequenceListConnection.GetColumnIndex and SequenceListConnection.SetColumnVisible methods to determine the columns the ListBox control displays and the index for each column in ListBoxColumns.</summary>
      <seealso cref="ListBox" />
      <seealso cref="ListBox.ColumnSet" />
      <seealso cref="ListBoxColumns" />
      <seealso cref="&quot;SequenceListConnection&quot;SequenceListConnection.htm" />
      <seealso cref="&quot;SequenceListConnection.GetColumnIndex&quot;SequenceListConnection_GetColumnIndex_M.htm" />
      <seealso cref="&quot;SequenceListConnection.SetColumnVisible&quot;SequenceListConnection_SetColumnVisible_M.htm" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxColumn.Index">
      <summary>Returns the zero-based numeric index of the column within the ListBoxColumns collection.</summary>
      <seealso cref="ListBoxColumns" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxColumn.Width">
      <summary>Specifies the width of the column in pixels.</summary>
      <seealso cref="ListBoxColumn.Autosizing" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxColumn.AutoSizing">
      <summary>Specifies whether the column automatically grows or shrinks to adjust to changes in the size of the control. This property does not take effect unless the ListBox.AutoSizeColumns property is <c>True</c>.</summary>
      <seealso cref="ListBox.AutoSizeColumns" />
      <seealso cref="ListBoxColumn.Width" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxColumn.Caption">
      <summary>Returns the caption in the header for the column.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ListBoxColumns">
      <summary>A collection of ListBoxColumn objects. Use the ListBox.ColumnSet property to obtain a collection of columns for a ListBox control.</summary>
      <seealso cref="ListBox" />
      <seealso cref="ListBox.ColumnSet" />
      <seealso cref="ListBoxColumn" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxColumns.Item(System.Int32)">
      <summary>Returns a reference to an item at the specified index in the collection.</summary>
      <param name="itemIdx">Pass the zero-based index of the column to return.</param>
      <seealso cref="ListBoxColumn" />
      <seealso cref="ListBoxColumns.Count" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.ListBoxColumns.Count">
      <summary>Returns the number of items in the collection.</summary>
      <seealso cref="ListBoxColumn" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.AutoSizingOptions">
      <summary>Use these constants with the SeqViewColumn.Autosizing and ListBoxColumn.Autosizing properties.</summary>
      <seealso cref="ListBoxColumn.Autosizing" />
      <seealso cref="SeqViewColumn.Autosizing" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.AutoSizingOptions.AutoSizingOption_None">
      <summary>(Value: 0) The item does not automatically resize itself.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.AutoSizingOptions.AutoSizingOption_Proportional">
      <summary>(Value: 1) The item resizes when the container resizes. The item determines the amount to resize from the proportion that the current size occupies of the total size of all resizable items in the same container. </summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ProcessCommandLineErrors">
      <summary>Use these constants in the ApplicationMgr.ProcessUserCommandLineArguments event to specify an error that occurs while processing the command line.</summary>
      <seealso cref="ApplicationMgr.ProcessUserCommandLineArguments" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ProcessCommandLineErrors.ProcessCommandLineError_None">
      <summary>(Value: 0) Specifies that no error occurred while processing the command line.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ProcessCommandLineErrors.ProcessCommandLineError_UnrecognizedArgumentError">
      <summary>(Value: 1) Specifies that you encountered an unrecognized command-line argument while processing the command line.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ProcessCommandLineErrors.ProcessCommandLineError_CustomError">
      <summary>(Value: 2) Specifies that an error you define occurred while processing the command line.</summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.InsertionPalettePage">
      <summary>Use an InsertionPalettePage object to control whether a page is expanded or visible on an InsertionPalette control. </summary>
      <seealso cref="InsertionPalette" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPalettePage.Index">
      <summary>Returns the zero-based index of the page on the InsertionPalette.</summary>
      <seealso cref="InsertionPalette" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPalettePage.Visible">
      <summary>Specifies whether the page is visible.</summary>
      <seealso cref="InsertionPalettePage.Expanded" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPalettePage.SplitterRatio">
      <summary>Specifies the percentage of the InsertionPalette the page uses.  Changes to this property affect this property for other pages.
<para>Note: This property is valid only when pages exist after the current page. In all other cases, this property is ignored.</para></summary>
      <seealso cref="InsertionPalette" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPalettePage.Expanded">
      <summary>Specifies whether the content of the page is expanded to show the list.</summary>
      <seealso cref="InsertionPalettePage.Visible" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPalettePage.ShowSubPages">
      <summary></summary>
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.InsertionPalettePages">
      <summary>A collection of InsertionPalettePage objects.
Use the InsertionPalette.Pages property to retrieve the InsertionPalettePages object for an InsertionPalette. Use the InsertionPalettePage.Visible property to control whether the page is visible.</summary>
      <seealso cref="InsertionPalette" />
      <seealso cref="InsertionPalette.Pages" />
      <seealso cref="InsertionPalettePage" />
      <seealso cref="InsertionPalettePage.Visible" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPalettePages.Item(System.Int32)">
      <summary>Returns a reference to an item at the specified index in the collection.</summary>
      <param name="itemIdx">Specifies the zero-based index of the item.</param>
      <seealso cref="InsertionPalettePage" />
    </member>
    <member name="P:NationalInstruments.TestStand.Interop.UI.InsertionPalettePages.Count">
      <summary>Returns the number of items in the collection.</summary>
      <seealso cref="InsertionPalettePage" />
    </member>
    <member name="T:NationalInstruments.TestStand.Interop.UI.ReloadFileOptions">
      <summary>Use these constants with the ApplicationMgr.ReloadFile method.
</summary>
      <seealso cref="ApplicationMgr.ReloadFile" />
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReloadFileOptions.ReloadFileOption_OnlyIfModifiedOnDisk">
      <summary>(Value 0x1) Use this option when you want to make reloading occur conditionally based on whether the file has been modified on disk since the user was last prompted to reload it. You can combine this option with <c>ReloadFileOption_OnlyIfModifiedInMemory</c>.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReloadFileOptions.ReloadFileOption_OnlyIfModifiedInMemory">
      <summary>(Value 0x2) Use this option when you want to make reloading occur conditionally based on whether the file is modified in memory. You can combine this option with <c>ReloadFileOption_OnlyIfModifiedOnDisk</c>.</summary>
    </member>
    <member name="F:NationalInstruments.TestStand.Interop.UI.ReloadFileOptions.ReloadFileOption_NoOptions">
      <summary>(Value 0x0) No options.</summary>
    </member>
  </members>
</doc>